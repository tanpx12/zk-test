{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3","program":"/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","arkworks_native_gadgets","--edition=2018","/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2077efd4238be623","-C","extra-filename=-2077efd4238be623","--out-dir","/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps","-L","dependency=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps","--extern","ark_crypto_primitives=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/libark_crypto_primitives-edee954c4605de65.rmeta","--extern","ark_ff=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/libark_ff-fd636a1f4a4a7b53.rmeta","--extern","ark_std=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/libark_std-d3c3b15052fd9203.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/libarkworks_native_gadgets-2077efd4238be623.rmeta"},"prelude":{"crate_id":{"name":"arkworks_native_gadgets","disambiguator":[4631233526900542278,0]},"crate_root":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src","external_crates":[{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":4,"id":{"name":"ark_std","disambiguator":[5844926228220450330,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":6,"id":{"name":"rand","disambiguator":[4828397452497052410,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":7,"id":{"name":"rand_core","disambiguator":[4164310836774989585,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":8,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":9,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":10,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":11,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":12,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":14,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":15,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":16,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":17,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":18,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":19,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":20,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":21,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":22,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":23,"id":{"name":"getrandom","disambiguator":[3941295593317241727,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[18331605539954727293,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":26,"id":{"name":"rand_chacha","disambiguator":[10961341558952923234,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":27,"id":{"name":"ppv_lite86","disambiguator":[4878647151708755325,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":28,"id":{"name":"num_traits","disambiguator":[11593663550772388867,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":29,"id":{"name":"ark_ff","disambiguator":[6064907911212748309,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":30,"id":{"name":"derivative","disambiguator":[18312131930291817685,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":31,"id":{"name":"ark_serialize","disambiguator":[9928273523818339987,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":32,"id":{"name":"ark_serialize_derive","disambiguator":[16416490197648393697,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":33,"id":{"name":"digest","disambiguator":[17287494447085249291,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":34,"id":{"name":"generic_array","disambiguator":[10771557986127809409,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":35,"id":{"name":"typenum","disambiguator":[12951824868898580498,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":36,"id":{"name":"num_bigint","disambiguator":[6336690140438382756,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":37,"id":{"name":"num_integer","disambiguator":[17355527589189699524,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":38,"id":{"name":"zeroize","disambiguator":[13125297553964346380,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":39,"id":{"name":"zeroize_derive","disambiguator":[8833909791310612601,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":40,"id":{"name":"ark_ff_macros","disambiguator":[4508693398121080561,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":41,"id":{"name":"ark_ff_asm","disambiguator":[5303353586193482919,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","num":42,"id":{"name":"paste","disambiguator":[7811336856918714869,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":43,"id":{"name":"ark_crypto_primitives","disambiguator":[4304452433557274291,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":44,"id":{"name":"blake2","disambiguator":[15571829059302800326,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":45,"id":{"name":"crypto_mac","disambiguator":[13526091230588624695,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":46,"id":{"name":"subtle","disambiguator":[18222843904746579705,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":47,"id":{"name":"opaque_debug","disambiguator":[1310480566253112077,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":48,"id":{"name":"ark_relations","disambiguator":[8121841232918304961,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":49,"id":{"name":"tracing","disambiguator":[9389621224780600163,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":50,"id":{"name":"tracing_core","disambiguator":[16655851867119121533,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":51,"id":{"name":"tracing_attributes","disambiguator":[6083607404433122682,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":52,"id":{"name":"pin_project_lite","disambiguator":[2300276943370094789,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":53,"id":{"name":"ark_r1cs_std","disambiguator":[2035234497237921607,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":54,"id":{"name":"ark_ec","disambiguator":[15861117526786674666,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":55,"id":{"name":"ark_nonnative_field","disambiguator":[11523248702459651752,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","num":56,"id":{"name":"ark_snark","disambiguator":[6302514088742340013,0]}}],"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":0,"byte_end":1053,"line_start":1,"line_end":47,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":43,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":291,"byte_end":312,"line_start":16,"line_end":16,"column_start":10,"column_end":31},"alias_span":null,"name":"ark_crypto_primitives","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":29,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":323,"byte_end":329,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"alias_span":null,"name":"ark_ff","value":"","parent":{"krate":0,"index":258}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":340,"byte_end":347,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"alias_span":null,"name":"ark_std","value":"","parent":{"krate":0,"index":258}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":0,"byte_end":1053,"line_start":1,"line_end":47,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":89},{"krate":0,"index":171},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":268},{"krate":0,"index":270}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":34,"byte_end":40,"line_start":1,"line_end":1,"column_start":35,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"merkle_tree","qualname":"::merkle_tree","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":273},{"krate":0,"index":278},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":280},{"krate":0,"index":287},{"krate":0,"index":46},{"krate":0,"index":53},{"krate":0,"index":61},{"krate":0,"index":74},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":" This file provides a native implementation of the Sparse Merkle tree data\n structure.","sig":null,"attributes":[{"value":"/ This file provides a native implementation of the Sparse Merkle tree data","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":1758,"byte_end":1835,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ structure.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":1836,"byte_end":1850,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":1851,"byte_end":1854,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":1855,"byte_end":1869,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/ A Sparse Merkle tree is a type of Merkle tree, but it is much easier to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":1870,"byte_end":1945,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ prove non-membership in a sparse Merkle tree than in an arbitrary Merkle","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":1946,"byte_end":2022,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ tree. For an explanation of sparse Merkle trees, see:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2023,"byte_end":2080,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/ `<https://medium.com/@kelvinfichter/whats-a-sparse-merkle-tree-acda70aeb837>`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2081,"byte_end":2162,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2163,"byte_end":2166,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ In this file we define the `Path` and `SparseMerkleTree` structs.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2167,"byte_end":2236,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ These depend on your choice of a prime field F, a field hasher over F","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2237,"byte_end":2310,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ (any hash function that maps F^2 to F will do, e.g. the poseidon hash","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2311,"byte_end":2384,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ function of width 3 where an input of zero is used for padding), and the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2385,"byte_end":2461,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ height N of the sparse Merkle tree.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2462,"byte_end":2501,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2502,"byte_end":2505,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The path corresponding to a given leaf node is stored as an N-tuple of pairs","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2506,"byte_end":2586,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ of field elements. Each pair consists of a node lying on the path from the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2587,"byte_end":2665,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ leaf node to the root, and that node's sibling.  For example, suppose","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2666,"byte_end":2739,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ ```text","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2740,"byte_end":2751,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/           a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2752,"byte_end":2767,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/         /   \\","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2768,"byte_end":2785,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/        b     c","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2786,"byte_end":2804,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/       / \\   / \\","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2805,"byte_end":2824,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/      d   e f   g","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2825,"byte_end":2845,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2846,"byte_end":2853,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ is our Sparse Merkle tree, and `a` through `g` are field elements stored at","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2854,"byte_end":2933,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ the nodes. Then the merkle proof path `e-b-a` from leaf `e` to root `a` is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":2934,"byte_end":3012,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ stored as `[(d,e), (b,c)]`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3013,"byte_end":3043,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3044,"byte_end":3047,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3048,"byte_end":3059,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ ```rust","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3060,"byte_end":3071,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ //! Create a new Sparse Merkle Tree with 32 random leaves","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3072,"byte_end":3133,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3134,"byte_end":3137,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // Import dependencies","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3138,"byte_end":3164,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ use ark_bn254::Fr;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3165,"byte_end":3187,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/ use ark_ff::{BigInteger, PrimeField};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3188,"byte_end":3229,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/ use ark_std::{collections::BTreeMap, test_rng, UniformRand};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3230,"byte_end":3294,"line_start":54,"line_end":54,"column_start":1,"column_end":65}},{"value":"/ use arkworks_native_gadgets::{","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3295,"byte_end":3329,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/ \tmerkle_tree::SparseMerkleTree,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3330,"byte_end":3365,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/ \tposeidon::{sbox::PoseidonSbox, Poseidon, PoseidonParameters},","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3366,"byte_end":3432,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3433,"byte_end":3439,"line_start":58,"line_end":58,"column_start":1,"column_end":7}},{"value":"/ use arkworks_utils::{","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3440,"byte_end":3465,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/ \tbytes_matrix_to_f, bytes_vec_to_f, parse_vec, poseidon_params::setup_poseidon_params, Curve,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3466,"byte_end":3563,"line_start":60,"line_end":60,"column_start":1,"column_end":98}},{"value":"/ };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3564,"byte_end":3570,"line_start":61,"line_end":61,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3571,"byte_end":3574,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // Setup the Poseidon parameters and hasher for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3575,"byte_end":3626,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/ // Curve BN254, a width of 3, and an exponentiation of 5.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3627,"byte_end":3688,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/ let pos_data = setup_poseidon_params(Curve::Bn254, 5, 3).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3689,"byte_end":3759,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3760,"byte_end":3763,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let mds_f = bytes_matrix_to_f(&pos_data.mds);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3764,"byte_end":3813,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ let rounds_f = bytes_vec_to_f(&pos_data.rounds);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3814,"byte_end":3866,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3867,"byte_end":3870,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let pos = PoseidonParameters {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3871,"byte_end":3905,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ \tmds_matrix: mds_f,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3906,"byte_end":3929,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/ \tround_keys: rounds_f,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3930,"byte_end":3956,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/ \tfull_rounds: pos_data.full_rounds,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3957,"byte_end":3996,"line_start":73,"line_end":73,"column_start":1,"column_end":40}},{"value":"/ \tpartial_rounds: pos_data.partial_rounds,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":3997,"byte_end":4042,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"/ \tsbox: PoseidonSbox(pos_data.exp),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4043,"byte_end":4081,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/ \twidth: pos_data.width,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4082,"byte_end":4109,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4110,"byte_end":4116,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4117,"byte_end":4120,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let poseidon = Poseidon::new(pos);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4121,"byte_end":4159,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4160,"byte_end":4163,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Create a random number generator for generating 32 leaves.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4164,"byte_end":4229,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/ let rng = &mut test_rng();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4230,"byte_end":4260,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ let leaves: Vec<Fr> = vec![Fr::rand(rng); 32];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4261,"byte_end":4311,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ let pairs: BTreeMap<u32, Fr> = leaves","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4312,"byte_end":4353,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ \t.iter()","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4354,"byte_end":4366,"line_start":85,"line_end":85,"column_start":1,"column_end":13}},{"value":"/ \t.enumerate()","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4367,"byte_end":4384,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ \t.map(|(i, l)| (i as u32, *l))","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4385,"byte_end":4419,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/ \t.collect();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4420,"byte_end":4436,"line_start":88,"line_end":88,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4437,"byte_end":4440,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // Create the tree with a default leaf of zero.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4441,"byte_end":4492,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/ type SMT = SparseMerkleTree<Fr, Poseidon<Fr>, 30>;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4493,"byte_end":4547,"line_start":91,"line_end":91,"column_start":1,"column_end":55}},{"value":"/ let default_leaf = Fr::from(0u64).into_repr().to_bytes_le();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4548,"byte_end":4612,"line_start":92,"line_end":92,"column_start":1,"column_end":65}},{"value":"/ let smt = SMT::new(&pairs, &poseidon, &default_leaf).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4613,"byte_end":4679,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4680,"byte_end":4687,"line_start":94,"line_end":94,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":274},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5020,"byte_end":5031,"line_start":109,"line_end":109,"column_start":2,"column_end":13},"name":"InvalidLeaf","qualname":"::merkle_tree::MerkleError::InvalidLeaf","value":"MerkleError::InvalidLeaf","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" Thrown when the given leaf is not in the tree or the path.\n","sig":null,"attributes":[{"value":"/ Thrown when the given leaf is not in the tree or the path.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4956,"byte_end":5018,"line_start":108,"line_end":108,"column_start":2,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":276},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5079,"byte_end":5095,"line_start":111,"line_end":111,"column_start":2,"column_end":18},"name":"InvalidPathNodes","qualname":"::merkle_tree::MerkleError::InvalidPathNodes","value":"MerkleError::InvalidPathNodes","parent":{"krate":0,"index":273},"children":[],"decl_id":null,"docs":" Thrown when the merkle path is invalid.\n","sig":null,"attributes":[{"value":"/ Thrown when the merkle path is invalid.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5034,"byte_end":5077,"line_start":110,"line_end":110,"column_start":2,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":273},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4941,"byte_end":4952,"line_start":107,"line_end":107,"column_start":10,"column_end":21},"name":"MerkleError","qualname":"::merkle_tree::MerkleError","value":"pub enum MerkleError { InvalidLeaf, InvalidPathNodes, }","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276}],"decl_id":null,"docs":" Error enum for Sparse Merkle Tree.\n","sig":null,"attributes":[{"value":"/ Error enum for Sparse Merkle Tree.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":4876,"byte_end":4914,"line_start":105,"line_end":105,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5712,"byte_end":5716,"line_start":132,"line_end":132,"column_start":12,"column_end":16},"name":"Path","qualname":"::merkle_tree::Path","value":"Path { path, marker }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":286}],"decl_id":null,"docs":" The Path struct.","sig":null,"attributes":[{"value":"/ The Path struct.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5458,"byte_end":5478,"line_start":126,"line_end":126,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5479,"byte_end":5482,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The path contains a sequence of sibling nodes that make up a merkle proof.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5483,"byte_end":5561,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ Each pair is used to identify whether an incremental merkle root","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5562,"byte_end":5630,"line_start":129,"line_end":129,"column_start":1,"column_end":69}},{"value":"/ construction is valid at each intermediate step.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5631,"byte_end":5683,"line_start":130,"line_end":130,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":284},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5832,"byte_end":5836,"line_start":134,"line_end":134,"column_start":6,"column_end":10},"name":"path","qualname":"::merkle_tree::Path::path","value":"[(F, F); N]","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" The path represented as a sequence of sibling pairs.\n","sig":null,"attributes":[{"value":"/ The path represented as a sequence of sibling pairs.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5770,"byte_end":5826,"line_start":133,"line_end":133,"column_start":2,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":286},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5922,"byte_end":5928,"line_start":136,"line_end":136,"column_start":6,"column_end":12},"name":"marker","qualname":"::merkle_tree::Path::marker","value":"core::marker::PhantomData<H>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" The phantom hasher type used to reconstruct the merkle root.\n","sig":null,"attributes":[{"value":"/ The phantom hasher type used to reconstruct the merkle root.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5852,"byte_end":5916,"line_start":135,"line_end":135,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6201,"byte_end":6217,"line_start":143,"line_end":143,"column_start":9,"column_end":25},"name":"check_membership","qualname":"<Path<F, H, N>>::check_membership","value":"pub fn check_membership(&Self, &F, &F, &H) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Takes in an expected `root_hash` and leaf-level data (i.e. hashes of\n secrets) for a leaf and checks that the leaf belongs to a tree having\n the expected hash.\n","sig":null,"attributes":[{"value":"/ Takes in an expected `root_hash` and leaf-level data (i.e. hashes of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6021,"byte_end":6093,"line_start":140,"line_end":140,"column_start":2,"column_end":74}},{"value":"/ secrets) for a leaf and checks that the leaf belongs to a tree having","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6095,"byte_end":6168,"line_start":141,"line_end":141,"column_start":2,"column_end":75}},{"value":"/ the expected hash.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6170,"byte_end":6192,"line_start":142,"line_end":142,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6467,"byte_end":6481,"line_start":150,"line_end":150,"column_start":9,"column_end":23},"name":"calculate_root","qualname":"<Path<F, H, N>>::calculate_root","value":"pub fn calculate_root(&Self, &F, &H) -> Result<F, Error>","parent":null,"children":[],"decl_id":null,"docs":" Assumes leaf contains leaf-level data, i.e. hashes of secrets\n stored on leaf-level.\n","sig":null,"attributes":[{"value":"/ Assumes leaf contains leaf-level data, i.e. hashes of secrets","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6366,"byte_end":6431,"line_start":148,"line_end":148,"column_start":2,"column_end":67}},{"value":"/ stored on leaf-level.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6433,"byte_end":6458,"line_start":149,"line_end":149,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7161,"byte_end":7170,"line_start":170,"line_end":170,"column_start":9,"column_end":18},"name":"get_index","qualname":"<Path<F, H, N>>::get_index","value":"pub fn get_index(&Self, &F, &F, &H) -> Result<F, Error>","parent":null,"children":[],"decl_id":null,"docs":" Given leaf data determine what the index of this leaf must be\n in the Merkle tree it belongs to.  Before doing so check that the leaf\n does indeed belong to a tree with the given `root_hash`\n","sig":null,"attributes":[{"value":"/ Given leaf data determine what the index of this leaf must be","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6950,"byte_end":7015,"line_start":167,"line_end":167,"column_start":2,"column_end":67}},{"value":"/ in the Merkle tree it belongs to.  Before doing so check that the leaf","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7017,"byte_end":7091,"line_start":168,"line_end":168,"column_start":2,"column_end":76}},{"value":"/ does indeed belong to a tree with the given `root_hash`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7093,"byte_end":7152,"line_start":169,"line_end":169,"column_start":2,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7972,"byte_end":7988,"line_start":197,"line_end":197,"column_start":12,"column_end":28},"name":"SparseMerkleTree","qualname":"::merkle_tree::SparseMerkleTree","value":"SparseMerkleTree { tree }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" The Sparse Merkle Tree struct.","sig":null,"attributes":[{"value":"/ The Sparse Merkle Tree struct.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7761,"byte_end":7795,"line_start":192,"line_end":192,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7796,"byte_end":7799,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ The Sparse Merkle Tree stores a set of leaves represented in a map and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7800,"byte_end":7874,"line_start":194,"line_end":194,"column_start":1,"column_end":75}},{"value":"/ a set of empty hashes that it uses to represent the sparse areas of the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7875,"byte_end":7950,"line_start":195,"line_end":195,"column_start":1,"column_end":76}},{"value":"/ tree.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":7951,"byte_end":7960,"line_start":196,"line_end":196,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":57},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":8114,"byte_end":8118,"line_start":199,"line_end":199,"column_start":6,"column_end":10},"name":"tree","qualname":"::merkle_tree::SparseMerkleTree::tree","value":"ark_std::collections::BTreeMap<u64, F>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" A map from leaf indices to leaf data stored as field elements.\n","sig":null,"attributes":[{"value":"/ A map from leaf indices to leaf data stored as field elements.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":8042,"byte_end":8108,"line_start":198,"line_end":198,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":8514,"byte_end":8526,"line_start":209,"line_end":209,"column_start":9,"column_end":21},"name":"insert_batch","qualname":"<SparseMerkleTree<F, H, N>>::insert_batch","value":"pub fn insert_batch(&mut Self, &BTreeMap<u32, F>, &H) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Takes a batch of field elements, inserts\n these hashes into the tree, and updates the merkle root.\n","sig":null,"attributes":[{"value":"/ Takes a batch of field elements, inserts","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":8399,"byte_end":8443,"line_start":207,"line_end":207,"column_start":2,"column_end":46}},{"value":"/ these hashes into the tree, and updates the merkle root.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":8445,"byte_end":8505,"line_start":208,"line_end":208,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":9602,"byte_end":9605,"line_start":245,"line_end":245,"column_start":9,"column_end":12},"name":"new","qualname":"<SparseMerkleTree<F, H, N>>::new","value":"pub fn new(&BTreeMap<u32, F>, &H, &[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Sparse Merkle Tree from a map of indices to field\n elements.\n","sig":null,"attributes":[{"value":"/ Creates a new Sparse Merkle Tree from a map of indices to field","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":9511,"byte_end":9578,"line_start":243,"line_end":243,"column_start":2,"column_end":69}},{"value":"/ elements.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":9580,"byte_end":9593,"line_start":244,"line_end":244,"column_start":2,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":10298,"byte_end":10312,"line_start":267,"line_end":267,"column_start":9,"column_end":23},"name":"new_sequential","qualname":"<SparseMerkleTree<F, H, N>>::new_sequential","value":"pub fn new_sequential(&[F], &H, &[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Sparse Merkle Tree from an array of field elements.\n","sig":null,"attributes":[{"value":"/ Creates a new Sparse Merkle Tree from an array of field elements.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":10220,"byte_end":10289,"line_start":266,"line_end":266,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":10614,"byte_end":10618,"line_start":279,"line_end":279,"column_start":9,"column_end":13},"name":"root","qualname":"<SparseMerkleTree<F, H, N>>::root","value":"pub fn root(&Self) -> F","parent":null,"children":[],"decl_id":null,"docs":" Returns the Merkle tree root.\n","sig":null,"attributes":[{"value":"/ Returns the Merkle tree root.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":10572,"byte_end":10605,"line_start":278,"line_end":278,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":10895,"byte_end":10920,"line_start":289,"line_end":289,"column_start":9,"column_end":34},"name":"generate_membership_proof","qualname":"<SparseMerkleTree<F, H, N>>::generate_membership_proof","value":"pub fn generate_membership_proof(&Self, u64) -> Path<F, H, >","parent":null,"children":[],"decl_id":null,"docs":" Give the path leading from the leaf at `index` up to the root.  This is\n a \"proof\" in the sense of \"valid path in a Merkle tree\", not a ZK\n argument.\n","sig":null,"attributes":[{"value":"/ Give the path leading from the leaf at `index` up to the root.  This is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":10725,"byte_end":10800,"line_start":286,"line_end":286,"column_start":2,"column_end":77}},{"value":"/ a \"proof\" in the sense of \"valid path in a Merkle tree\", not a ZK","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":10802,"byte_end":10871,"line_start":287,"line_end":287,"column_start":2,"column_end":71}},{"value":"/ argument.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":10873,"byte_end":10886,"line_start":288,"line_end":288,"column_start":2,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":12149,"byte_end":12165,"line_start":335,"line_end":335,"column_start":8,"column_end":24},"name":"gen_empty_hashes","qualname":"::merkle_tree::gen_empty_hashes","value":"pub fn gen_empty_hashes<F: PrimeField, H: FieldHasher<F>, const N:\nusize>(&H, &[u8]) -> Result<[F; ], Error>","parent":null,"children":[],"decl_id":null,"docs":" A function to generate empty hashes with a given `default_leaf`.","sig":null,"attributes":[{"value":"/ A function to generate empty hashes with a given `default_leaf`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":11819,"byte_end":11887,"line_start":329,"line_end":329,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":11888,"byte_end":11891,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ Given a `FieldHasher`, generate a list of `N` hashes consisting","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":11892,"byte_end":11959,"line_start":331,"line_end":331,"column_start":1,"column_end":68}},{"value":"/ of the `default_leaf` hashed with itself and repeated `N` times","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":11960,"byte_end":12027,"line_start":332,"line_end":332,"column_start":1,"column_end":68}},{"value":"/ with the intermediate results. These are used to initialize the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":12028,"byte_end":12095,"line_start":333,"line_end":333,"column_start":1,"column_end":68}},{"value":"/ sparse portion of the Sparse Merkle Tree.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":12096,"byte_end":12141,"line_start":334,"line_end":334,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mimc","qualname":"::mimc","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":299},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":130},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":161}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":295},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20314,"byte_end":20327,"line_start":10,"line_end":10,"column_start":2,"column_end":15},"name":"InvalidInputs","qualname":"::mimc::MiMCError::InvalidInputs","value":"MiMCError::InvalidInputs","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":294},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20301,"byte_end":20310,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"MiMCError","qualname":"::mimc::MiMCError","value":"pub enum MiMCError { InvalidInputs, }","parent":null,"children":[{"krate":0,"index":295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20642,"byte_end":20656,"line_start":26,"line_end":26,"column_start":12,"column_end":26},"name":"MiMCParameters","qualname":"::mimc::MiMCParameters","value":"MiMCParameters { k, rounds, num_inputs, num_outputs, round_keys }","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":301},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20667,"byte_end":20668,"line_start":27,"line_end":27,"column_start":6,"column_end":7},"name":"k","qualname":"::mimc::MiMCParameters::k","value":"F","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":302},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20678,"byte_end":20684,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"name":"rounds","qualname":"::mimc::MiMCParameters::rounds","value":"usize","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":303},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20698,"byte_end":20708,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"name":"num_inputs","qualname":"::mimc::MiMCParameters::num_inputs","value":"usize","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":304},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20722,"byte_end":20733,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"name":"num_outputs","qualname":"::mimc::MiMCParameters::num_outputs","value":"usize","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":305},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20747,"byte_end":20757,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"name":"round_keys","qualname":"::mimc::MiMCParameters::round_keys","value":"ark_std::vec::Vec<F>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20818,"byte_end":20821,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"name":"new","qualname":"<MiMCParameters<F>>::new","value":"pub fn new(F, usize, usize, usize, Vec<F>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21014,"byte_end":21022,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"generate","qualname":"<MiMCParameters<F>>::generate","value":"pub fn generate<R: Rng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21194,"byte_end":21211,"line_start":61,"line_end":61,"column_start":9,"column_end":26},"name":"create_round_keys","qualname":"<MiMCParameters<F>>::create_round_keys","value":"pub fn create_round_keys<R: Rng>(&mut R) -> Vec<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":137},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21273,"byte_end":21279,"line_start":66,"line_end":66,"column_start":11,"column_end":17},"name":"Rounds","qualname":"::mimc::Rounds","value":"Rounds: Default + Clone","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21340,"byte_end":21345,"line_start":68,"line_end":68,"column_start":8,"column_end":13},"name":"WIDTH","qualname":"::mimc::Rounds::WIDTH","value":"u8","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" The size of the input vector\n","sig":null,"attributes":[{"value":"/ The size of the input vector","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21300,"byte_end":21332,"line_start":67,"line_end":67,"column_start":2,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":139},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21385,"byte_end":21391,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"ROUNDS","qualname":"::mimc::Rounds::ROUNDS","value":"u16","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Number of mimc rounds\n","sig":null,"attributes":[{"value":"/ Number of mimc rounds","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21352,"byte_end":21377,"line_start":69,"line_end":69,"column_start":2,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21412,"byte_end":21415,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"CRH","qualname":"::mimc::CRH","value":"CRH {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":171},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"poseidon","qualname":"::poseidon","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":327},{"krate":0,"index":335},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":337},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":224},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":248}],"decl_id":null,"docs":" A native implementation of the Poseidon hash function.","sig":null,"attributes":[{"value":"/ A native implementation of the Poseidon hash function.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":26638,"byte_end":26696,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":26697,"byte_end":26700,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The Poseidon hash function takes in a vector of elements of a prime field","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":26701,"byte_end":26778,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ `F`, and outputs an element of `F`. This means it has the `FieldHasher`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":26779,"byte_end":26854,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ trait.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":26855,"byte_end":26865,"line_start":22,"line_end":22,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":26866,"byte_end":26869,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The `width` parameter is the length of the input vector plus one.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":26870,"byte_end":26939,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ This is because before hashing, we append one entry of zero to the input","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":26940,"byte_end":27016,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ vector.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27017,"byte_end":27028,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27029,"byte_end":27032,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ After this initial padding, Poseidon hashes the input vector through a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27033,"byte_end":27107,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ number of cryptographic rounds, which can either be full rounds or partial","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27108,"byte_end":27186,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ rounds. (After the input vector begins to be processed, we call it the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27187,"byte_end":27261,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ *state* vector).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27262,"byte_end":27282,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27283,"byte_end":27286,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Each round is of the form ARC --> SB --> M, where","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27287,"byte_end":27340,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/ - ARC stands for \"add round constants.\"","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27341,"byte_end":27384,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/ - SB stands for \"S-box\", (or \"sub words\") which means","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27385,"byte_end":27442,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ \t- raising **all** entries of the state vector to a fixed power alpha,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27443,"byte_end":27517,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ \tin a full round.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27518,"byte_end":27539,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/ \t- raising **only the first** entry of the state vector to a fixed power","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27540,"byte_end":27616,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ \talpha, in a partial round.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27617,"byte_end":27648,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ - M stands for \"mix layer,\" which means multiplying the state vector by a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27649,"byte_end":27726,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/   fixed [MDS matrix](https://en.wikipedia.org/wiki/MDS_matrix).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27727,"byte_end":27794,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27795,"byte_end":27798,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The output is the first entry of the state vector after the final round.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27799,"byte_end":27875,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27876,"byte_end":27879,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The round constants and MDS matrix are precomputed and passed to Poseidon as","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27880,"byte_end":27960,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ parameters `round_keys` and `mds_matrix`, respectively.  There is a separate","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":27961,"byte_end":28041,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ module `sbox` for setting the exponent alpha, which is passed to Poseidon as","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28042,"byte_end":28122,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ `sbox.0`.  Common values of alpha, which are supported in `sbox`, are","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28123,"byte_end":28196,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ 3, 5, 17, and -1: the default value is 5.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28197,"byte_end":28242,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28243,"byte_end":28246,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Note that this is the *original* Poseidon hash function described in [the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28247,"byte_end":28324,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ paper of Grassi, Khovratovich,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28325,"byte_end":28359,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/ Rechberger, Roy, and Schofnegger](https://eprint.iacr.org/2019/458.pdf),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28360,"byte_end":28436,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ and NOT the optimized version described in","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28437,"byte_end":28483,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [this page by Feng](https://hackmd.io/8MdoHwoKTPmQfZyIKEYWXQ).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28484,"byte_end":28550,"line_start":55,"line_end":55,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":208},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sbox","qualname":"::poseidon::sbox","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":215},{"krate":0,"index":217}],"decl_id":null,"docs":" The S-box used in the Poseidon hash function.","sig":null,"attributes":[{"value":"/ The S-box used in the Poseidon hash function.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":43983,"byte_end":44032,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44033,"byte_end":44036,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `PoseidonSbox` struct contains only one signed 8-bit integer.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44037,"byte_end":44106,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ In the notation of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44107,"byte_end":44129,"line_start":4,"line_end":4,"column_start":1,"column_end":23}},{"value":"/ [the original Poseidon paper](https://eprint.iacr.org/2019/458.pdf),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44130,"byte_end":44202,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ this is alpha.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44203,"byte_end":44221,"line_start":6,"line_end":6,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44222,"byte_end":44225,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The value of alpha can be either 3, 5, 17, or -1: the default is 5.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44226,"byte_end":44297,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ Trying to use any other value will result in a `PoseidonError`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44298,"byte_end":44365,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44366,"byte_end":44369,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The `apply_sbox` method takes an element of a prime field `F`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44370,"byte_end":44435,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ and raises it to the power alpha (in `F`).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44436,"byte_end":44482,"line_start":12,"line_end":12,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44691,"byte_end":44703,"line_start":20,"line_end":20,"column_start":12,"column_end":24},"name":"PoseidonSbox","qualname":"::poseidon::sbox::PoseidonSbox","value":"","parent":null,"children":[],"decl_id":null,"docs":" The PoseidonSbox struct contains just a public signed 8-bit integer.\n","sig":null,"attributes":[{"value":"/ The PoseidonSbox struct contains just a public signed 8-bit integer.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44562,"byte_end":44634,"line_start":18,"line_end":18,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":314},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44704,"byte_end":44710,"line_start":20,"line_end":20,"column_start":25,"column_end":31},"name":"0","qualname":"::poseidon::sbox::PoseidonSbox::0","value":"i8","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":45074,"byte_end":45084,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"name":"apply_sbox","qualname":"<PoseidonSbox>::apply_sbox","value":"pub fn apply_sbox<F: PrimeField>(&Self, F) -> Result<F, PoseidonError>","parent":null,"children":[],"decl_id":null,"docs":" Takes in an element of a prime field and raises it to the power alpha\n (`sbox.0`) within that field. The method assumes that alpha is either 3,\n 5, 17, or -1. If not, it throws `PoseidonError`.\n","sig":null,"attributes":[{"value":"/ Takes in an element of a prime field and raises it to the power alpha","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44860,"byte_end":44933,"line_start":30,"line_end":30,"column_start":2,"column_end":75}},{"value":"/ (`sbox.0`) within that field. The method assumes that alpha is either 3,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44935,"byte_end":45011,"line_start":31,"line_end":31,"column_start":2,"column_end":78}},{"value":"/ 5, 17, or -1. If not, it throws `PoseidonError`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":45013,"byte_end":45065,"line_start":32,"line_end":32,"column_start":2,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":328},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29067,"byte_end":29082,"line_start":74,"line_end":74,"column_start":2,"column_end":17},"name":"InvalidSboxSize","qualname":"::poseidon::PoseidonError::InvalidSboxSize","value":"PoseidonError::InvalidSboxSize(i8)","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":" Thrown if the S-box exponent alpha is not 3, 5, 17, or -1.\n","sig":null,"attributes":[{"value":"/ Thrown if the S-box exponent alpha is not 3, 5, 17, or -1.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29003,"byte_end":29065,"line_start":73,"line_end":73,"column_start":2,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29184,"byte_end":29199,"line_start":78,"line_end":78,"column_start":2,"column_end":17},"name":"ApplySboxFailed","qualname":"::poseidon::PoseidonError::ApplySboxFailed","value":"PoseidonError::ApplySboxFailed","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":" Thrown if the exponent alpha is -1 and the S-box tries to\n take the inverse of zero.\n","sig":null,"attributes":[{"value":"/ Thrown if the exponent alpha is -1 and the S-box tries to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29090,"byte_end":29151,"line_start":76,"line_end":76,"column_start":2,"column_end":63}},{"value":"/ take the inverse of zero.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29153,"byte_end":29182,"line_start":77,"line_end":77,"column_start":2,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29321,"byte_end":29334,"line_start":82,"line_end":82,"column_start":2,"column_end":15},"name":"InvalidInputs","qualname":"::poseidon::PoseidonError::InvalidInputs","value":"PoseidonError::InvalidInputs","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":" Thrown if the user attempts to input a vector whose length is\n greater than the `width` parameter minus one.\n","sig":null,"attributes":[{"value":"/ Thrown if the user attempts to input a vector whose length is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29203,"byte_end":29268,"line_start":80,"line_end":80,"column_start":2,"column_end":67}},{"value":"/ greater than the `width` parameter minus one.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29270,"byte_end":29319,"line_start":81,"line_end":81,"column_start":2,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":327},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28986,"byte_end":28999,"line_start":72,"line_end":72,"column_start":10,"column_end":23},"name":"PoseidonError","qualname":"::poseidon::PoseidonError","value":"pub enum PoseidonError {\n    InvalidSboxSize(i8),\n    ApplySboxFailed,\n    InvalidInputs,\n}","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":333}],"decl_id":null,"docs":" Error enum for the Poseidon hash function.  ","sig":null,"attributes":[{"value":"/ Error enum for the Poseidon hash function.  ","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28853,"byte_end":28901,"line_start":69,"line_end":69,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28902,"byte_end":28905,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ See Variants for more information about when this error is thrown.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28906,"byte_end":28976,"line_start":71,"line_end":71,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29877,"byte_end":29895,"line_start":102,"line_end":102,"column_start":12,"column_end":30},"name":"PoseidonParameters","qualname":"::poseidon::PoseidonParameters","value":"PoseidonParameters { round_keys, mds_matrix, full_rounds, partial_rounds, width, sbox }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"decl_id":null,"docs":" Parameters for the Poseidon hash function.\n","sig":null,"attributes":[{"value":"/ Parameters for the Poseidon hash function.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29786,"byte_end":29832,"line_start":100,"line_end":100,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":339},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29939,"byte_end":29949,"line_start":104,"line_end":104,"column_start":6,"column_end":16},"name":"round_keys","qualname":"::poseidon::PoseidonParameters::round_keys","value":"ark_std::vec::Vec<F>","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Round constants\n","sig":null,"attributes":[{"value":"/ Round constants","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29914,"byte_end":29933,"line_start":103,"line_end":103,"column_start":2,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":340},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30008,"byte_end":30018,"line_start":107,"line_end":107,"column_start":6,"column_end":16},"name":"mds_matrix","qualname":"::poseidon::PoseidonParameters::mds_matrix","value":"ark_std::vec::Vec<ark_std::vec::Vec<F>>","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" MDS matrix to apply in the mix layer.\n","sig":null,"attributes":[{"value":"/ MDS matrix to apply in the mix layer.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29961,"byte_end":30002,"line_start":106,"line_end":106,"column_start":2,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":341},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30066,"byte_end":30077,"line_start":110,"line_end":110,"column_start":6,"column_end":17},"name":"full_rounds","qualname":"::poseidon::PoseidonParameters::full_rounds","value":"u8","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Number of full rounds\n","sig":null,"attributes":[{"value":"/ Number of full rounds","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30035,"byte_end":30060,"line_start":109,"line_end":109,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":342},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30119,"byte_end":30133,"line_start":113,"line_end":113,"column_start":6,"column_end":20},"name":"partial_rounds","qualname":"::poseidon::PoseidonParameters::partial_rounds","value":"u8","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Number of partial rounds\n","sig":null,"attributes":[{"value":"/ Number of partial rounds","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30085,"byte_end":30113,"line_start":112,"line_end":112,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":343},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30213,"byte_end":30218,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"name":"width","qualname":"::poseidon::PoseidonParameters::width","value":"u8","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Length of the input, in field elements, plus one zero element.\n","sig":null,"attributes":[{"value":"/ Length of the input, in field elements, plus one zero element.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30141,"byte_end":30207,"line_start":115,"line_end":115,"column_start":2,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":344},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30274,"byte_end":30278,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"name":"sbox","qualname":"::poseidon::PoseidonParameters::sbox","value":"poseidon::sbox::PoseidonSbox","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" S-box to apply in the sub words layer.\n","sig":null,"attributes":[{"value":"/ S-box to apply in the sub words layer.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30226,"byte_end":30268,"line_start":118,"line_end":118,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30349,"byte_end":30352,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"name":"new","qualname":"<PoseidonParameters<F>>::new","value":"pub fn new(Vec<F>, Vec<Vec<F>>, u8, u8, u8, PoseidonSbox) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30601,"byte_end":30609,"line_start":141,"line_end":141,"column_start":9,"column_end":17},"name":"generate","qualname":"<PoseidonParameters<F>>::generate","value":"pub fn generate<R: Rng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30996,"byte_end":31006,"line_start":150,"line_end":150,"column_start":9,"column_end":19},"name":"create_mds","qualname":"<PoseidonParameters<F>>::create_mds","value":"pub fn create_mds<R: Rng>(&mut R) -> Vec<Vec<F>>","parent":null,"children":[],"decl_id":null,"docs":" The MDS matrices used for the Poseidon hash functions of widths 2-17\n have been pre-computed, audited for security, and published.\n If we wanted to generated our own MDS matrix we could write and use\n this function, but for the moment we only use the published matrices,\n so it remains unimplemented.\n","sig":null,"attributes":[{"value":"/ The MDS matrices used for the Poseidon hash functions of widths 2-17","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30667,"byte_end":30739,"line_start":145,"line_end":145,"column_start":2,"column_end":74}},{"value":"/ have been pre-computed, audited for security, and published.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30741,"byte_end":30805,"line_start":146,"line_end":146,"column_start":2,"column_end":66}},{"value":"/ If we wanted to generated our own MDS matrix we could write and use","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30807,"byte_end":30878,"line_start":147,"line_end":147,"column_start":2,"column_end":73}},{"value":"/ this function, but for the moment we only use the published matrices,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30880,"byte_end":30953,"line_start":148,"line_end":148,"column_start":2,"column_end":75}},{"value":"/ so it remains unimplemented.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30955,"byte_end":30987,"line_start":149,"line_end":149,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31415,"byte_end":31432,"line_start":159,"line_end":159,"column_start":9,"column_end":26},"name":"create_round_keys","qualname":"<PoseidonParameters<F>>::create_round_keys","value":"pub fn create_round_keys<R: Rng>(&mut R) -> Vec<F>","parent":null,"children":[],"decl_id":null,"docs":" The round constants used for the Poseidon hash functions of widths 2-17\n have been pre-computed, audited for security, and published.\n If we wanted to generated our own round constants we could write and use\n this function, but for the moment we only use the published round\n constants, so it remains unimplemented.\n","sig":null,"attributes":[{"value":"/ The round constants used for the Poseidon hash functions of widths 2-17","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31071,"byte_end":31146,"line_start":154,"line_end":154,"column_start":2,"column_end":77}},{"value":"/ have been pre-computed, audited for security, and published.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31148,"byte_end":31212,"line_start":155,"line_end":155,"column_start":2,"column_end":66}},{"value":"/ If we wanted to generated our own round constants we could write and use","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31214,"byte_end":31290,"line_start":156,"line_end":156,"column_start":2,"column_end":78}},{"value":"/ this function, but for the moment we only use the published round","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31292,"byte_end":31361,"line_start":157,"line_end":157,"column_start":2,"column_end":71}},{"value":"/ constants, so it remains unimplemented.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31363,"byte_end":31406,"line_start":158,"line_end":158,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31813,"byte_end":31821,"line_start":168,"line_end":168,"column_start":9,"column_end":17},"name":"to_bytes","qualname":"<PoseidonParameters<F>>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the PoseidonParameters struct as a bytestring (vector of u8\n integers), in the following way: [width, number of full rounds, number\n of partial rounds, S-box exponent alpha, round constant length, round\n constants, MDS matrix length, MDS matrix]. Bytes are stored the\n big-endian way.\n","sig":null,"attributes":[{"value":"/ Encodes the PoseidonParameters struct as a bytestring (vector of u8","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31492,"byte_end":31563,"line_start":163,"line_end":163,"column_start":2,"column_end":73}},{"value":"/ integers), in the following way: [width, number of full rounds, number","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31565,"byte_end":31639,"line_start":164,"line_end":164,"column_start":2,"column_end":76}},{"value":"/ of partial rounds, S-box exponent alpha, round constant length, round","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31641,"byte_end":31714,"line_start":165,"line_end":165,"column_start":2,"column_end":75}},{"value":"/ constants, MDS matrix length, MDS matrix]. Bytes are stored the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31716,"byte_end":31783,"line_start":166,"line_end":166,"column_start":2,"column_end":69}},{"value":"/ big-endian way.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":31785,"byte_end":31804,"line_start":167,"line_end":167,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":33457,"byte_end":33467,"line_start":209,"line_end":209,"column_start":9,"column_end":19},"name":"from_bytes","qualname":"<PoseidonParameters<F>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a (valid) bytestring into a PoseidonParameters struct.\n Throws an error if the bytestring is not valid, i.e., is not the result\n of encoding an instance of PoseidonParameters with `to_bytes`.\n","sig":null,"attributes":[{"value":"/ Decodes a (valid) bytestring into a PoseidonParameters struct.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":33237,"byte_end":33303,"line_start":206,"line_end":206,"column_start":2,"column_end":68}},{"value":"/ Throws an error if the bytestring is not valid, i.e., is not the result","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":33305,"byte_end":33380,"line_start":207,"line_end":207,"column_start":2,"column_end":77}},{"value":"/ of encoding an instance of PoseidonParameters with `to_bytes`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":33382,"byte_end":33448,"line_start":208,"line_end":208,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35282,"byte_end":35290,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"Poseidon","qualname":"::poseidon::Poseidon","value":"Poseidon { params }","parent":null,"children":[{"krate":0,"index":356}],"decl_id":null,"docs":" The Poseidon hash function struct.  As a struct it contains just\n one field `params`, which holds an instance of the `PoseidonParameters`\n struct.  The real magic happens in the implementation of the `FieldHasher`\n trait, which is where the Poseidon hashing algorithm can be found.\n","sig":null,"attributes":[{"value":"/ The Poseidon hash function struct.  As a struct it contains just","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":34976,"byte_end":35044,"line_start":260,"line_end":260,"column_start":1,"column_end":69}},{"value":"/ one field `params`, which holds an instance of the `PoseidonParameters`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35045,"byte_end":35120,"line_start":261,"line_end":261,"column_start":1,"column_end":76}},{"value":"/ struct.  The real magic happens in the implementation of the `FieldHasher`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35121,"byte_end":35199,"line_start":262,"line_end":262,"column_start":1,"column_end":79}},{"value":"/ trait, which is where the Poseidon hashing algorithm can be found.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35200,"byte_end":35270,"line_start":263,"line_end":263,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":356},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35313,"byte_end":35319,"line_start":265,"line_end":265,"column_start":6,"column_end":12},"name":"params","qualname":"::poseidon::Poseidon::params","value":"poseidon::PoseidonParameters<F>","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35389,"byte_end":35392,"line_start":269,"line_end":269,"column_start":9,"column_end":12},"name":"new","qualname":"<Poseidon<F>>::new","value":"pub fn new(PoseidonParameters<F>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35636,"byte_end":35647,"line_start":277,"line_end":277,"column_start":11,"column_end":22},"name":"FieldHasher","qualname":"::poseidon::FieldHasher","value":"FieldHasher<F: PrimeField>","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" A field hasher over a prime field `F` is any cryptographic hash function\n that takes in a vector of elements of `F` and outputs a single element\n of `F`.\n","sig":null,"attributes":[{"value":"/ A field hasher over a prime field `F` is any cryptographic hash function","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35462,"byte_end":35538,"line_start":274,"line_end":274,"column_start":1,"column_end":77}},{"value":"/ that takes in a vector of elements of `F` and outputs a single element","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35539,"byte_end":35613,"line_start":275,"line_end":275,"column_start":1,"column_end":75}},{"value":"/ of `F`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35614,"byte_end":35625,"line_start":276,"line_end":276,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35669,"byte_end":35673,"line_start":278,"line_end":278,"column_start":5,"column_end":9},"name":"hash","qualname":"::poseidon::FieldHasher::hash","value":"pub fn hash(&Self, &[F]) -> Result<F, PoseidonError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35914,"byte_end":35922,"line_start":283,"line_end":283,"column_start":5,"column_end":13},"name":"hash_two","qualname":"::poseidon::FieldHasher::hash_two","value":"pub fn hash_two(&Self, &F, &F) -> Result<F, PoseidonError>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" With this method we separate the special case when the length of the\n input vector is 2, since hashing together two field elements is\n particularly useful in Merkle trees.\n","sig":null,"attributes":[{"value":"/ With this method we separate the special case when the length of the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35726,"byte_end":35798,"line_start":280,"line_end":280,"column_start":2,"column_end":74}},{"value":"/ input vector is 2, since hashing together two field elements is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35800,"byte_end":35867,"line_start":281,"line_end":281,"column_start":2,"column_end":69}},{"value":"/ particularly useful in Merkle trees.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35869,"byte_end":35909,"line_start":282,"line_end":282,"column_start":2,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":257},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":223,"byte_end":228,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Box<dyn ark_std::error::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":258},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":272,"byte_end":279,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":268},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":359,"byte_end":376,"line_start":21,"line_end":21,"column_start":8,"column_end":25},"name":"to_field_elements","qualname":"::to_field_elements","value":"pub fn to_field_elements<F: PrimeField>(&[u8]) -> Result<Vec<F>, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":270},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":844,"byte_end":863,"line_start":40,"line_end":40,"column_start":8,"column_end":27},"name":"from_field_elements","qualname":"::from_field_elements","value":"pub fn from_field_elements<F: PrimeField>(&[F]) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5128,"byte_end":5139,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5442,"byte_end":5453,"line_start":124,"line_end":124,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6004,"byte_end":6008,"line_start":139,"line_end":139,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":8370,"byte_end":8386,"line_start":206,"line_end":206,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20360,"byte_end":20369,"line_start":13,"line_end":13,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20591,"byte_end":20600,"line_start":23,"line_end":23,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20790,"byte_end":20804,"line_start":34,"line_end":34,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21527,"byte_end":21530,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":22948,"byte_end":22951,"line_start":153,"line_end":153,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":23986,"byte_end":23989,"line_start":187,"line_end":187,"column_start":48,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44776,"byte_end":44788,"line_start":23,"line_end":23,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44844,"byte_end":44856,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29405,"byte_end":29418,"line_start":86,"line_end":86,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29768,"byte_end":29781,"line_start":98,"line_end":98,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30317,"byte_end":30335,"line_start":122,"line_end":122,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35367,"byte_end":35375,"line_start":268,"line_end":268,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":36055,"byte_end":36063,"line_start":287,"line_end":287,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":168,"byte_end":179,"line_start":9,"line_end":9,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":189,"byte_end":193,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":89}},{"kind":"Mod","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/lib.rs","byte_start":203,"byte_end":211,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":171}},{"kind":"Mod","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":28828,"byte_end":28832,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":208}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5128,"byte_end":5139,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":273},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":5442,"byte_end":5453,"line_start":124,"line_end":124,"column_start":32,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":273},"to":{"krate":4,"index":166}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":6004,"byte_end":6008,"line_start":139,"line_end":139,"column_start":56,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/merkle_tree.rs","byte_start":8370,"byte_end":8386,"line_start":206,"line_end":206,"column_start":56,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20360,"byte_end":20369,"line_start":13,"line_end":13,"column_start":29,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":294},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20591,"byte_end":20600,"line_start":23,"line_end":23,"column_start":19,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":294},"to":{"krate":4,"index":166}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":20790,"byte_end":20804,"line_start":34,"line_end":34,"column_start":21,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21281,"byte_end":21288,"line_start":66,"line_end":66,"column_start":19,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3035},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21291,"byte_end":21296,"line_start":66,"line_end":66,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2679},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":21527,"byte_end":21530,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":22948,"byte_end":22951,"line_start":153,"line_end":153,"column_start":45,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":140},"to":{"krate":43,"index":1195}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/mimc.rs","byte_start":23986,"byte_end":23989,"line_start":187,"line_end":187,"column_start":48,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":140},"to":{"krate":43,"index":1202}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44776,"byte_end":44788,"line_start":23,"line_end":23,"column_start":18,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":312},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/sbox.rs","byte_start":44844,"byte_end":44856,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29405,"byte_end":29418,"line_start":86,"line_end":86,"column_start":29,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":29768,"byte_end":29781,"line_start":98,"line_end":98,"column_start":19,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":327},"to":{"krate":4,"index":166}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":30317,"byte_end":30335,"line_start":122,"line_end":122,"column_start":21,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":35367,"byte_end":35375,"line_start":268,"line_end":268,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/arkworks-native-gadgets-0.5.3/src/poseidon/mod.rs","byte_start":36055,"byte_end":36063,"line_start":287,"line_end":287,"column_start":40,"column_end":48},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":354},"to":{"krate":0,"index":244}}]}