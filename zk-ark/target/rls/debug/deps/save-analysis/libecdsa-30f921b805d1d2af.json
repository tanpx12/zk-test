{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4","program":"/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ecdsa","--edition=2021","/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"arithmetic\"","--cfg","feature=\"der\"","--cfg","feature=\"digest\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"rfc6979\"","--cfg","feature=\"sign\"","--cfg","feature=\"std\"","--cfg","feature=\"verify\"","-C","metadata=30f921b805d1d2af","-C","extra-filename=-30f921b805d1d2af","--out-dir","/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps","-L","dependency=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps","--extern","der=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/libder-4e1cdc85ea335114.rmeta","--extern","elliptic_curve=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/libelliptic_curve-e46ac84540d30454.rmeta","--extern","rfc6979=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/librfc6979-48c5e1bbe9b4cb36.rmeta","--extern","signature=/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/libsignature-88a11a2ab506e141.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tanpx/Desktop/rust-playground/zk-ark/target/rls/debug/deps/libecdsa-30f921b805d1d2af.rmeta"},"prelude":{"crate_id":{"name":"ecdsa","disambiguator":[13616916002662467558,0]},"crate_root":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src","external_crates":[{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":5,"id":{"name":"der","disambiguator":[9274519821903414986,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":6,"id":{"name":"const_oid","disambiguator":[15371614715708163642,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":7,"id":{"name":"elliptic_curve","disambiguator":[12780825230438627311,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":8,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":9,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":10,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":11,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":12,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":14,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":15,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":16,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":17,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":18,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":19,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":20,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":21,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":22,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":23,"id":{"name":"crypto_bigint","disambiguator":[7952263331609440958,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":24,"id":{"name":"generic_array","disambiguator":[10771557986127809409,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":25,"id":{"name":"typenum","disambiguator":[12951824868898580498,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":26,"id":{"name":"subtle","disambiguator":[18222843904746579705,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":27,"id":{"name":"rand_core","disambiguator":[4164310836774989585,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":28,"id":{"name":"getrandom","disambiguator":[3941295593317241727,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":29,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":30,"id":{"name":"libc","disambiguator":[18331605539954727293,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":31,"id":{"name":"zeroize","disambiguator":[13125297553964346380,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":32,"id":{"name":"zeroize_derive","disambiguator":[8833909791310612601,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":33,"id":{"name":"group","disambiguator":[15732433697109616994,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":34,"id":{"name":"ff","disambiguator":[6724031291602095081,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":35,"id":{"name":"sec1","disambiguator":[9708642766142467332,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":36,"id":{"name":"pkcs8","disambiguator":[840795888749407728,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":37,"id":{"name":"spki","disambiguator":[10808895318522168594,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","num":38,"id":{"name":"base16ct","disambiguator":[7227140462002639331,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","num":39,"id":{"name":"signature","disambiguator":[13619113549193031015,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","num":40,"id":{"name":"digest","disambiguator":[17287494447085249291,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","num":41,"id":{"name":"rfc6979","disambiguator":[1811842513458157083,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","num":42,"id":{"name":"hmac","disambiguator":[12389471093425183708,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","num":43,"id":{"name":"crypto_mac","disambiguator":[10166179151970673769,0]}}],"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":0,"byte_end":12858,"line_start":1,"line_end":442,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2206,"byte_end":2216,"line_start":67,"line_end":67,"column_start":26,"column_end":36},"alias_span":null,"name":"RecoveryId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2286,"byte_end":2300,"line_start":70,"line_end":70,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":96},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2315,"byte_end":2327,"line_start":70,"line_end":70,"column_start":38,"column_end":50},"alias_span":null,"name":"EncodedPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":7,"index":1007},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2329,"byte_end":2339,"line_start":70,"line_end":70,"column_start":52,"column_end":62},"alias_span":null,"name":"PrimeCurve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":39,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2405,"byte_end":2414,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":39,"index":138},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2423,"byte_end":2428,"line_start":73,"line_end":73,"column_start":27,"column_end":32},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":39,"index":25},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2430,"byte_end":2436,"line_start":73,"line_end":73,"column_start":34,"column_end":40},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2534,"byte_end":2544,"line_start":77,"line_end":77,"column_start":22,"column_end":32},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":702},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2647,"byte_end":2659,"line_start":81,"line_end":81,"column_start":24,"column_end":36},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":0,"byte_end":12858,"line_start":1,"line_end":442,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":24},{"krate":0,"index":120},{"krate":0,"index":243},{"krate":0,"index":417},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":630},{"krate":0,"index":639},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670}],"decl_id":null,"docs":"# [RustCrypto]: ECDSA","sig":null,"attributes":[{"value":"/ ## `serde` support","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":40,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":63,"byte_end":66,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, `Serialize` and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":67,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ `Deserialize` impls are provided for the [`Signature`] and [`VerifyingKey`]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":138,"byte_end":217,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ types.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":218,"byte_end":228,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":229,"byte_end":232,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Please see type-specific documentation for more information.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":233,"byte_end":297,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":298,"byte_end":301,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Interop","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":302,"byte_end":316,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":317,"byte_end":320,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Any crates which provide an implementation of ECDSA for a particular","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":321,"byte_end":393,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ elliptic curve can leverage the types from this crate, along with the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":394,"byte_end":467,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ [`k256`], [`p256`], and/or [`p384`] crates to expose ECDSA functionality in","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":468,"byte_end":547,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ a generic, interoperable way by leveraging the [`Signature`] type with in","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":548,"byte_end":625,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ conjunction with the [`signature::Signer`] and [`signature::Verifier`]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":626,"byte_end":700,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ traits.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":701,"byte_end":712,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":713,"byte_end":716,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For example, the [`ring-compat`] crate implements the [`signature::Signer`]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":717,"byte_end":796,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`signature::Verifier`] traits in conjunction with the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":797,"byte_end":859,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [`p256::ecdsa::Signature`] and [`p384::ecdsa::Signature`] types to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":860,"byte_end":930,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ wrap the ECDSA implementations from [*ring*] in a generic, interoperable","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":931,"byte_end":1007,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ API.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1008,"byte_end":1016,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`k256`]: https://docs.rs/k256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1021,"byte_end":1055,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ [`p256`]: https://docs.rs/p256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1056,"byte_end":1090,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ [`p256::ecdsa::Signature`]: https://docs.rs/p256/latest/p256/ecdsa/type.Signature.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1091,"byte_end":1181,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ [`p384`]: https://docs.rs/p384","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1182,"byte_end":1216,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/ [`p384::ecdsa::Signature`]: https://docs.rs/p384/latest/p384/ecdsa/type.Signature.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1217,"byte_end":1307,"line_start":30,"line_end":30,"column_start":1,"column_end":91}},{"value":"/ [`ring-compat`]: https://docs.rs/ring-compat","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1308,"byte_end":1356,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/ [*ring*]: https://docs.rs/ring","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1357,"byte_end":1391,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"no_std","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1393,"byte_end":1403,"line_start":34,"line_end":34,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1443,"byte_end":1487,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1488,"byte_end":1528,"line_start":37,"line_end":37,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13626,"byte_end":13636,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::recovery::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Recovery IDs, a.k.a. \"recid\".","sig":null,"attributes":[{"value":"/ Recovery IDs, a.k.a. \"recid\".","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":12923,"byte_end":12956,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":12957,"byte_end":12960,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an integer value `0`, `1`, `2`, or `3` included along with a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":12961,"byte_end":13033,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ signature which is used during the recovery process to select the correct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13034,"byte_end":13111,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ public key from the signature.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13112,"byte_end":13146,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13147,"byte_end":13150,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It consists of two bits of information:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13151,"byte_end":13194,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13195,"byte_end":13198,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - low bit (0/1): was the y-coordinate of the affine point resulting from","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13199,"byte_end":13275,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/   the fixed-base multiplication 𝑘×𝑮 odd? This part of the algorithm","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13276,"byte_end":13354,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/   functions similar to point decompression.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13355,"byte_end":13402,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/ - hi bit (3/4): did the affine x-coordinate of 𝑘×𝑮 overflow the order of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13403,"byte_end":13486,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/   the scalar field, requiring a reduction when computing `r`?","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13487,"byte_end":13552,"line_start":17,"line_end":17,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13740,"byte_end":13743,"line_start":23,"line_end":23,"column_start":15,"column_end":18},"name":"MAX","qualname":"::recovery::RecoveryId::MAX","value":"u8","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Maximum supported value for the recovery ID (inclusive).\n","sig":null,"attributes":[{"value":"/ Maximum supported value for the recovery ID (inclusive).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13665,"byte_end":13725,"line_start":22,"line_end":22,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14007,"byte_end":14010,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<RecoveryId>::new","value":"pub fn new(bool, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`RecoveryId`] from the following 1-bit arguments:","sig":null,"attributes":[{"value":"/ Create a new [`RecoveryId`] from the following 1-bit arguments:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13758,"byte_end":13825,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13830,"byte_end":13833,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ - `is_y_odd`: is the affine y-coordinate of 𝑘×𝑮 odd?","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13838,"byte_end":13901,"line_start":27,"line_end":27,"column_start":5,"column_end":61}},{"value":"/ - `is_x_reduced`: did the affine x-coordinate of 𝑘×𝑮 overflow the curve order?","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13906,"byte_end":13995,"line_start":28,"line_end":28,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14210,"byte_end":14222,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"is_x_reduced","qualname":"<RecoveryId>::is_x_reduced","value":"pub fn is_x_reduced(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did the affine x-coordinate of 𝑘×𝑮 overflow the curve order?\n","sig":null,"attributes":[{"value":"/ Did the affine x-coordinate of 𝑘×𝑮 overflow the curve order?","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14127,"byte_end":14198,"line_start":33,"line_end":33,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14340,"byte_end":14348,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"is_y_odd","qualname":"<RecoveryId>::is_y_odd","value":"pub fn is_y_odd(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the affine y-coordinate of 𝑘×𝑮 odd?\n","sig":null,"attributes":[{"value":"/ Is the affine y-coordinate of 𝑘×𝑮 odd?","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14279,"byte_end":14328,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14458,"byte_end":14465,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"to_byte","qualname":"<RecoveryId>::to_byte","value":"pub fn to_byte(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Convert this [`RecoveryId`] into a `u8`.\n","sig":null,"attributes":[{"value":"/ Convert this [`RecoveryId`] into a `u8`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14402,"byte_end":14446,"line_start":43,"line_end":43,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":24},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"der","qualname":"::der","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" Support for ECDSA signatures encoded as ASN.1 DER.\n","sig":null,"attributes":[{"value":"cfg(feature = \"der\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1841,"byte_end":1864,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/ Support for ECDSA signatures encoded as ASN.1 DER.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16078,"byte_end":16132,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16920,"byte_end":16931,"line_start":33,"line_end":33,"column_start":10,"column_end":21},"name":"MaxOverhead","qualname":"::der::MaxOverhead","value":"U9","parent":null,"children":[],"decl_id":null,"docs":" Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:\n 9-bytes.","sig":null,"attributes":[{"value":"/ Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16453,"byte_end":16532,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ 9-bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16533,"byte_end":16545,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16546,"byte_end":16549,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Includes 3-byte ASN.1 DER header:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16550,"byte_end":16587,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16588,"byte_end":16591,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `SEQUENCE` tag (0x30)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16592,"byte_end":16633,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ - 2-byte: length","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16634,"byte_end":16654,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16655,"byte_end":16658,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ...followed by two ASN.1 `INTEGER` values, which each have a header whose","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16659,"byte_end":16736,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ maximum length is the following:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16737,"byte_end":16773,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16774,"byte_end":16777,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `INTEGER` tag (0x02)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16778,"byte_end":16818,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/ - 1-byte: length","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16819,"byte_end":16839,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/ - 1-byte: zero to indicate value is positive (`INTEGER` is signed)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16840,"byte_end":16910,"line_start":32,"line_end":32,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":17029,"byte_end":17036,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"name":"MaxSize","qualname":"::der::MaxSize","value":"<<FieldSize<C> as Add>::Output as Add<MaxOverhead>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":16939,"byte_end":17019,"line_start":35,"line_end":35,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":17319,"byte_end":17328,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"Signature","qualname":"::der::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"decl_id":null,"docs":" ASN.1 DER-encoded signature.","sig":null,"attributes":[{"value":"/ ASN.1 DER-encoded signature.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":17215,"byte_end":17247,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":17248,"byte_end":17251,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Generic over the scalar size of the elliptic curve.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":17252,"byte_end":17307,"line_start":43,"line_end":43,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18278,"byte_end":18281,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"len","qualname":"<Signature<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the signature in bytes\n","sig":null,"attributes":[{"value":"/ Get the length of the signature in bytes","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18222,"byte_end":18266,"line_start":79,"line_end":79,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18389,"byte_end":18397,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Signature<C>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this signature as a byte slice\n","sig":null,"attributes":[{"value":"/ Borrow this signature as a byte slice","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18336,"byte_end":18377,"line_start":84,"line_end":84,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18564,"byte_end":18572,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Signature<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> Box<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as a boxed byte slice\n","sig":null,"attributes":[{"value":"/ Serialize this signature as a boxed byte slice","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18472,"byte_end":18522,"line_start":89,"line_end":89,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18527,"byte_end":18552,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":120},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hazmat","qualname":"::hazmat","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":240}],"decl_id":null,"docs":" Low-level ECDSA primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"hazmat\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2011,"byte_end":2037,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/ Low-level ECDSA primitives.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25310,"byte_end":25341,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25342,"byte_end":25345,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # ⚠️ Warning: Hazmat!","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25346,"byte_end":25375,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25376,"byte_end":25379,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ YOU PROBABLY DON'T WANT TO USE THESE!","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25380,"byte_end":25421,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25422,"byte_end":25425,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ These primitives are easy-to-misuse low-level interfaces.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25426,"byte_end":25487,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25488,"byte_end":25491,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ If you are an end user / non-expert in cryptography, do not use these!","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25492,"byte_end":25566,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ Failure to use them correctly can lead to catastrophic failures including","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25567,"byte_end":25644,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ FULL PRIVATE KEY RECOVERY!","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":25645,"byte_end":25675,"line_start":11,"line_end":11,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":228},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26811,"byte_end":26824,"line_start":49,"line_end":49,"column_start":11,"column_end":24},"name":"SignPrimitive","qualname":"::hazmat::SignPrimitive","value":"SignPrimitive<C>: Field + Into<FieldBytes<C>> + Reduce<C::UInt> + Sized","parent":null,"children":[{"krate":0,"index":230}],"decl_id":null,"docs":" Try to sign the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Try to sign the given prehashed message using ECDSA.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26508,"byte_end":26564,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26565,"byte_end":26568,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on a type with access to the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26569,"byte_end":26642,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ secret scalar via `&self`, such as particular curve's `Scalar` type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26643,"byte_end":26715,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26716,"byte_end":26746,"line_start":47,"line_end":47,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27753,"byte_end":27771,"line_start":72,"line_end":72,"column_start":8,"column_end":26},"name":"try_sign_prehashed","qualname":"::hazmat::SignPrimitive::try_sign_prehashed","value":"pub fn try_sign_prehashed<K>(&Self, K, Scalar<C>)\n-> Result<(Signature<C>, Option<RecoveryId>)> where K: Borrow<Self> +\nInvert<Output = Self>","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27010,"byte_end":27048,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27053,"byte_end":27056,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27061,"byte_end":27097,"line_start":56,"line_end":56,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27102,"byte_end":27105,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ - `k`: ephemeral scalar value. MUST BE UNIFORMLY RANDOM!!!","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27110,"byte_end":27172,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/ - `z`: scalar computed from a hashed message digest to be signed.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27177,"byte_end":27246,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/   MUST BE OUTPUT OF A CRYPTOGRAPHICALLY SECURE DIGEST ALGORITHM!!!","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27251,"byte_end":27321,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27326,"byte_end":27329,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Computing the `hashed_msg` scalar","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27334,"byte_end":27373,"line_start":62,"line_end":62,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27378,"byte_end":27381,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ To compute a [`Scalar`] from a message digest, use the [`Reduce`] trait","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27386,"byte_end":27461,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ on the computed digest, e.g. `Scalar::from_be_bytes_reduced`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27466,"byte_end":27531,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27536,"byte_end":27539,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27544,"byte_end":27557,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27562,"byte_end":27565,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ECDSA [`Signature`] and, when possible/desired, a [`RecoveryId`]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27570,"byte_end":27638,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ which can be used to recover the verifying key for a given signature.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27643,"byte_end":27716,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":27721,"byte_end":27745,"line_start":71,"line_end":71,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":232},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29119,"byte_end":29134,"line_start":113,"line_end":113,"column_start":11,"column_end":26},"name":"VerifyPrimitive","qualname":"::hazmat::VerifyPrimitive","value":"VerifyPrimitive<C>: AffineXCoordinate<C> + Copy + Sized","parent":null,"children":[{"krate":0,"index":234}],"decl_id":null,"docs":" Verify the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Verify the given prehashed message using ECDSA.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":28784,"byte_end":28835,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":28836,"byte_end":28839,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on type which can access","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":28840,"byte_end":28909,"line_start":108,"line_end":108,"column_start":1,"column_end":70}},{"value":"/ the affine point represeting the public key via `&self`, such as a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":28910,"byte_end":28980,"line_start":109,"line_end":109,"column_start":1,"column_end":71}},{"value":"/ particular curve's `AffinePoint` type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":28981,"byte_end":29023,"line_start":110,"line_end":110,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29024,"byte_end":29054,"line_start":111,"line_end":111,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29585,"byte_end":29601,"line_start":125,"line_end":125,"column_start":8,"column_end":24},"name":"verify_prehashed","qualname":"::hazmat::VerifyPrimitive::verify_prehashed","value":"pub fn verify_prehashed(&Self, Scalar<C>, &Signature<C>) -> Result<()>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Verify the prehashed message against the provided signature","sig":null,"attributes":[{"value":"/ Verify the prehashed message against the provided signature","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29339,"byte_end":29402,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29407,"byte_end":29410,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29415,"byte_end":29451,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29456,"byte_end":29459,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ - `z`: prehashed message to be verified","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29464,"byte_end":29507,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ - `sig`: signature to be verified against the key and message","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29512,"byte_end":29577,"line_start":124,"line_end":124,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":235},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30768,"byte_end":30783,"line_start":159,"line_end":159,"column_start":11,"column_end":26},"name":"DigestPrimitive","qualname":"::hazmat::DigestPrimitive","value":"DigestPrimitive: PrimeCurve","parent":null,"children":[{"krate":0,"index":236}],"decl_id":null,"docs":" Bind a preferred [`Digest`] algorithm to an elliptic curve type.","sig":null,"attributes":[{"value":"/ Bind a preferred [`Digest`] algorithm to an elliptic curve type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30206,"byte_end":30274,"line_start":147,"line_end":147,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30275,"byte_end":30278,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Generally there is a preferred variety of the SHA-2 family used with ECDSA","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30279,"byte_end":30357,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ for a particular elliptic curve.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30358,"byte_end":30394,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30395,"byte_end":30398,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ This trait can be used to specify it, and with it receive a blanket impl of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30399,"byte_end":30478,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ [`PrehashSignature`], used by [`signature_derive`][1]) for the [`Signature`]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30479,"byte_end":30559,"line_start":153,"line_end":153,"column_start":1,"column_end":81}},{"value":"/ type for a particular elliptic curve.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30560,"byte_end":30601,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30602,"byte_end":30605,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/RustCrypto/traits/tree/master/signature/derive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30606,"byte_end":30680,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30681,"byte_end":30707,"line_start":157,"line_end":157,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":236},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30949,"byte_end":30955,"line_start":162,"line_end":162,"column_start":10,"column_end":16},"name":"Digest","qualname":"::hazmat::DigestPrimitive::Digest","value":"type Digest: Digest;","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Preferred digest to use when computing ECDSA signatures for this\n elliptic curve. This should be a member of the SHA-2 family.\n","sig":null,"attributes":[{"value":"/ Preferred digest to use when computing ECDSA signatures for this","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30802,"byte_end":30870,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/ elliptic curve. This should be a member of the SHA-2 family.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30875,"byte_end":30939,"line_start":161,"line_end":161,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":240},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31544,"byte_end":31562,"line_start":183,"line_end":183,"column_start":8,"column_end":26},"name":"rfc6979_generate_k","qualname":"::hazmat::rfc6979_generate_k","value":"pub fn rfc6979_generate_k<C, D>(&NonZeroScalar<C>, &Scalar<C>, &[u8])\n-> Zeroizing<NonZeroScalar<C>> where C: PrimeCurve + ProjectiveArithmetic,\nD: FixedOutput<OutputSize = FieldSize<C>> + BlockInput + Clone + Default +\nReset + Update","parent":null,"children":[],"decl_id":null,"docs":" Deterministically compute ECDSA ephemeral scalar `k` using the method\n described in RFC6979.","sig":null,"attributes":[{"value":"/ Deterministically compute ECDSA ephemeral scalar `k` using the method","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31164,"byte_end":31237,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ described in RFC6979.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31238,"byte_end":31263,"line_start":175,"line_end":175,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31264,"byte_end":31267,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Accepts the following parameters:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31268,"byte_end":31305,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/ - `x`: secret key","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31306,"byte_end":31327,"line_start":178,"line_end":178,"column_start":1,"column_end":22}},{"value":"/ - `z`: message scalar (i.e. message digest reduced mod p)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31328,"byte_end":31389,"line_start":179,"line_end":179,"column_start":1,"column_end":62}},{"value":"/ - `ad`: optional additional data, e.g. added entropy from an RNG","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31390,"byte_end":31458,"line_start":180,"line_end":180,"column_start":1,"column_end":69}},{"value":"cfg(all(feature = \"sign\"))","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31459,"byte_end":31488,"line_start":181,"line_end":181,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":696},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33358,"byte_end":33368,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":698}],"decl_id":null,"docs":" ECDSA signing key. Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA signing key. Generic over elliptic curves.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33083,"byte_end":33135,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33136,"byte_end":33139,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33140,"byte_end":33221,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ [`SignPrimitive`] impl on its associated `Scalar` type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33222,"byte_end":33281,"line_start":40,"line_end":40,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33835,"byte_end":33841,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33768,"byte_end":33823,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":34050,"byte_end":34060,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey<C>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize signing key from a raw scalar serialized as a byte slice.\n","sig":null,"attributes":[{"value":"/ Initialize signing key from a raw scalar serialized as a byte slice.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33966,"byte_end":34038,"line_start":65,"line_end":65,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":34437,"byte_end":34450,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"verifying_key","qualname":"<SigningKey<C>>::verifying_key","value":"pub fn verifying_key(&Self) -> VerifyingKey<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":34271,"byte_end":34340,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"cfg(feature = \"verify\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":34345,"byte_end":34371,"line_start":75,"line_end":75,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":34640,"byte_end":34648,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":34586,"byte_end":34628,"line_start":83,"line_end":83,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":702},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43658,"byte_end":43670,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":704}],"decl_id":null,"docs":" ECDSA verification key (i.e. public key). Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA verification key (i.e. public key). Generic over elliptic curves.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43000,"byte_end":43075,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43076,"byte_end":43079,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43080,"byte_end":43161,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"/ [`VerifyPrimitive`] impl on its associated `AffinePoint` type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43162,"byte_end":43228,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43229,"byte_end":43232,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43233,"byte_end":43254,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43255,"byte_end":43258,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, it provides support for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43259,"byte_end":43337,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ serializing and deserializing ECDSA signatures using the `Serialize` and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43338,"byte_end":43414,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ `Deserialize` traits.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43415,"byte_end":43440,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43441,"byte_end":43444,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The serialization leverages the encoding used by the [`PublicKey`] type,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43445,"byte_end":43521,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ which is a binary-oriented ASN.1 DER encoding.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43522,"byte_end":43572,"line_start":41,"line_end":41,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44014,"byte_end":44029,"line_start":58,"line_end":58,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43939,"byte_end":44002,"line_start":57,"line_end":57,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44265,"byte_end":44283,"line_start":65,"line_end":65,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey<C>>::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from an [`EncodedPoint`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44196,"byte_end":44253,"line_start":64,"line_end":64,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44628,"byte_end":44644,"line_start":73,"line_end":73,"column_start":12,"column_end":28},"name":"to_encoded_point","qualname":"<VerifyingKey<C>>::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally\n applying point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44506,"byte_end":44580,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ applying point compression.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44585,"byte_end":44616,"line_start":72,"line_end":72,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":626},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3387,"byte_end":3400,"line_start":110,"line_end":110,"column_start":10,"column_end":23},"name":"SignatureSize","qualname":"::SignatureSize","value":"<FieldSize<C> as Add>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of a fixed sized signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of a fixed sized signature for the given elliptic curve.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3312,"byte_end":3377,"line_start":109,"line_end":109,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":628},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3503,"byte_end":3517,"line_start":113,"line_end":113,"column_start":10,"column_end":24},"name":"SignatureBytes","qualname":"::SignatureBytes","value":"GenericArray<u8, SignatureSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Fixed-size byte array containing an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Fixed-size byte array containing an ECDSA signature","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3438,"byte_end":3493,"line_start":112,"line_end":112,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":711},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4543,"byte_end":4552,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":713}],"decl_id":null,"docs":" ECDSA signature (fixed-size). Generic over elliptic curve types.","sig":null,"attributes":[{"value":"/ ECDSA signature (fixed-size). Generic over elliptic curve types.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3560,"byte_end":3628,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3629,"byte_end":3632,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Serialized as fixed-sized big endian scalar values with no added framing:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3633,"byte_end":3710,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3711,"byte_end":3714,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ - `r`: field element size for the given curve, big-endian","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3715,"byte_end":3776,"line_start":119,"line_end":119,"column_start":1,"column_end":62}},{"value":"/ - `s`: field element size for the given curve, big-endian","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3777,"byte_end":3838,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3839,"byte_end":3842,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ For example, in a curve with a 256-bit modulus like NIST P-256 or","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3843,"byte_end":3912,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/ secp256k1, `r` and `s` will both be 32-bytes, resulting in a signature","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3913,"byte_end":3987,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ with a total of 64-bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":3988,"byte_end":4017,"line_start":124,"line_end":124,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4018,"byte_end":4021,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ASN.1 DER-encoded signatures also supported via the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4022,"byte_end":4077,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/ [`Signature::from_der`] and [`Signature::to_der`] methods.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4078,"byte_end":4140,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4141,"byte_end":4144,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # `serde` support","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4145,"byte_end":4166,"line_start":129,"line_end":129,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4167,"byte_end":4170,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature of this crate is enabled, it provides support for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4171,"byte_end":4249,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ serializing and deserializing ECDSA signatures using the `Serialize` and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4250,"byte_end":4326,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/ `Deserialize` traits.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4327,"byte_end":4352,"line_start":133,"line_end":133,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4353,"byte_end":4356,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The serialization uses a 64-byte fixed encoding when used with binary","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4357,"byte_end":4430,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ formats, and a hexadecimal encoding when used with text formats.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4431,"byte_end":4499,"line_start":136,"line_end":136,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4866,"byte_end":4874,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature<C>>::from_der","value":"pub fn from_der(&[u8]) -> Result<Self> where der::MaxSize<C>: ArrayLength<u8>,\n<FieldSize<C> as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Parse a signature from ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Parse a signature from ASN.1 DER","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4739,"byte_end":4775,"line_start":150,"line_end":150,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4780,"byte_end":4803,"line_start":151,"line_end":151,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":5246,"byte_end":5258,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"from_scalars","qualname":"<Signature<C>>::from_scalars","value":"pub fn from_scalars<impl Into<FieldBytes<C>>: Into<FieldBytes<C>>,\nimpl Into<FieldBytes<C>>: Into<FieldBytes<C>>>(impl Into<FieldBytes<C>>,\nimpl Into<FieldBytes<C>>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Signature`] from the serialized `r` and `s` scalar values\n which comprise the signature.\n","sig":null,"attributes":[{"value":"/ Create a [`Signature`] from the serialized `r` and `s` scalar values","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":5124,"byte_end":5196,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ which comprise the signature.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":5201,"byte_end":5234,"line_start":162,"line_end":162,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":5497,"byte_end":5508,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"split_bytes","qualname":"<Signature<C>>::split_bytes","value":"pub fn split_bytes(&Self) -> (FieldBytes<C>, FieldBytes<C>)","parent":null,"children":[],"decl_id":null,"docs":" Split the signature into its `r` and `s` components, represented as bytes.\n","sig":null,"attributes":[{"value":"/ Split the signature into its `r` and `s` components, represented as bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":5407,"byte_end":5485,"line_start":167,"line_end":167,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":5896,"byte_end":5902,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"to_der","qualname":"<Signature<C>>::to_der","value":"pub fn to_der(&Self) -> der::Signature<C> where\nder::MaxSize<C>: ArrayLength<u8>,\n<FieldSize<C> as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Serialize this signature as ASN.1 DER","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":5764,"byte_end":5805,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":5810,"byte_end":5833,"line_start":178,"line_end":178,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6360,"byte_end":6366,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Signature<C>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Convert this signature into a byte vector.\n","sig":null,"attributes":[{"value":"/ Convert this signature into a byte vector.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6219,"byte_end":6265,"line_start":189,"line_end":189,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6270,"byte_end":6295,"line_start":190,"line_end":190,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6674,"byte_end":6675,"line_start":205,"line_end":205,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature<C>>::r","value":"pub fn r(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `r` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `r` component of this signature","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6619,"byte_end":6662,"line_start":204,"line_end":204,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6900,"byte_end":6901,"line_start":211,"line_end":211,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature<C>>::s","value":"pub fn s(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `s` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `s` component of this signature","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6845,"byte_end":6888,"line_start":210,"line_end":210,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7136,"byte_end":7149,"line_start":217,"line_end":217,"column_start":12,"column_end":25},"name":"split_scalars","qualname":"<Signature<C>>::split_scalars","value":"pub fn split_scalars(&Self) -> (NonZeroScalar<C>, NonZeroScalar<C>)","parent":null,"children":[],"decl_id":null,"docs":" Split the signature into its `r` and `s` scalars.\n","sig":null,"attributes":[{"value":"/ Split the signature into its `r` and `s` scalars.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7071,"byte_end":7124,"line_start":216,"line_end":216,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7442,"byte_end":7453,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature<C>>::normalize_s","value":"pub fn normalize_s(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Normalize signature into \"low S\" form as described in\n [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize signature into \"low S\" form as described in","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7239,"byte_end":7296,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/ [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7301,"byte_end":7346,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7351,"byte_end":7354,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7359,"byte_end":7430,"line_start":224,"line_end":224,"column_start":5,"column_end":76}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13648,"byte_end":13658,"line_start":21,"line_end":21,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14530,"byte_end":14540,"line_start":49,"line_end":49,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":17730,"byte_end":17739,"line_start":60,"line_end":60,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18074,"byte_end":18083,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":19616,"byte_end":19625,"line_start":125,"line_end":125,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":19848,"byte_end":19857,"line_start":136,"line_end":136,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":20225,"byte_end":20234,"line_start":150,"line_end":150,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":21346,"byte_end":21355,"line_start":189,"line_end":189,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":22490,"byte_end":22499,"line_start":219,"line_end":219,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31024,"byte_end":31033,"line_start":166,"line_end":166,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33581,"byte_end":33591,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":34740,"byte_end":34750,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":35035,"byte_end":35045,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":35433,"byte_end":35443,"line_start":112,"line_end":112,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":35724,"byte_end":35734,"line_start":124,"line_end":124,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":35961,"byte_end":35971,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":36267,"byte_end":36277,"line_start":144,"line_end":144,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":36571,"byte_end":36581,"line_start":155,"line_end":155,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":36933,"byte_end":36943,"line_start":168,"line_end":168,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":37755,"byte_end":37765,"line_start":185,"line_end":185,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":38188,"byte_end":38198,"line_start":197,"line_end":197,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":39170,"byte_end":39180,"line_start":221,"line_end":221,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":39647,"byte_end":39657,"line_start":233,"line_end":233,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":39980,"byte_end":39990,"line_start":246,"line_end":246,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":40337,"byte_end":40349,"line_start":260,"line_end":260,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43771,"byte_end":43783,"line_start":51,"line_end":51,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44761,"byte_end":44773,"line_start":78,"line_end":78,"column_start":18,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44871,"byte_end":44883,"line_start":80,"line_end":80,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":45366,"byte_end":45378,"line_start":94,"line_end":94,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":45797,"byte_end":45809,"line_start":107,"line_end":107,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46145,"byte_end":46157,"line_start":118,"line_end":118,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46354,"byte_end":46366,"line_start":127,"line_end":127,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46552,"byte_end":46561,"line_start":136,"line_end":136,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46749,"byte_end":46758,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46931,"byte_end":46943,"line_start":154,"line_end":154,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":47016,"byte_end":47028,"line_start":156,"line_end":156,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":47191,"byte_end":47203,"line_start":165,"line_end":165,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":47487,"byte_end":47499,"line_start":176,"line_end":176,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":47770,"byte_end":47782,"line_start":187,"line_end":187,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4656,"byte_end":4665,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6517,"byte_end":6526,"line_start":199,"line_end":199,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7802,"byte_end":7811,"line_start":239,"line_end":239,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7994,"byte_end":8003,"line_start":249,"line_end":249,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":8161,"byte_end":8170,"line_start":259,"line_end":259,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":8321,"byte_end":8330,"line_start":267,"line_end":267,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":8636,"byte_end":8645,"line_start":282,"line_end":282,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":9285,"byte_end":9294,"line_start":308,"line_end":308,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":9494,"byte_end":9503,"line_start":318,"line_end":318,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":9770,"byte_end":9779,"line_start":331,"line_end":331,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":10130,"byte_end":10139,"line_start":346,"line_end":346,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":1920,"byte_end":1923,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":24}},{"kind":"Mod","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":2096,"byte_end":2102,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":120}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":13648,"byte_end":13658,"line_start":21,"line_end":21,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/recovery.rs","byte_start":14530,"byte_end":14540,"line_start":49,"line_end":49,"column_start":22,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":677},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":17730,"byte_end":17739,"line_start":60,"line_end":60,"column_start":34,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":81},"to":{"krate":39,"index":62}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":18074,"byte_end":18083,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":19616,"byte_end":19625,"line_start":125,"line_end":125,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":19848,"byte_end":19857,"line_start":136,"line_end":136,"column_start":24,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":20225,"byte_end":20234,"line_start":150,"line_end":150,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":21346,"byte_end":21355,"line_start":189,"line_end":189,"column_start":42,"column_end":51},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/der.rs","byte_start":22490,"byte_end":22499,"line_start":219,"line_end":219,"column_start":41,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":81},"to":{"krate":39,"index":65}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26829,"byte_end":26834,"line_start":49,"line_end":49,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":34,"index":62},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26837,"byte_end":26841,"line_start":49,"line_end":49,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2960},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26859,"byte_end":26865,"line_start":49,"line_end":49,"column_start":59,"column_end":65},"kind":"SuperTrait","from":{"krate":7,"index":51},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":26877,"byte_end":26882,"line_start":49,"line_end":49,"column_start":77,"column_end":82},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29139,"byte_end":29156,"line_start":113,"line_end":113,"column_start":31,"column_end":48},"kind":"SuperTrait","from":{"krate":7,"index":149},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29162,"byte_end":29166,"line_start":113,"line_end":113,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3067},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":29169,"byte_end":29174,"line_start":113,"line_end":113,"column_start":61,"column_end":66},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":232}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":30785,"byte_end":30795,"line_start":159,"line_end":159,"column_start":28,"column_end":38},"kind":"SuperTrait","from":{"krate":7,"index":1007},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/hazmat.rs","byte_start":31024,"byte_end":31033,"line_start":166,"line_end":166,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":711},"to":{"krate":39,"index":65}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":33581,"byte_end":33591,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":34740,"byte_end":34750,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":696},"to":{"krate":26,"index":58}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":35035,"byte_end":35045,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":35433,"byte_end":35443,"line_start":112,"line_end":112,"column_start":18,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":3300}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":35724,"byte_end":35734,"line_start":124,"line_end":124,"column_start":16,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":35961,"byte_end":35971,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":36267,"byte_end":36277,"line_start":144,"line_end":144,"column_start":32,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":36571,"byte_end":36581,"line_start":155,"line_end":155,"column_start":33,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":36933,"byte_end":36943,"line_start":168,"line_end":168,"column_start":46,"column_end":56},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":696},"to":{"krate":39,"index":97}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":37755,"byte_end":37765,"line_start":185,"line_end":185,"column_start":34,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":696},"to":{"krate":39,"index":85}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":38188,"byte_end":38198,"line_start":197,"line_end":197,"column_start":56,"column_end":66},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":696},"to":{"krate":39,"index":108}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":39170,"byte_end":39180,"line_start":221,"line_end":221,"column_start":44,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":696},"to":{"krate":39,"index":102}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":39647,"byte_end":39657,"line_start":233,"line_end":233,"column_start":36,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":39980,"byte_end":39990,"line_start":246,"line_end":246,"column_start":28,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/sign.rs","byte_start":40337,"byte_end":40349,"line_start":260,"line_end":260,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":43771,"byte_end":43783,"line_start":51,"line_end":51,"column_start":9,"column_end":21},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44761,"byte_end":44773,"line_start":78,"line_end":78,"column_start":18,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":44871,"byte_end":44883,"line_start":80,"line_end":80,"column_start":48,"column_end":60},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":702},"to":{"krate":39,"index":129}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":45366,"byte_end":45378,"line_start":94,"line_end":94,"column_start":36,"column_end":48},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":702},"to":{"krate":39,"index":126}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":45797,"byte_end":45809,"line_start":107,"line_end":107,"column_start":36,"column_end":48},"kind":{"Impl":{"id":30}},"from":{"krate":7,"index":96},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46145,"byte_end":46157,"line_start":118,"line_end":118,"column_start":32,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46354,"byte_end":46366,"line_start":127,"line_end":127,"column_start":33,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46552,"byte_end":46561,"line_start":136,"line_end":136,"column_start":35,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":7,"index":1058},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46749,"byte_end":46758,"line_start":145,"line_end":145,"column_start":36,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":7,"index":1058},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":46931,"byte_end":46943,"line_start":154,"line_end":154,"column_start":16,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":47016,"byte_end":47028,"line_start":156,"line_end":156,"column_start":23,"column_end":35},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":47191,"byte_end":47203,"line_start":165,"line_end":165,"column_start":24,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":2755}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":47487,"byte_end":47499,"line_start":176,"line_end":176,"column_start":17,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/verify.rs","byte_start":47770,"byte_end":47782,"line_start":187,"line_end":187,"column_start":28,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":702},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":4656,"byte_end":4665,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":6517,"byte_end":6526,"line_start":199,"line_end":199,"column_start":9,"column_end":18},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7802,"byte_end":7811,"line_start":239,"line_end":239,"column_start":34,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":711},"to":{"krate":39,"index":62}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":7994,"byte_end":8003,"line_start":249,"line_end":249,"column_start":25,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":2954}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":8161,"byte_end":8170,"line_start":259,"line_end":259,"column_start":18,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":8321,"byte_end":8330,"line_start":267,"line_end":267,"column_start":19,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":8636,"byte_end":8645,"line_start":282,"line_end":282,"column_start":28,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":9285,"byte_end":9294,"line_start":308,"line_end":308,"column_start":26,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":9494,"byte_end":9503,"line_start":318,"line_end":318,"column_start":27,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":9691}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":9770,"byte_end":9779,"line_start":331,"line_end":331,"column_start":27,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":9693}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.13.4/src/lib.rs","byte_start":10130,"byte_end":10139,"line_start":346,"line_end":346,"column_start":26,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":711},"to":{"krate":1,"index":12317}}]}