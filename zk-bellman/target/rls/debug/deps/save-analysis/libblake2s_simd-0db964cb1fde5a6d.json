{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0","program":"/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","blake2s_simd","--edition=2018","/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=0db964cb1fde5a6d","-C","extra-filename=-0db964cb1fde5a6d","--out-dir","/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps","-L","dependency=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps","--extern","arrayref=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libarrayref-ac2ab478ab84d752.rmeta","--extern","arrayvec=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libarrayvec-46e0d6b4216b4a42.rmeta","--extern","constant_time_eq=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libconstant_time_eq-3c356f11a21d3154.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libblake2s_simd-0db964cb1fde5a6d.rmeta"},"prelude":{"crate_id":{"name":"blake2s_simd","disambiguator":[3232367421234458027,0]},"crate_root":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src","external_crates":[{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":20,"id":{"name":"arrayref","disambiguator":[11124165419969974158,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","num":21,"id":{"name":"arrayvec","disambiguator":[3054412177759576754,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","num":22,"id":{"name":"constant_time_eq","disambiguator":[16897989040327280710,0]}}],"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":0,"byte_end":22868,"line_start":1,"line_end":681,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":0,"byte_end":22868,"line_start":1,"line_end":681,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":147},{"krate":0,"index":193},{"krate":0,"index":330},{"krate":0,"index":427},{"krate":0,"index":475},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":866},{"krate":0,"index":883},{"krate":0,"index":571},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":899},{"krate":0,"index":910},{"krate":0,"index":598},{"krate":0,"index":608},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":931},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":622},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":632},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645}],"decl_id":null,"docs":" [![GitHub](https://img.shields.io/github/tag/oconnor663/blake2_simd.svg?label=GitHub)](https://github.com/oconnor663/blake2_simd) [![crates.io](https://img.shields.io/crates/v/blake2s_simd.svg)](https://crates.io/crates/blake2s_simd) [![Actions Status](https://github.com/oconnor663/blake2_simd/workflows/tests/badge.svg)](https://github.com/oconnor663/blake2_simd/actions)","sig":null,"attributes":[{"value":"/ [![GitHub](https://img.shields.io/github/tag/oconnor663/blake2_simd.svg?label=GitHub)](https://github.com/oconnor663/blake2_simd) [![crates.io](https://img.shields.io/crates/v/blake2s_simd.svg)](https://crates.io/crates/blake2s_simd) [![Actions Status](https://github.com/oconnor663/blake2_simd/workflows/tests/badge.svg)](https://github.com/oconnor663/blake2_simd/actions)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":0,"byte_end":377,"line_start":1,"line_end":1,"column_start":1,"column_end":378}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":378,"byte_end":381,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An implementation of the BLAKE2s and BLAKE2sp hash functions. See also","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":382,"byte_end":456,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ [`blake2b_simd`](https://docs.rs/blake2b_simd).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":457,"byte_end":508,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":509,"byte_end":512,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This crate includes:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":513,"byte_end":537,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":538,"byte_end":541,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - 100% stable Rust.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":542,"byte_end":565,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/ - SIMD implementations based on Samuel Neves' [`blake2-avx2`](https://github.com/sneves/blake2-avx2).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":566,"byte_end":671,"line_start":9,"line_end":9,"column_start":1,"column_end":106}},{"value":"/   These are very fast. For benchmarks, see [the Performance section of the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":672,"byte_end":750,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/   README](https://github.com/oconnor663/blake2_simd#performance).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":751,"byte_end":820,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ - Portable, safe implementations for other platforms.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":821,"byte_end":878,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"/ - Dynamic CPU feature detection. Binaries include multiple implementations by default and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":879,"byte_end":972,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/   choose the fastest one the processor supports at runtime.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":973,"byte_end":1036,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ - All the features from the [the BLAKE2 spec](https://blake2.net/blake2.pdf), like adjustable","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1037,"byte_end":1134,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/   length, keying, and associated data for tree hashing.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1135,"byte_end":1194,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ - `no_std` support. The `std` Cargo feature is on by default, for CPU feature detection and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1195,"byte_end":1290,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/   for implementing `std::io::Write`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1291,"byte_end":1331,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ - Support for computing multiple BLAKE2s hashes in parallel, matching the efficiency of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1332,"byte_end":1423,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/   BLAKE2sp. See the [`many`](many/index.html) module.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1424,"byte_end":1481,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1482,"byte_end":1485,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1486,"byte_end":1499,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1500,"byte_end":1503,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1504,"byte_end":1511,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::{blake2s, Params};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1512,"byte_end":1552,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1553,"byte_end":1556,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let expected = \"08d6cad88075de8f192db097573d0e829411cd91eb6ec65e8fc16c017edfdb74\";","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1557,"byte_end":1643,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/ let hash = blake2s(b\"foo\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1644,"byte_end":1675,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1676,"byte_end":1717,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1718,"byte_end":1721,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let hash = Params::new()","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1722,"byte_end":1750,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     .hash_length(16)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1751,"byte_end":1775,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/     .key(b\"Squeamish Ossifrage\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1776,"byte_end":1812,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/     .personal(b\"Shaftoe\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1813,"byte_end":1842,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/     .to_state()","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1843,"byte_end":1862,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"/     .update(b\"foo\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1863,"byte_end":1886,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/     .update(b\"bar\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1887,"byte_end":1910,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     .update(b\"baz\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1911,"byte_end":1934,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     .finalize();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1935,"byte_end":1955,"line_start":39,"line_end":39,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(\"28325512782cbf5019424fa65da9a6c7\", &hash.to_hex());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":1956,"byte_end":2023,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2024,"byte_end":2031,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":330},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blake2sp","qualname":"::blake2sp","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":762},{"krate":0,"index":768},{"krate":0,"index":382},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":770},{"krate":0,"index":783},{"krate":0,"index":400},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":426}],"decl_id":null,"docs":" BLAKE2sp, a variant of BLAKE2s that uses SIMD more efficiently.","sig":null,"attributes":[{"value":"/ BLAKE2sp, a variant of BLAKE2s that uses SIMD more efficiently.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79052,"byte_end":79119,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79120,"byte_end":79123,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The AVX2 implementation of BLAKE2sp is about twice as fast that of BLAKE2s.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79124,"byte_end":79203,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ However, note that it's a different hash function, and it gives a different","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79204,"byte_end":79283,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ hash from BLAKE2s for the same input.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79284,"byte_end":79325,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79326,"byte_end":79329,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79330,"byte_end":79343,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79344,"byte_end":79347,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79348,"byte_end":79355,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::blake2sp;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79356,"byte_end":79387,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79388,"byte_end":79391,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let hash = blake2sp::Params::new()","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79392,"byte_end":79430,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/     .hash_length(16)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79431,"byte_end":79455,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/     .key(b\"Squeamish Ossifrage\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79456,"byte_end":79492,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"/     .to_state()","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79493,"byte_end":79512,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/     .update(b\"foo\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79513,"byte_end":79536,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/     .update(b\"bar\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79537,"byte_end":79560,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/     .update(b\"baz\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79561,"byte_end":79584,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     .finalize();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79585,"byte_end":79605,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(\"9a604f1653c25063debb3aeea79671c0\", &hash.to_hex());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79606,"byte_end":79673,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":79674,"byte_end":79681,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":381},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80355,"byte_end":80363,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"blake2sp","qualname":"::blake2sp::blake2sp","value":"pub fn blake2sp(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Compute the BLAKE2sp hash of a slice of bytes all at once, using default\n parameters.","sig":null,"attributes":[{"value":"/ Compute the BLAKE2sp hash of a slice of bytes all at once, using default","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80011,"byte_end":80087,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ parameters.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80088,"byte_end":80103,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80104,"byte_end":80107,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80108,"byte_end":80121,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80122,"byte_end":80125,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80126,"byte_end":80133,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use blake2s_simd::blake2sp::blake2sp;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80134,"byte_end":80177,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/ let expected = \"050dc5786037ea72cb9ed9d0324afcab03c97ec02e8c47368fc5dfb4cf49d8c9\";","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80178,"byte_end":80264,"line_start":47,"line_end":47,"column_start":1,"column_end":87}},{"value":"/ let hash = blake2sp(b\"foo\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80265,"byte_end":80297,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80298,"byte_end":80339,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80340,"byte_end":80347,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80960,"byte_end":80966,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"Params","qualname":"::blake2sp::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":767}],"decl_id":null,"docs":" A parameter builder for BLAKE2sp, just like the [`Params`](../struct.Params.html) type for\n BLAKE2s.","sig":null,"attributes":[{"value":"/ A parameter builder for BLAKE2sp, just like the [`Params`](../struct.Params.html) type for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80421,"byte_end":80515,"line_start":55,"line_end":55,"column_start":1,"column_end":95}},{"value":"/ BLAKE2s.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80516,"byte_end":80528,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80529,"byte_end":80532,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This builder only supports configuring the hash length and a secret key. This matches the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80533,"byte_end":80626,"line_start":58,"line_end":58,"column_start":1,"column_end":94}},{"value":"/ options provided by the [reference","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80627,"byte_end":80665,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ implementation](https://github.com/BLAKE2/BLAKE2/blob/320c325437539ae91091ce62efec1913cd8093c2/ref/blake2.h#L162-L165).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80666,"byte_end":80789,"line_start":60,"line_end":60,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80790,"byte_end":80793,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80794,"byte_end":80807,"line_start":62,"line_end":62,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80808,"byte_end":80811,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80812,"byte_end":80819,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::blake2sp;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80820,"byte_end":80851,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/ let mut state = blake2sp::Params::new().hash_length(32).to_state();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80852,"byte_end":80923,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":80924,"byte_end":80931,"line_start":67,"line_end":67,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":81142,"byte_end":81145,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Params>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `Params::default()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Params::default()`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":81092,"byte_end":81130,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":83161,"byte_end":83165,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"hash","qualname":"<Params>::hash","value":"pub fn hash(&Self, &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash an input all at once with these parameters.\n","sig":null,"attributes":[{"value":"/ Hash an input all at once with these parameters.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":83097,"byte_end":83149,"line_start":130,"line_end":130,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":84282,"byte_end":84290,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"to_state","qualname":"<Params>::to_state","value":"pub fn to_state(&Self) -> State","parent":null,"children":[],"decl_id":null,"docs":" Construct a BLAKE2sp `State` object based on these parameters.\n","sig":null,"attributes":[{"value":"/ Construct a BLAKE2sp `State` object based on these parameters.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":84204,"byte_end":84270,"line_start":161,"line_end":161,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":84587,"byte_end":84598,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"hash_length","qualname":"<Params>::hash_length","value":"pub fn hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the final hash, from 1 to `OUTBYTES` (64). Apart from controlling the\n length of the final `Hash`, this is also associated data, and changing it will result in a\n totally different hash.\n","sig":null,"attributes":[{"value":"/ Set the length of the final hash, from 1 to `OUTBYTES` (64). Apart from controlling the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":84353,"byte_end":84444,"line_start":166,"line_end":166,"column_start":5,"column_end":96}},{"value":"/ length of the final `Hash`, this is also associated data, and changing it will result in a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":84449,"byte_end":84543,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/ totally different hash.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":84548,"byte_end":84575,"line_start":168,"line_end":168,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85002,"byte_end":85005,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"key","qualname":"<Params>::key","value":"pub fn key(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a secret key, so that BLAKE2sp acts as a MAC. The maximum key length is `KEYBYTES`\n (64). An empty key is equivalent to having no key at all.\n","sig":null,"attributes":[{"value":"/ Use a secret key, so that BLAKE2sp acts as a MAC. The maximum key length is `KEYBYTES`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":84834,"byte_end":84924,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/ (64). An empty key is equivalent to having no key at all.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":84929,"byte_end":84990,"line_start":180,"line_end":180,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":86156,"byte_end":86161,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"State","qualname":"::blake2sp::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"decl_id":null,"docs":" An incremental hasher for BLAKE2sp, just like the [`State`](../struct.State.html) type for\n BLAKE2s.","sig":null,"attributes":[{"value":"/ An incremental hasher for BLAKE2sp, just like the [`State`](../struct.State.html) type for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85684,"byte_end":85778,"line_start":208,"line_end":208,"column_start":1,"column_end":95}},{"value":"/ BLAKE2s.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85779,"byte_end":85791,"line_start":209,"line_end":209,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85792,"byte_end":85795,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85796,"byte_end":85809,"line_start":211,"line_end":211,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85810,"byte_end":85813,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85814,"byte_end":85821,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::blake2sp;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85822,"byte_end":85853,"line_start":214,"line_end":214,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85854,"byte_end":85857,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ let mut state = blake2sp::State::new();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85858,"byte_end":85901,"line_start":216,"line_end":216,"column_start":1,"column_end":44}},{"value":"/ state.update(b\"foo\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85902,"byte_end":85927,"line_start":217,"line_end":217,"column_start":1,"column_end":26}},{"value":"/ state.update(b\"bar\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85928,"byte_end":85953,"line_start":218,"line_end":218,"column_start":1,"column_end":26}},{"value":"/ let hash = state.finalize();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85954,"byte_end":85986,"line_start":219,"line_end":219,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85987,"byte_end":85990,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ let expected = \"268120e51df583c61d6bfb7915f1c8ead299696c42f413092cd0b2247e1a388d\";","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85991,"byte_end":86077,"line_start":221,"line_end":221,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":86078,"byte_end":86119,"line_start":222,"line_end":222,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":86120,"byte_end":86127,"line_start":223,"line_end":223,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":86722,"byte_end":86725,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `State::default()` or `Params::default().to_state()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `State::default()` or `Params::default().to_state()`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":86639,"byte_end":86710,"line_start":240,"line_end":240,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":89449,"byte_end":89455,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"update","qualname":"<State>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input to the hash. You can call `update` any number of times.\n","sig":null,"attributes":[{"value":"/ Add input to the hash. You can call `update` any number of times.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":89368,"byte_end":89437,"line_start":307,"line_end":307,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":92554,"byte_end":92562,"line_start":372,"line_end":372,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple\n times will give the same result. It's also possible to `update` with more input in between.\n","sig":null,"attributes":[{"value":"/ Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":92348,"byte_end":92442,"line_start":370,"line_end":370,"column_start":5,"column_end":99}},{"value":"/ times will give the same result. It's also possible to `update` with more input in between.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":92447,"byte_end":92542,"line_start":371,"line_end":371,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":93909,"byte_end":93914,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"count","qualname":"<State>::count","value":"pub fn count(&Self) -> Count","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes input so far.","sig":null,"attributes":[{"value":"/ Return the total number of bytes input so far.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":93691,"byte_end":93741,"line_start":404,"line_end":404,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":93746,"byte_end":93749,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that `count` doesn't include the bytes of the key block, if any.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":93754,"byte_end":93827,"line_start":406,"line_end":406,"column_start":5,"column_end":78}},{"value":"/ It's exactly the total number of input bytes fed to `update`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":93832,"byte_end":93897,"line_start":407,"line_end":407,"column_start":5,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":475},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"many","qualname":"::many","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":528},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":539},{"krate":0,"index":853},{"krate":0,"index":863},{"krate":0,"index":545},{"krate":0,"index":549},{"krate":0,"index":552}],"decl_id":null,"docs":" Interfaces for hashing multiple inputs at once, using SIMD more\n efficiently.","sig":null,"attributes":[{"value":"/ Interfaces for hashing multiple inputs at once, using SIMD more","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119035,"byte_end":119102,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/ efficiently.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119103,"byte_end":119119,"line_start":2,"line_end":2,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119120,"byte_end":119123,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The throughput of these interfaces is comparable to BLAKE2sp, much larger","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119124,"byte_end":119201,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ than that of regular BLAKE2s when AVX2 is available.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119202,"byte_end":119258,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119259,"byte_end":119262,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ These interfaces can accept any number of inputs, and the implementation","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119263,"byte_end":119339,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ does its best to parallelize them. In general, the more inputs you can pass","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119340,"byte_end":119419,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ in at once the better. If you need to batch your inputs in smaller groups,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119420,"byte_end":119498,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ see the [`degree`](fn.degree.html) function for a good batch size.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119499,"byte_end":119569,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119570,"byte_end":119573,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementation keeps working in parallel even when inputs are of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119574,"byte_end":119646,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ different lengths, by managing a working set of jobs whose input isn't yet","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119647,"byte_end":119725,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ exhausted. However, if one or two inputs are much longer than the others,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119726,"byte_end":119803,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ and they're encountered only at the end, there might not be any remaining","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119804,"byte_end":119881,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ work to parallelize them with. In this case, sorting the inputs","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119882,"byte_end":119949,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/ longest-first can improve parallelism.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119950,"byte_end":119992,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119993,"byte_end":119996,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":119997,"byte_end":120010,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120011,"byte_end":120014,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120015,"byte_end":120022,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::{blake2s, State, many::update_many};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120023,"byte_end":120081,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120082,"byte_end":120085,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut states = [","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120086,"byte_end":120108,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/     State::new(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120109,"byte_end":120130,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120131,"byte_end":120152,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120153,"byte_end":120174,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120175,"byte_end":120196,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120197,"byte_end":120203,"line_start":29,"line_end":29,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120204,"byte_end":120207,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let inputs = [","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120208,"byte_end":120226,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/     &b\"foo\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120227,"byte_end":120247,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/     &b\"bar\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120248,"byte_end":120268,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/     &b\"baz\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120269,"byte_end":120289,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/     &b\"bing\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120290,"byte_end":120311,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120312,"byte_end":120318,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120319,"byte_end":120322,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ update_many(states.iter_mut().zip(inputs.iter()));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120323,"byte_end":120377,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120378,"byte_end":120381,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for (state, input) in states.iter_mut().zip(inputs.iter()) {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120382,"byte_end":120446,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(blake2s(input), state.finalize());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120447,"byte_end":120500,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120501,"byte_end":120506,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120507,"byte_end":120514,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":522},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121332,"byte_end":121342,"line_start":65,"line_end":65,"column_start":11,"column_end":21},"name":"MAX_DEGREE","qualname":"::many::MAX_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The largest possible value of [`degree`](fn.degree.html) on the target\n platform.","sig":null,"attributes":[{"value":"/ The largest possible value of [`degree`](fn.degree.html) on the target","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120775,"byte_end":120849,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ platform.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120850,"byte_end":120863,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120864,"byte_end":120867,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this constant reflects the parallelism degree supported by this","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120868,"byte_end":120945,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ crate, so it will change over time as support is added or removed. For","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":120946,"byte_end":121020,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/ example, when Rust stabilizes AVX-512 support and this crate adds an","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121021,"byte_end":121093,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ AVX-512 implementation, this constant will double on x86 targets. If that","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121094,"byte_end":121171,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ implementation is an optional feature (e.g. because it's nightly-only), the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121172,"byte_end":121251,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ value of this constant will depend on that optional feature also.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121252,"byte_end":121321,"line_start":64,"line_end":64,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122718,"byte_end":122724,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"degree","qualname":"::many::degree","value":"pub fn degree() -> usize","parent":null,"children":[],"decl_id":null,"docs":" The parallelism degree of the implementation, detected at runtime. If you\n hash your inputs in small batches, making the batch size a multiple of\n `degree` will generally give good performance.","sig":null,"attributes":[{"value":"/ The parallelism degree of the implementation, detected at runtime. If you","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121371,"byte_end":121448,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ hash your inputs in small batches, making the batch size a multiple of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121449,"byte_end":121523,"line_start":68,"line_end":68,"column_start":1,"column_end":75}},{"value":"/ `degree` will generally give good performance.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121524,"byte_end":121574,"line_start":69,"line_end":69,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121575,"byte_end":121578,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ For example, an x86 processor that supports AVX2 can compute eight BLAKE2s","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121579,"byte_end":121657,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ hashes in parallel, so `degree` returns 8 on that machine. If you call","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121658,"byte_end":121732,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ [`hash_many`] with only seven inputs, that's not enough to use the AVX2","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121733,"byte_end":121808,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ implementation, and your average throughput will be lower. Likewise if you","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121809,"byte_end":121887,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ call it with nine inputs of equal length, the first eight will be hashed in","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121888,"byte_end":121967,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ parallel with AVX2, but the last one will have to be hashed by itself, and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":121968,"byte_end":122046,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ again your average throughput will be lower.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122047,"byte_end":122095,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122096,"byte_end":122099,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As noted in the module level docs, performance is more complicated if your","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122100,"byte_end":122178,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ inputs are of different lengths. When parallelizing long and short inputs","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122179,"byte_end":122256,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ together, the longer ones will have bytes left over, and the implementation","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122257,"byte_end":122336,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ will try to parallelize those leftover bytes with subsequent inputs. The","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122337,"byte_end":122413,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ more inputs available in that case, the more the implementation will be","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122414,"byte_end":122489,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ able to parallelize.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122490,"byte_end":122514,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122515,"byte_end":122518,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ If you need a constant batch size, for example to collect inputs in an","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122519,"byte_end":122593,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ array, see [`MAX_DEGREE`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122594,"byte_end":122624,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122625,"byte_end":122628,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122629,"byte_end":122665,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/ [`MAX_DEGREE`]: constant.MAX_DEGREE.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":122666,"byte_end":122710,"line_start":90,"line_end":90,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126329,"byte_end":126340,"line_start":213,"line_end":213,"column_start":8,"column_end":19},"name":"update_many","qualname":"::many::update_many","value":"pub fn update_many<'a, 'b, I, T>(I) where I: IntoIterator<Item =\n(&'a mut State, &'b T)>, T: 'b + AsRef<[u8]> + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Update any number of `State` objects at once.","sig":null,"attributes":[{"value":"/ Update any number of `State` objects at once.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125750,"byte_end":125799,"line_start":186,"line_end":186,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125800,"byte_end":125803,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125804,"byte_end":125817,"line_start":188,"line_end":188,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125818,"byte_end":125821,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125822,"byte_end":125829,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::{blake2s, State, many::update_many};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125830,"byte_end":125888,"line_start":191,"line_end":191,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125889,"byte_end":125892,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ let mut states = [","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125893,"byte_end":125915,"line_start":193,"line_end":193,"column_start":1,"column_end":23}},{"value":"/     State::new(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125916,"byte_end":125937,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125938,"byte_end":125959,"line_start":195,"line_end":195,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125960,"byte_end":125981,"line_start":196,"line_end":196,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":125982,"byte_end":126003,"line_start":197,"line_end":197,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126004,"byte_end":126010,"line_start":198,"line_end":198,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126011,"byte_end":126014,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ let inputs = [","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126015,"byte_end":126033,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/     &b\"foo\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126034,"byte_end":126054,"line_start":201,"line_end":201,"column_start":1,"column_end":21}},{"value":"/     &b\"bar\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126055,"byte_end":126075,"line_start":202,"line_end":202,"column_start":1,"column_end":21}},{"value":"/     &b\"baz\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126076,"byte_end":126096,"line_start":203,"line_end":203,"column_start":1,"column_end":21}},{"value":"/     &b\"bing\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126097,"byte_end":126118,"line_start":204,"line_end":204,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126119,"byte_end":126125,"line_start":205,"line_end":205,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126126,"byte_end":126129,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ update_many(states.iter_mut().zip(inputs.iter()));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126130,"byte_end":126184,"line_start":207,"line_end":207,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126185,"byte_end":126188,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ for (state, input) in states.iter_mut().zip(inputs.iter()) {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126189,"byte_end":126253,"line_start":209,"line_end":209,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(blake2s(input), state.finalize());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126254,"byte_end":126307,"line_start":210,"line_end":210,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126308,"byte_end":126313,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":126314,"byte_end":126321,"line_start":212,"line_end":212,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":853},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128792,"byte_end":128803,"line_start":273,"line_end":273,"column_start":12,"column_end":23},"name":"HashManyJob","qualname":"::many::HashManyJob","value":"HashManyJob {  }","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862}],"decl_id":null,"docs":" A job for the [`hash_many`] function. After calling [`hash_many`] on a\n collection of `HashManyJob` objects, you can call [`to_hash`] on each job\n to get the result.","sig":null,"attributes":[{"value":"/ A job for the [`hash_many`] function. After calling [`hash_many`] on a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128491,"byte_end":128565,"line_start":266,"line_end":266,"column_start":1,"column_end":75}},{"value":"/ collection of `HashManyJob` objects, you can call [`to_hash`] on each job","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128566,"byte_end":128643,"line_start":267,"line_end":267,"column_start":1,"column_end":78}},{"value":"/ to get the result.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128644,"byte_end":128666,"line_start":268,"line_end":268,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128667,"byte_end":128670,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128671,"byte_end":128707,"line_start":270,"line_end":270,"column_start":1,"column_end":37}},{"value":"/ [`to_hash`]: struct.HashManyJob.html#method.to_hash","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128708,"byte_end":128763,"line_start":271,"line_end":271,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":129127,"byte_end":129130,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<HashManyJob>::new","value":"pub fn new(&Params, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `HashManyJob` from a set of hashing parameters and an\n input.\n","sig":null,"attributes":[{"value":"/ Construct a new `HashManyJob` from a set of hashing parameters and an","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":129013,"byte_end":129086,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ input.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":129091,"byte_end":129101,"line_start":285,"line_end":285,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":129106,"byte_end":129115,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":130413,"byte_end":130420,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"to_hash","qualname":"<HashManyJob>::to_hash","value":"pub fn to_hash(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Get the hash from a finished job. If you call this before calling\n [`hash_many`], it will panic in debug mode.","sig":null,"attributes":[{"value":"/ Get the hash from a finished job. If you call this before calling","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":130217,"byte_end":130286,"line_start":321,"line_end":321,"column_start":5,"column_end":74}},{"value":"/ [`hash_many`], it will panic in debug mode.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":130291,"byte_end":130338,"line_start":322,"line_end":322,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":130343,"byte_end":130346,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":130351,"byte_end":130387,"line_start":324,"line_end":324,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":130392,"byte_end":130401,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":132057,"byte_end":132066,"line_start":386,"line_end":386,"column_start":8,"column_end":17},"name":"hash_many","qualname":"::many::hash_many","value":"pub fn hash_many<'a, 'b, I>(I) where 'b:'a, I: IntoIterator<Item =\n&'a mut HashManyJob>","parent":null,"children":[],"decl_id":null,"docs":" Hash any number of complete inputs all at once.","sig":null,"attributes":[{"value":"/ Hash any number of complete inputs all at once.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131066,"byte_end":131117,"line_start":349,"line_end":349,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131118,"byte_end":131121,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ This is slightly more efficient than using `update_many` with `State`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131122,"byte_end":131195,"line_start":351,"line_end":351,"column_start":1,"column_end":74}},{"value":"/ objects, because it doesn't need to do any buffering.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131196,"byte_end":131253,"line_start":352,"line_end":352,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131254,"byte_end":131257,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Running `hash_many` on the same `HashManyJob` object more than once has no","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131258,"byte_end":131336,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ effect.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131337,"byte_end":131348,"line_start":355,"line_end":355,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131349,"byte_end":131352,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131353,"byte_end":131366,"line_start":357,"line_end":357,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131367,"byte_end":131370,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131371,"byte_end":131378,"line_start":359,"line_end":359,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::{blake2s, Params, many::{HashManyJob, hash_many}};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131379,"byte_end":131451,"line_start":360,"line_end":360,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131452,"byte_end":131455,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ let inputs = [","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131456,"byte_end":131474,"line_start":362,"line_end":362,"column_start":1,"column_end":19}},{"value":"/     &b\"foo\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131475,"byte_end":131495,"line_start":363,"line_end":363,"column_start":1,"column_end":21}},{"value":"/     &b\"bar\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131496,"byte_end":131516,"line_start":364,"line_end":364,"column_start":1,"column_end":21}},{"value":"/     &b\"baz\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131517,"byte_end":131537,"line_start":365,"line_end":365,"column_start":1,"column_end":21}},{"value":"/     &b\"bing\"[..],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131538,"byte_end":131559,"line_start":366,"line_end":366,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131560,"byte_end":131566,"line_start":367,"line_end":367,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131567,"byte_end":131570,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ let mut params = Params::new();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131571,"byte_end":131606,"line_start":369,"line_end":369,"column_start":1,"column_end":36}},{"value":"/ params.hash_length(16);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131607,"byte_end":131634,"line_start":370,"line_end":370,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131635,"byte_end":131638,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ let mut jobs = [","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131639,"byte_end":131659,"line_start":372,"line_end":372,"column_start":1,"column_end":21}},{"value":"/     HashManyJob::new(&params, inputs[0]),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131660,"byte_end":131705,"line_start":373,"line_end":373,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[1]),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131706,"byte_end":131751,"line_start":374,"line_end":374,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[2]),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131752,"byte_end":131797,"line_start":375,"line_end":375,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[3]),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131798,"byte_end":131843,"line_start":376,"line_end":376,"column_start":1,"column_end":46}},{"value":"/ ];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131844,"byte_end":131850,"line_start":377,"line_end":377,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131851,"byte_end":131854,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ hash_many(jobs.iter_mut());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131855,"byte_end":131886,"line_start":379,"line_end":379,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131887,"byte_end":131890,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ for (input, job) in inputs.iter().zip(jobs.iter()) {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131891,"byte_end":131947,"line_start":381,"line_end":381,"column_start":1,"column_end":57}},{"value":"/     let expected = params.hash(input);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131948,"byte_end":131990,"line_start":382,"line_end":382,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(expected, job.to_hash());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":131991,"byte_end":132035,"line_start":383,"line_end":383,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":132036,"byte_end":132041,"line_start":384,"line_end":384,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":132042,"byte_end":132049,"line_start":385,"line_end":385,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":560},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2464,"byte_end":2472,"line_start":67,"line_end":67,"column_start":11,"column_end":19},"name":"OUTBYTES","qualname":"::OUTBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max hash length.\n","sig":null,"attributes":[{"value":"/ The max hash length.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2429,"byte_end":2453,"line_start":66,"line_end":66,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":561},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2539,"byte_end":2547,"line_start":69,"line_end":69,"column_start":11,"column_end":19},"name":"KEYBYTES","qualname":"::KEYBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max key length.\n","sig":null,"attributes":[{"value":"/ The max key length.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2505,"byte_end":2528,"line_start":68,"line_end":68,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":562},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2615,"byte_end":2624,"line_start":71,"line_end":71,"column_start":11,"column_end":20},"name":"SALTBYTES","qualname":"::SALTBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max salt length.\n","sig":null,"attributes":[{"value":"/ The max salt length.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2580,"byte_end":2604,"line_start":70,"line_end":70,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":563},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2703,"byte_end":2716,"line_start":73,"line_end":73,"column_start":11,"column_end":24},"name":"PERSONALBYTES","qualname":"::PERSONALBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max personalization length.\n","sig":null,"attributes":[{"value":"/ The max personalization length.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2657,"byte_end":2692,"line_start":72,"line_end":72,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":564},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2949,"byte_end":2959,"line_start":76,"line_end":76,"column_start":11,"column_end":21},"name":"BLOCKBYTES","qualname":"::BLOCKBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number input bytes passed to each call to the compression function. Small benchmarks need\n to use an even multiple of `BLOCKBYTES`, or else their apparent throughput will be low.\n","sig":null,"attributes":[{"value":"/ The number input bytes passed to each call to the compression function. Small benchmarks need","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2749,"byte_end":2846,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ to use an even multiple of `BLOCKBYTES`, or else their apparent throughput will be low.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2847,"byte_end":2938,"line_start":75,"line_end":75,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":570},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4099,"byte_end":4106,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"blake2s","qualname":"::blake2s","value":"pub fn blake2s(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Compute the BLAKE2s hash of a slice of bytes all at once, using default\n parameters.","sig":null,"attributes":[{"value":"/ Compute the BLAKE2s hash of a slice of bytes all at once, using default","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":3758,"byte_end":3833,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/ parameters.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":3834,"byte_end":3849,"line_start":96,"line_end":96,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":3850,"byte_end":3853,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":3854,"byte_end":3867,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":3868,"byte_end":3871,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":3872,"byte_end":3879,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # use blake2s_simd::{blake2s, Params};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":3880,"byte_end":3922,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/ let expected = \"08d6cad88075de8f192db097573d0e829411cd91eb6ec65e8fc16c017edfdb74\";","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":3923,"byte_end":4009,"line_start":102,"line_end":102,"column_start":1,"column_end":87}},{"value":"/ let hash = blake2s(b\"foo\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4010,"byte_end":4041,"line_start":103,"line_end":103,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4042,"byte_end":4083,"line_start":104,"line_end":104,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4084,"byte_end":4091,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":866},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":5096,"byte_end":5102,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"Params","qualname":"::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"decl_id":null,"docs":" A parameter builder that exposes all the non-default BLAKE2 features.","sig":null,"attributes":[{"value":"/ A parameter builder that exposes all the non-default BLAKE2 features.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4164,"byte_end":4237,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4238,"byte_end":4241,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Apart from `hash_length`, which controls the length of the final `Hash`,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4242,"byte_end":4318,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"/ all of these parameters are just associated data that gets mixed with the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4319,"byte_end":4396,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ input. For more details, see [the BLAKE2 spec](https://blake2.net/blake2.pdf).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4397,"byte_end":4479,"line_start":114,"line_end":114,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4480,"byte_end":4483,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Several of the parameters have a valid range defined in the spec and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4484,"byte_end":4556,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ documented below. Trying to set an invalid parameter will panic.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4557,"byte_end":4625,"line_start":117,"line_end":117,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4626,"byte_end":4629,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4630,"byte_end":4643,"line_start":119,"line_end":119,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4644,"byte_end":4647,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4648,"byte_end":4655,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # use blake2s_simd::Params;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4656,"byte_end":4687,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/ // Create a Params object with a secret key and a non-default length.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4688,"byte_end":4761,"line_start":123,"line_end":123,"column_start":1,"column_end":74}},{"value":"/ let mut params = Params::new();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4762,"byte_end":4797,"line_start":124,"line_end":124,"column_start":1,"column_end":36}},{"value":"/ params.key(b\"my secret key\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4798,"byte_end":4831,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/ params.hash_length(16);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4832,"byte_end":4859,"line_start":126,"line_end":126,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4860,"byte_end":4863,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // Use those params to hash an input all at once.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4864,"byte_end":4917,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/ let hash = params.hash(b\"my input\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4918,"byte_end":4958,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4959,"byte_end":4962,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // Or use those params to build an incremental State.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":4963,"byte_end":5020,"line_start":131,"line_end":131,"column_start":1,"column_end":58}},{"value":"/ let mut state = params.to_state();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":5021,"byte_end":5059,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":5060,"byte_end":5067,"line_start":133,"line_end":133,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":5529,"byte_end":5532,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<Params>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `Params::default()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Params::default()`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":5465,"byte_end":5503,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":5508,"byte_end":5517,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":7171,"byte_end":7175,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"hash","qualname":"<Params>::hash","value":"pub fn hash(&Self, &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash an input all at once with these parameters.\n","sig":null,"attributes":[{"value":"/ Hash an input all at once with these parameters.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":7093,"byte_end":7145,"line_start":197,"line_end":197,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":7150,"byte_end":7159,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":7854,"byte_end":7862,"line_start":221,"line_end":221,"column_start":12,"column_end":20},"name":"to_state","qualname":"<Params>::to_state","value":"pub fn to_state(&Self) -> State","parent":null,"children":[],"decl_id":null,"docs":" Construct a `State` object based on these parameters, for hashing input\n incrementally.\n","sig":null,"attributes":[{"value":"/ Construct a `State` object based on these parameters, for hashing input","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":7744,"byte_end":7819,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ incrementally.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":7824,"byte_end":7842,"line_start":220,"line_end":220,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8182,"byte_end":8193,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"hash_length","qualname":"<Params>::hash_length","value":"pub fn hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the final hash in bytes, from 1 to `OUTBYTES` (32). Apart from\n controlling the length of the final `Hash`, this is also associated data, and changing it\n will result in a totally different hash.\n","sig":null,"attributes":[{"value":"/ Set the length of the final hash in bytes, from 1 to `OUTBYTES` (32). Apart from","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":7925,"byte_end":8009,"line_start":225,"line_end":225,"column_start":5,"column_end":89}},{"value":"/ controlling the length of the final `Hash`, this is also associated data, and changing it","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8014,"byte_end":8107,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/ will result in a totally different hash.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8112,"byte_end":8156,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8161,"byte_end":8170,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8609,"byte_end":8612,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"key","qualname":"<Params>::key","value":"pub fn key(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a secret key, so that BLAKE2 acts as a MAC. The maximum key length is `KEYBYTES` (32).\n An empty key is equivalent to having no key at all.\n","sig":null,"attributes":[{"value":"/ Use a secret key, so that BLAKE2 acts as a MAC. The maximum key length is `KEYBYTES` (32).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8429,"byte_end":8523,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ An empty key is equivalent to having no key at all.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8528,"byte_end":8583,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8588,"byte_end":8597,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9049,"byte_end":9053,"line_start":253,"line_end":253,"column_start":12,"column_end":16},"name":"salt","qualname":"<Params>::salt","value":"pub fn salt(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" At most `SALTBYTES` (8). Shorter salts are padded with null bytes. An empty salt is\n equivalent to having no salt at all.\n","sig":null,"attributes":[{"value":"/ At most `SALTBYTES` (8). Shorter salts are padded with null bytes. An empty salt is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8891,"byte_end":8978,"line_start":250,"line_end":250,"column_start":5,"column_end":92}},{"value":"/ equivalent to having no salt at all.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":8983,"byte_end":9023,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9028,"byte_end":9037,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9480,"byte_end":9488,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"personal","qualname":"<Params>::personal","value":"pub fn personal(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" At most `PERSONALBYTES` (8). Shorter personalizations are padded with null bytes. An empty\n personalization is equivalent to having no personalization at all.\n","sig":null,"attributes":[{"value":"/ At most `PERSONALBYTES` (8). Shorter personalizations are padded with null bytes. An empty","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9285,"byte_end":9379,"line_start":260,"line_end":260,"column_start":5,"column_end":99}},{"value":"/ personalization is equivalent to having no personalization at all.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9384,"byte_end":9454,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9459,"byte_end":9468,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9951,"byte_end":9957,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"fanout","qualname":"<Params>::fanout","value":"pub fn fanout(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (meaning unlimited) to 255. The default is 1 (meaning sequential).\n","sig":null,"attributes":[{"value":"/ From 0 (meaning unlimited) to 255. The default is 1 (meaning sequential).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9848,"byte_end":9925,"line_start":274,"line_end":274,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":9930,"byte_end":9939,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10187,"byte_end":10196,"line_start":283,"line_end":283,"column_start":12,"column_end":21},"name":"max_depth","qualname":"<Params>::max_depth","value":"pub fn max_depth(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (meaning BLAKE2X B2 hashes), through 1 (the default, meaning sequential) to 255 (meaning unlimited).\n","sig":null,"attributes":[{"value":"/ From 0 (meaning BLAKE2X B2 hashes), through 1 (the default, meaning sequential) to 255 (meaning unlimited).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10050,"byte_end":10161,"line_start":281,"line_end":281,"column_start":5,"column_end":116}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10166,"byte_end":10175,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10388,"byte_end":10403,"line_start":290,"line_end":290,"column_start":12,"column_end":27},"name":"max_leaf_length","qualname":"<Params>::max_leaf_length","value":"pub fn max_leaf_length(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning unlimited or sequential) to `2^32 - 1`.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning unlimited or sequential) to `2^32 - 1`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10290,"byte_end":10362,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10367,"byte_end":10376,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10617,"byte_end":10628,"line_start":297,"line_end":297,"column_start":12,"column_end":23},"name":"node_offset","qualname":"<Params>::node_offset","value":"pub fn node_offset(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning first, leftmost, leaf, or sequential) to `2^48 - 1`.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning first, leftmost, leaf, or sequential) to `2^48 - 1`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10506,"byte_end":10591,"line_start":295,"line_end":295,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10596,"byte_end":10605,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10881,"byte_end":10891,"line_start":305,"line_end":305,"column_start":12,"column_end":22},"name":"node_depth","qualname":"<Params>::node_depth","value":"pub fn node_depth(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning leaf or sequential) to 255.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning leaf or sequential) to 255.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10795,"byte_end":10855,"line_start":303,"line_end":303,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10860,"byte_end":10869,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11076,"byte_end":11093,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"inner_hash_length","qualname":"<Params>::inner_hash_length","value":"pub fn inner_hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning sequential) to `OUTBYTES` (32).\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning sequential) to `OUTBYTES` (32).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":10986,"byte_end":11050,"line_start":310,"line_end":310,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11055,"byte_end":11064,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11560,"byte_end":11569,"line_start":324,"line_end":324,"column_start":12,"column_end":21},"name":"last_node","qualname":"<Params>::last_node","value":"pub fn last_node(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the rightmost node in a row. This can also be changed on the\n `State` object, potentially after hashing has begun. See\n [`State::set_last_node`].","sig":null,"attributes":[{"value":"/ Indicates the rightmost node in a row. This can also be changed on the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11280,"byte_end":11354,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ `State` object, potentially after hashing has begun. See","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11359,"byte_end":11419,"line_start":319,"line_end":319,"column_start":5,"column_end":65}},{"value":"/ [`State::set_last_node`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11424,"byte_end":11453,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11458,"byte_end":11461,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`State::set_last_node`]: struct.State.html#method.set_last_node","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11466,"byte_end":11534,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11539,"byte_end":11548,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":899},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":13073,"byte_end":13078,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"State","qualname":"::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909}],"decl_id":null,"docs":" An incremental hasher for BLAKE2s.","sig":null,"attributes":[{"value":"/ An incremental hasher for BLAKE2s.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12627,"byte_end":12665,"line_start":363,"line_end":363,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12666,"byte_end":12669,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ To construct a `State` with non-default parameters, see `Params::to_state`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12670,"byte_end":12749,"line_start":365,"line_end":365,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12750,"byte_end":12753,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12754,"byte_end":12767,"line_start":367,"line_end":367,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12768,"byte_end":12771,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12772,"byte_end":12779,"line_start":369,"line_end":369,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::{State, blake2s};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12780,"byte_end":12819,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12820,"byte_end":12823,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ let mut state = blake2s_simd::State::new();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12824,"byte_end":12871,"line_start":372,"line_end":372,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12872,"byte_end":12875,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ state.update(b\"foo\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12876,"byte_end":12901,"line_start":374,"line_end":374,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(blake2s(b\"foo\"), state.finalize());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12902,"byte_end":12952,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12953,"byte_end":12956,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ state.update(b\"bar\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12957,"byte_end":12982,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(blake2s(b\"foobar\"), state.finalize());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":12983,"byte_end":13036,"line_start":378,"line_end":378,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":13037,"byte_end":13044,"line_start":379,"line_end":379,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":13381,"byte_end":13384,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `State::default()` or `Params::default().to_state()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `State::default()` or `Params::default().to_state()`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":13298,"byte_end":13369,"line_start":393,"line_end":393,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":15233,"byte_end":15239,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"update","qualname":"<State>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input to the hash. You can call `update` any number of times.\n","sig":null,"attributes":[{"value":"/ Add input to the hash. You can call `update` any number of times.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":15152,"byte_end":15221,"line_start":444,"line_end":444,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":16659,"byte_end":16667,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple\n times will give the same result. It's also possible to `update` with more input in between.\n","sig":null,"attributes":[{"value":"/ Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":16453,"byte_end":16547,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ times will give the same result. It's also possible to `update` with more input in between.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":16552,"byte_end":16647,"line_start":473,"line_end":473,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17650,"byte_end":17663,"line_start":498,"line_end":498,"column_start":12,"column_end":25},"name":"set_last_node","qualname":"<State>::set_last_node","value":"pub fn set_last_node(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a flag indicating that this is the last node of its level in a tree hash. This is\n equivalent to [`Params::last_node`], except that it can be set at any time before calling\n `finalize`. That allows callers to begin hashing a node without knowing ahead of time\n whether it's the last in its level. For more details about the intended use of this flag\n [the BLAKE2 spec].","sig":null,"attributes":[{"value":"/ Set a flag indicating that this is the last node of its level in a tree hash. This is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17101,"byte_end":17190,"line_start":490,"line_end":490,"column_start":5,"column_end":94}},{"value":"/ equivalent to [`Params::last_node`], except that it can be set at any time before calling","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17195,"byte_end":17288,"line_start":491,"line_end":491,"column_start":5,"column_end":98}},{"value":"/ `finalize`. That allows callers to begin hashing a node without knowing ahead of time","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17293,"byte_end":17382,"line_start":492,"line_end":492,"column_start":5,"column_end":94}},{"value":"/ whether it's the last in its level. For more details about the intended use of this flag","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17387,"byte_end":17479,"line_start":493,"line_end":493,"column_start":5,"column_end":97}},{"value":"/ [the BLAKE2 spec].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17484,"byte_end":17506,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17511,"byte_end":17514,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Params::last_node`]: struct.Params.html#method.last_node","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17519,"byte_end":17581,"line_start":496,"line_end":496,"column_start":5,"column_end":67}},{"value":"/ [the BLAKE2 spec]: https://blake2.net/blake2.pdf","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17586,"byte_end":17638,"line_start":497,"line_end":497,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":18080,"byte_end":18085,"line_start":511,"line_end":511,"column_start":12,"column_end":17},"name":"count","qualname":"<State>::count","value":"pub fn count(&Self) -> Count","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes input so far.","sig":null,"attributes":[{"value":"/ Return the total number of bytes input so far.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17862,"byte_end":17912,"line_start":507,"line_end":507,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17917,"byte_end":17920,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Note that `count` doesn't include the bytes of the key block, if any.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":17925,"byte_end":17998,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ It's exactly the total number of input bytes fed to `update`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":18003,"byte_end":18068,"line_start":510,"line_end":510,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":931},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19801,"byte_end":19805,"line_start":573,"line_end":573,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"Hash {  }","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":934}],"decl_id":null,"docs":" A finalized BLAKE2 hash, with constant-time equality.\n","sig":null,"attributes":[{"value":"/ A finalized BLAKE2 hash, with constant-time equality.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19709,"byte_end":19766,"line_start":571,"line_end":571,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20031,"byte_end":20039,"line_start":581,"line_end":581,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a byte slice. Note that if you're using BLAKE2 as a MAC, you need\n constant time equality, which `&[u8]` doesn't provide.\n","sig":null,"attributes":[{"value":"/ Convert the hash to a byte slice. Note that if you're using BLAKE2 as a MAC, you need","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19867,"byte_end":19956,"line_start":579,"line_end":579,"column_start":5,"column_end":94}},{"value":"/ constant time equality, which `&[u8]` doesn't provide.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19961,"byte_end":20019,"line_start":580,"line_end":580,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20363,"byte_end":20371,"line_start":589,"line_end":589,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Hash>::as_array","value":"pub fn as_array(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a byte array. Note that if you're using BLAKE2 as a\n MAC, you need constant time equality, which arrays don't provide. This\n panics in debug mode if the length of the hash isn't `OUTBYTES`.\n","sig":null,"attributes":[{"value":"/ Convert the hash to a byte array. Note that if you're using BLAKE2 as a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20110,"byte_end":20185,"line_start":585,"line_end":585,"column_start":5,"column_end":80}},{"value":"/ MAC, you need constant time equality, which arrays don't provide. This","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20190,"byte_end":20264,"line_start":586,"line_end":586,"column_start":5,"column_end":79}},{"value":"/ panics in debug mode if the length of the hash isn't `OUTBYTES`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20269,"byte_end":20337,"line_start":587,"line_end":587,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20342,"byte_end":20351,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20633,"byte_end":20639,"line_start":596,"line_end":596,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"pub fn to_hex(&Self) -> HexString","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a lowercase hexadecimal\n [`ArrayString`](https://docs.rs/arrayvec/0.7/arrayvec/struct.ArrayString.html).\n","sig":null,"attributes":[{"value":"/ Convert the hash to a lowercase hexadecimal","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20486,"byte_end":20533,"line_start":594,"line_end":594,"column_start":5,"column_end":52}},{"value":"/ [`ArrayString`](https://docs.rs/arrayvec/0.7/arrayvec/struct.ArrayString.html).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":20538,"byte_end":20621,"line_start":595,"line_end":595,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":645},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":22597,"byte_end":22607,"line_start":671,"line_end":671,"column_start":9,"column_end":19},"name":"benchmarks","qualname":"::benchmarks","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":647},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":22640,"byte_end":22654,"line_start":674,"line_end":674,"column_start":12,"column_end":26},"name":"force_portable","qualname":"::benchmarks::force_portable","value":"pub fn force_portable(&mut Params)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":648},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":22762,"byte_end":22785,"line_start":678,"line_end":678,"column_start":12,"column_end":35},"name":"force_portable_blake2sp","qualname":"::benchmarks::force_portable_blake2sp","value":"pub fn force_portable_blake2sp(&mut blake2sp::Params)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":81079,"byte_end":81085,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85285,"byte_end":85291,"line_start":190,"line_end":190,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85370,"byte_end":85376,"line_start":196,"line_end":196,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":86627,"byte_end":86632,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":94280,"byte_end":94285,"line_start":422,"line_end":422,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":94500,"byte_end":94505,"line_start":433,"line_end":433,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":94744,"byte_end":94749,"line_start":444,"line_end":444,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":100803,"byte_end":100817,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":104499,"byte_end":104502,"line_start":142,"line_end":142,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":105006,"byte_end":105014,"line_start":162,"line_end":162,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":105289,"byte_end":105297,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":105566,"byte_end":105572,"line_start":193,"line_end":193,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128991,"byte_end":129002,"line_start":283,"line_end":283,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":130650,"byte_end":130661,"line_start":335,"line_end":335,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":5452,"byte_end":5458,"line_start":151,"line_end":151,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11783,"byte_end":11789,"line_start":334,"line_end":334,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11868,"byte_end":11874,"line_start":340,"line_end":340,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":13286,"byte_end":13291,"line_start":392,"line_end":392,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":18966,"byte_end":18971,"line_start":539,"line_end":539,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19186,"byte_end":19191,"line_start":550,"line_end":550,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19560,"byte_end":19565,"line_start":563,"line_end":563,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19856,"byte_end":19860,"line_start":578,"line_end":578,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21005,"byte_end":21009,"line_start":611,"line_end":611,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21174,"byte_end":21178,"line_start":620,"line_end":620,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21363,"byte_end":21367,"line_start":627,"line_end":627,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21612,"byte_end":21616,"line_start":634,"line_end":634,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21749,"byte_end":21753,"line_start":640,"line_end":640,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21779,"byte_end":21783,"line_start":642,"line_end":642,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21871,"byte_end":21875,"line_start":648,"line_end":648,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2334,"byte_end":2342,"line_start":56,"line_end":56,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":330}},{"kind":"Mod","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":2362,"byte_end":2366,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":475}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":81079,"byte_end":81085,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85285,"byte_end":85291,"line_start":190,"line_end":190,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":85370,"byte_end":85376,"line_start":196,"line_end":196,"column_start":21,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":86627,"byte_end":86632,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":94280,"byte_end":94285,"line_start":422,"line_end":422,"column_start":25,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":770},"to":{"krate":1,"index":4783}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":94500,"byte_end":94505,"line_start":433,"line_end":433,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/blake2sp.rs","byte_start":94744,"byte_end":94749,"line_start":444,"line_end":444,"column_start":18,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":100803,"byte_end":100817,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":104499,"byte_end":104502,"line_start":142,"line_end":142,"column_start":35,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":105006,"byte_end":105014,"line_start":162,"line_end":162,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":105289,"byte_end":105297,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/guts.rs","byte_start":105566,"byte_end":105572,"line_start":193,"line_end":193,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":128991,"byte_end":129002,"line_start":283,"line_end":283,"column_start":10,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/many.rs","byte_start":130650,"byte_end":130661,"line_start":335,"line_end":335,"column_start":25,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":853},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":5452,"byte_end":5458,"line_start":151,"line_end":151,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11783,"byte_end":11789,"line_start":334,"line_end":334,"column_start":18,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":11868,"byte_end":11874,"line_start":340,"line_end":340,"column_start":21,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":13286,"byte_end":13291,"line_start":392,"line_end":392,"column_start":6,"column_end":11},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":18966,"byte_end":18971,"line_start":539,"line_end":539,"column_start":25,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":899},"to":{"krate":1,"index":4783}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19186,"byte_end":19191,"line_start":550,"line_end":550,"column_start":21,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":899},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19560,"byte_end":19565,"line_start":563,"line_end":563,"column_start":18,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":899},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":19856,"byte_end":19860,"line_start":578,"line_end":578,"column_start":6,"column_end":10},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21005,"byte_end":21009,"line_start":611,"line_end":611,"column_start":31,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":931},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21174,"byte_end":21178,"line_start":620,"line_end":620,"column_start":32,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":931},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21363,"byte_end":21367,"line_start":627,"line_end":627,"column_start":20,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":931},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21612,"byte_end":21616,"line_start":634,"line_end":634,"column_start":26,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":931},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21749,"byte_end":21753,"line_start":640,"line_end":640,"column_start":13,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":931},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21779,"byte_end":21783,"line_start":642,"line_end":642,"column_start":22,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":931},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-1.0.0/src/lib.rs","byte_start":21871,"byte_end":21875,"line_start":648,"line_end":648,"column_start":21,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":931},"to":{"krate":2,"index":9678}}]}