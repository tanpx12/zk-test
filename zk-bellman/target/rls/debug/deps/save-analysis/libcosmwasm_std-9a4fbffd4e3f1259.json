{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0","program":"/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cosmwasm_std","--edition=2021","/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=9a4fbffd4e3f1259","-C","extra-filename=-9a4fbffd4e3f1259","--out-dir","/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps","-L","dependency=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps","--extern","base64=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libbase64-8bcb81a96746c276.rmeta","--extern","cosmwasm_crypto=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libcosmwasm_crypto-cf5378a09f05e0a0.rmeta","--extern","cosmwasm_derive=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libcosmwasm_derive-aa79f4c5efa45538.so","--extern","forward_ref=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libforward_ref-177e01ef05abcff1.rmeta","--extern","schemars=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libschemars-62d9c02aecbc047e.rmeta","--extern","serde=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libserde-c88798db86d521a3.rmeta","--extern","serde_json_wasm=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libserde_json_wasm-22fe165d8310c3e5.rmeta","--extern","thiserror=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libthiserror-126c029cb50ba4e6.rmeta","--extern","uint=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libuint-8fe299cf0f5b34df.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libcosmwasm_std-9a4fbffd4e3f1259.rmeta"},"prelude":{"crate_id":{"name":"cosmwasm_std","disambiguator":[11154491526044542627,0]},"crate_root":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src","external_crates":[{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.3/src/uint.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","num":20,"id":{"name":"schemars","disambiguator":[15109409458033534203,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","num":21,"id":{"name":"schemars_derive","disambiguator":[17496209670150570717,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","num":22,"id":{"name":"serde_json","disambiguator":[7312670577775737590,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","num":23,"id":{"name":"serde","disambiguator":[3632234491205837593,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","num":24,"id":{"name":"serde_derive","disambiguator":[533534611983646608,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","num":25,"id":{"name":"itoa","disambiguator":[10943023997883746843,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","num":26,"id":{"name":"ryu","disambiguator":[18294569086101649632,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","num":27,"id":{"name":"dyn_clone","disambiguator":[17403517083170114140,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":28,"id":{"name":"cosmwasm_crypto","disambiguator":[6243848917665830766,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":29,"id":{"name":"ed25519_zebra","disambiguator":[4826555257331487454,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":30,"id":{"name":"curve25519_dalek","disambiguator":[10582456924491932806,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":31,"id":{"name":"byteorder","disambiguator":[7270727058393416683,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":32,"id":{"name":"digest","disambiguator":[17287494447085249291,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":33,"id":{"name":"generic_array","disambiguator":[10771557986127809409,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":34,"id":{"name":"typenum","disambiguator":[12951824868898580498,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":35,"id":{"name":"rand_core","disambiguator":[1608848207285654271,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":36,"id":{"name":"getrandom","disambiguator":[15932464237843530391,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":37,"id":{"name":"cfg_if","disambiguator":[243630855546215384,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":38,"id":{"name":"libc","disambiguator":[17397406625196134390,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":39,"id":{"name":"zeroize","disambiguator":[13125297553964346380,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":40,"id":{"name":"zeroize_derive","disambiguator":[8833909791310612601,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":41,"id":{"name":"subtle","disambiguator":[4693613423320812284,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":42,"id":{"name":"rand_core","disambiguator":[4014583370221910764,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":43,"id":{"name":"getrandom","disambiguator":[12288876657505099997,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":44,"id":{"name":"sha2","disambiguator":[14667723107679700896,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":45,"id":{"name":"block_buffer","disambiguator":[15250610170327066415,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":46,"id":{"name":"opaque_debug","disambiguator":[1310480566253112077,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":47,"id":{"name":"cpufeatures","disambiguator":[5202625607623809245,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":48,"id":{"name":"thiserror","disambiguator":[2688931769416576067,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":49,"id":{"name":"thiserror_impl","disambiguator":[13749367074999885622,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":50,"id":{"name":"hex","disambiguator":[9772945174470309834,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":51,"id":{"name":"k256","disambiguator":[10356428869628864890,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":52,"id":{"name":"elliptic_curve","disambiguator":[12795913961393701916,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":53,"id":{"name":"crypto_bigint","disambiguator":[17209104868743169044,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":54,"id":{"name":"group","disambiguator":[18138184789630174981,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":55,"id":{"name":"ff","disambiguator":[2489881397458322412,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":56,"id":{"name":"sec1","disambiguator":[17362302576190128737,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":57,"id":{"name":"der","disambiguator":[9274519821903414986,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":58,"id":{"name":"const_oid","disambiguator":[15371614715708163642,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":59,"id":{"name":"pkcs8","disambiguator":[840795888749407728,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":60,"id":{"name":"spki","disambiguator":[10808895318522168594,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":61,"id":{"name":"base16ct","disambiguator":[7227140462002639331,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":62,"id":{"name":"ecdsa","disambiguator":[16367218168609376484,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":63,"id":{"name":"signature","disambiguator":[14585154674484251121,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":64,"id":{"name":"rfc6979","disambiguator":[14770768533574730290,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":65,"id":{"name":"hmac","disambiguator":[8755179004532481270,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","num":66,"id":{"name":"crypto_mac","disambiguator":[16899777861757291178,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","num":67,"id":{"name":"forward_ref","disambiguator":[8039755248651498956,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","num":68,"id":{"name":"cosmwasm_derive","disambiguator":[12055783651250370800,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","num":69,"id":{"name":"uint","disambiguator":[17901927448985618614,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","num":70,"id":{"name":"static_assertions","disambiguator":[1827679125116784259,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","num":71,"id":{"name":"crunchy","disambiguator":[8448148684230626685,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","num":72,"id":{"name":"base64","disambiguator":[5300500336962509114,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/serde.rs","num":73,"id":{"name":"serde_json_wasm","disambiguator":[7475860637113451346,0]}}],"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":0,"byte_end":4478,"line_start":1,"line_end":122,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3164},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48417,"byte_end":48435,"line_start":6,"line_end":6,"column_start":31,"column_end":49},"alias_span":null,"name":"RecoverPubkeyError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3336},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48462,"byte_end":48483,"line_start":8,"line_end":8,"column_start":5,"column_end":26},"alias_span":null,"name":"CheckedFromRatioError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3320},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48485,"byte_end":48510,"line_start":8,"line_end":8,"column_start":28,"column_end":53},"alias_span":null,"name":"CheckedMultiplyRatioError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3295},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48512,"byte_end":48535,"line_start":8,"line_end":8,"column_start":55,"column_end":78},"alias_span":null,"name":"ConversionOverflowError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3318},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48537,"byte_end":48554,"line_start":8,"line_end":8,"column_start":80,"column_end":97},"alias_span":null,"name":"DivideByZeroError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3272},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48560,"byte_end":48573,"line_start":9,"line_end":9,"column_start":5,"column_end":18},"alias_span":null,"name":"OverflowError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3231},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48575,"byte_end":48592,"line_start":9,"line_end":9,"column_start":20,"column_end":37},"alias_span":null,"name":"OverflowOperation","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3185},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48594,"byte_end":48602,"line_start":9,"line_end":9,"column_start":39,"column_end":47},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48604,"byte_end":48613,"line_start":9,"line_end":9,"column_start":49,"column_end":58},"alias_span":null,"name":"StdResult","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3587},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48640,"byte_end":48651,"line_start":11,"line_end":11,"column_start":23,"column_end":34},"alias_span":null,"name":"SystemError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3599},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/mod.rs","byte_start":48681,"byte_end":48698,"line_start":12,"line_end":12,"column_start":29,"column_end":46},"alias_span":null,"name":"VerificationError","value":"","parent":{"krate":0,"index":242}},{"kind":"Use","ref_id":{"krate":0,"index":3636},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112650,"byte_end":112657,"line_start":10,"line_end":10,"column_start":19,"column_end":26},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112659,"byte_end":112679,"line_start":10,"line_end":10,"column_start":28,"column_end":48},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":3670},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112659,"byte_end":112679,"line_start":10,"line_end":10,"column_start":28,"column_end":48},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":3719},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112703,"byte_end":112713,"line_start":11,"line_end":11,"column_start":22,"column_end":32},"alias_span":null,"name":"Decimal256","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":3752},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112715,"byte_end":112738,"line_start":11,"line_end":11,"column_start":34,"column_end":57},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":3753},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112715,"byte_end":112738,"line_start":11,"line_end":11,"column_start":34,"column_end":57},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112759,"byte_end":112767,"line_start":12,"line_end":12,"column_start":19,"column_end":27},"alias_span":null,"name":"Fraction","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112784,"byte_end":112789,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"alias_span":null,"name":"Isqrt","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":3802},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112808,"byte_end":112815,"line_start":14,"line_end":14,"column_start":18,"column_end":25},"alias_span":null,"name":"Uint128","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":4412},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112834,"byte_end":112841,"line_start":15,"line_end":15,"column_start":18,"column_end":25},"alias_span":null,"name":"Uint256","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":5022},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112860,"byte_end":112867,"line_start":16,"line_end":16,"column_start":18,"column_end":25},"alias_span":null,"name":"Uint512","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":5083},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/mod.rs","byte_start":112885,"byte_end":112891,"line_start":17,"line_end":17,"column_start":17,"column_end":23},"alias_span":null,"name":"Uint64","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":5397},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":376476,"byte_end":376494,"line_start":13,"line_end":13,"column_start":16,"column_end":34},"alias_span":null,"name":"AllBalanceResponse","value":"","parent":{"krate":0,"index":1822}},{"kind":"Use","ref_id":{"krate":0,"index":5336},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":376496,"byte_end":376511,"line_start":13,"line_end":13,"column_start":36,"column_end":51},"alias_span":null,"name":"BalanceResponse","value":"","parent":{"krate":0,"index":1822}},{"kind":"Use","ref_id":{"krate":0,"index":5271},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":376513,"byte_end":376522,"line_start":13,"line_end":13,"column_start":53,"column_end":62},"alias_span":null,"name":"BankQuery","value":"","parent":{"krate":0,"index":1822}},{"kind":"Use","ref_id":{"krate":0,"index":5573},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":376867,"byte_end":376887,"line_start":21,"line_end":21,"column_start":16,"column_end":36},"alias_span":null,"name":"ContractInfoResponse","value":"","parent":{"krate":0,"index":1822}},{"kind":"Use","ref_id":{"krate":0,"index":5564},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":376889,"byte_end":376898,"line_start":21,"line_end":21,"column_start":38,"column_end":47},"alias_span":null,"name":"WasmQuery","value":"","parent":{"krate":0,"index":1822}},{"kind":"Use","ref_id":{"krate":0,"index":5791},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388469,"byte_end":388483,"line_start":12,"line_end":12,"column_start":26,"column_end":40},"alias_span":null,"name":"ContractResult","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1959},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388506,"byte_end":388518,"line_start":13,"line_end":13,"column_start":22,"column_end":34},"alias_span":null,"name":"wasm_execute","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1957},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388520,"byte_end":388536,"line_start":13,"line_end":13,"column_start":36,"column_end":52},"alias_span":null,"name":"wasm_instantiate","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6005},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388538,"byte_end":388545,"line_start":13,"line_end":13,"column_start":54,"column_end":61},"alias_span":null,"name":"BankMsg","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":5867},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388547,"byte_end":388556,"line_start":13,"line_end":13,"column_start":63,"column_end":72},"alias_span":null,"name":"CosmosMsg","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":1955},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388558,"byte_end":388567,"line_start":13,"line_end":13,"column_start":74,"column_end":83},"alias_span":null,"name":"CustomMsg","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6262},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388569,"byte_end":388576,"line_start":13,"line_end":13,"column_start":85,"column_end":92},"alias_span":null,"name":"WasmMsg","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6282},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388744,"byte_end":388749,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":2027},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388768,"byte_end":388772,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"alias_span":null,"name":"attr","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6405},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388774,"byte_end":388783,"line_start":19,"line_end":19,"column_start":24,"column_end":33},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6341},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388785,"byte_end":388790,"line_start":19,"line_end":19,"column_start":35,"column_end":40},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":2034},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388808,"byte_end":388821,"line_start":20,"line_end":20,"column_start":16,"column_end":29},"alias_span":null,"name":"QueryResponse","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6471},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388841,"byte_end":388849,"line_start":21,"line_end":21,"column_start":19,"column_end":27},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":2138},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388893,"byte_end":388916,"line_start":23,"line_end":23,"column_start":22,"column_end":45},"alias_span":null,"name":"SubMsgExecutionResponse","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6700},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388940,"byte_end":388945,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"alias_span":null,"name":"Reply","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6611},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388947,"byte_end":388954,"line_start":24,"line_end":24,"column_start":30,"column_end":37},"alias_span":null,"name":"ReplyOn","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6620},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388956,"byte_end":388962,"line_start":24,"line_end":24,"column_start":39,"column_end":45},"alias_span":null,"name":"SubMsg","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6828},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388964,"byte_end":388978,"line_start":24,"line_end":24,"column_start":47,"column_end":61},"alias_span":null,"name":"SubMsgResponse","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6821},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":388980,"byte_end":388992,"line_start":24,"line_end":24,"column_start":63,"column_end":75},"alias_span":null,"name":"SubMsgResult","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":6958},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/mod.rs","byte_start":389018,"byte_end":389030,"line_start":25,"line_end":25,"column_start":24,"column_end":36},"alias_span":null,"name":"SystemResult","value":"","parent":{"krate":0,"index":1895}},{"kind":"Use","ref_id":{"krate":0,"index":2967},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":400,"byte_end":404,"line_start":27,"line_end":27,"column_start":28,"column_end":32},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3017},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":406,"byte_end":419,"line_start":27,"line_end":27,"column_start":34,"column_end":47},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3018},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":406,"byte_end":419,"line_start":27,"line_end":27,"column_start":34,"column_end":47},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3063},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":445,"byte_end":451,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3064},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":445,"byte_end":451,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":476,"byte_end":480,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":482,"byte_end":487,"line_start":29,"line_end":29,"column_start":30,"column_end":35},"alias_span":null,"name":"coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":489,"byte_end":498,"line_start":29,"line_end":29,"column_start":37,"column_end":46},"alias_span":null,"name":"has_coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":500,"byte_end":504,"line_start":29,"line_end":29,"column_start":48,"column_end":52},"alias_span":null,"name":"Coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3154},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":529,"byte_end":533,"line_start":30,"line_end":30,"column_start":23,"column_end":27},"alias_span":null,"name":"Deps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":535,"byte_end":542,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"alias_span":null,"name":"DepsMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":544,"byte_end":553,"line_start":30,"line_end":30,"column_start":38,"column_end":47},"alias_span":null,"name":"OwnedDeps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3336},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":585,"byte_end":606,"line_start":32,"line_end":32,"column_start":5,"column_end":26},"alias_span":null,"name":"CheckedFromRatioError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3320},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":608,"byte_end":633,"line_start":32,"line_end":32,"column_start":28,"column_end":53},"alias_span":null,"name":"CheckedMultiplyRatioError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3295},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":635,"byte_end":658,"line_start":32,"line_end":32,"column_start":55,"column_end":78},"alias_span":null,"name":"ConversionOverflowError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3318},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":660,"byte_end":677,"line_start":32,"line_end":32,"column_start":80,"column_end":97},"alias_span":null,"name":"DivideByZeroError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3272},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":683,"byte_end":696,"line_start":33,"line_end":33,"column_start":5,"column_end":18},"alias_span":null,"name":"OverflowError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3231},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":698,"byte_end":715,"line_start":33,"line_end":33,"column_start":20,"column_end":37},"alias_span":null,"name":"OverflowOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3164},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":717,"byte_end":735,"line_start":33,"line_end":33,"column_start":39,"column_end":57},"alias_span":null,"name":"RecoverPubkeyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3185},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":737,"byte_end":745,"line_start":33,"line_end":33,"column_start":59,"column_end":67},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":747,"byte_end":756,"line_start":33,"line_end":33,"column_start":69,"column_end":78},"alias_span":null,"name":"StdResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3587},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":758,"byte_end":769,"line_start":33,"line_end":33,"column_start":80,"column_end":91},"alias_span":null,"name":"SystemError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3599},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":775,"byte_end":792,"line_start":34,"line_end":34,"column_start":5,"column_end":22},"alias_span":null,"name":"VerificationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3626},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1232,"byte_end":1237,"line_start":44,"line_end":44,"column_start":27,"column_end":32},"alias_span":null,"name":"Order","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":395},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1239,"byte_end":1245,"line_start":44,"line_end":44,"column_start":34,"column_end":40},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3636},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1275,"byte_end":1282,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3719},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1284,"byte_end":1294,"line_start":46,"line_end":46,"column_start":14,"column_end":24},"alias_span":null,"name":"Decimal256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3752},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1296,"byte_end":1319,"line_start":46,"line_end":46,"column_start":26,"column_end":49},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3753},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1296,"byte_end":1319,"line_start":46,"line_end":46,"column_start":26,"column_end":49},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1321,"byte_end":1341,"line_start":46,"line_end":46,"column_start":51,"column_end":71},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3670},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1321,"byte_end":1341,"line_start":46,"line_end":46,"column_start":51,"column_end":71},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1343,"byte_end":1351,"line_start":46,"line_end":46,"column_start":73,"column_end":81},"alias_span":null,"name":"Fraction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":811},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1353,"byte_end":1358,"line_start":46,"line_end":46,"column_start":83,"column_end":88},"alias_span":null,"name":"Isqrt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3802},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1360,"byte_end":1367,"line_start":46,"line_end":46,"column_start":90,"column_end":97},"alias_span":null,"name":"Uint128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4412},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1373,"byte_end":1380,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"Uint256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5022},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1382,"byte_end":1389,"line_start":47,"line_end":47,"column_start":14,"column_end":21},"alias_span":null,"name":"Uint512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5083},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1391,"byte_end":1397,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"alias_span":null,"name":"Uint64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5397},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1430,"byte_end":1448,"line_start":50,"line_end":50,"column_start":5,"column_end":23},"alias_span":null,"name":"AllBalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5336},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1450,"byte_end":1465,"line_start":50,"line_end":50,"column_start":25,"column_end":40},"alias_span":null,"name":"BalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5271},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1467,"byte_end":1476,"line_start":50,"line_end":50,"column_start":42,"column_end":51},"alias_span":null,"name":"BankQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5573},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1478,"byte_end":1498,"line_start":50,"line_end":50,"column_start":53,"column_end":73},"alias_span":null,"name":"ContractInfoResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1884},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1500,"byte_end":1511,"line_start":50,"line_end":50,"column_start":75,"column_end":86},"alias_span":null,"name":"CustomQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5714},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1517,"byte_end":1529,"line_start":51,"line_end":51,"column_start":5,"column_end":17},"alias_span":null,"name":"QueryRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5564},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1531,"byte_end":1540,"line_start":51,"line_end":51,"column_start":19,"column_end":28},"alias_span":null,"name":"WasmQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2138},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1931,"byte_end":1954,"line_start":61,"line_end":61,"column_start":25,"column_end":48},"alias_span":null,"name":"SubMsgExecutionResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2027},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1986,"byte_end":1990,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"alias_span":null,"name":"attr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1959},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":1992,"byte_end":2004,"line_start":63,"line_end":63,"column_start":11,"column_end":23},"alias_span":null,"name":"wasm_execute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1957},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2006,"byte_end":2022,"line_start":63,"line_end":63,"column_start":25,"column_end":41},"alias_span":null,"name":"wasm_instantiate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6405},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2024,"byte_end":2033,"line_start":63,"line_end":63,"column_start":43,"column_end":52},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6005},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2035,"byte_end":2042,"line_start":63,"line_end":63,"column_start":54,"column_end":61},"alias_span":null,"name":"BankMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5791},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2044,"byte_end":2058,"line_start":63,"line_end":63,"column_start":63,"column_end":77},"alias_span":null,"name":"ContractResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5867},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2060,"byte_end":2069,"line_start":63,"line_end":63,"column_start":79,"column_end":88},"alias_span":null,"name":"CosmosMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1955},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2071,"byte_end":2080,"line_start":63,"line_end":63,"column_start":90,"column_end":99},"alias_span":null,"name":"CustomMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6282},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2086,"byte_end":2091,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6341},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2093,"byte_end":2098,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2034},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2100,"byte_end":2113,"line_start":64,"line_end":64,"column_start":19,"column_end":32},"alias_span":null,"name":"QueryResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6700},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2115,"byte_end":2120,"line_start":64,"line_end":64,"column_start":34,"column_end":39},"alias_span":null,"name":"Reply","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6611},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2122,"byte_end":2129,"line_start":64,"line_end":64,"column_start":41,"column_end":48},"alias_span":null,"name":"ReplyOn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6471},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2131,"byte_end":2139,"line_start":64,"line_end":64,"column_start":50,"column_end":58},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6620},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2141,"byte_end":2147,"line_start":64,"line_end":64,"column_start":60,"column_end":66},"alias_span":null,"name":"SubMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6828},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2149,"byte_end":2163,"line_start":64,"line_end":64,"column_start":68,"column_end":82},"alias_span":null,"name":"SubMsgResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6821},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2165,"byte_end":2177,"line_start":64,"line_end":64,"column_start":84,"column_end":96},"alias_span":null,"name":"SubMsgResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6958},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2183,"byte_end":2195,"line_start":65,"line_end":65,"column_start":5,"column_end":17},"alias_span":null,"name":"SystemResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6262},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2197,"byte_end":2204,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"WasmMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2264},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2390,"byte_end":2401,"line_start":71,"line_end":71,"column_start":24,"column_end":35},"alias_span":null,"name":"from_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2261},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2403,"byte_end":2413,"line_start":71,"line_end":71,"column_start":37,"column_end":47},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2269},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2415,"byte_end":2424,"line_start":71,"line_end":71,"column_start":49,"column_end":58},"alias_span":null,"name":"to_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2266},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2426,"byte_end":2432,"line_start":71,"line_end":71,"column_start":60,"column_end":66},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6966},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2459,"byte_end":2472,"line_start":72,"line_end":72,"column_start":25,"column_end":38},"alias_span":null,"name":"MemoryStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6970},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2500,"byte_end":2509,"line_start":73,"line_end":73,"column_start":27,"column_end":36},"alias_span":null,"name":"Timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2436},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2535,"byte_end":2538,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"alias_span":null,"name":"Api","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2446},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2540,"byte_end":2547,"line_start":74,"line_end":74,"column_start":30,"column_end":37},"alias_span":null,"name":"Querier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2445},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2549,"byte_end":2562,"line_start":74,"line_end":74,"column_start":39,"column_end":52},"alias_span":null,"name":"QuerierResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7020},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2564,"byte_end":2578,"line_start":74,"line_end":74,"column_start":54,"column_end":68},"alias_span":null,"name":"QuerierWrapper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2430},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2580,"byte_end":2587,"line_start":74,"line_end":74,"column_start":70,"column_end":77},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7149},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2613,"byte_end":2622,"line_start":75,"line_end":75,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7276},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2624,"byte_end":2636,"line_start":75,"line_end":75,"column_start":35,"column_end":47},"alias_span":null,"name":"ContractInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7029},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2638,"byte_end":2641,"line_start":75,"line_end":75,"column_start":49,"column_end":52},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7216},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2643,"byte_end":2654,"line_start":75,"line_end":75,"column_start":54,"column_end":65},"alias_span":null,"name":"MessageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7092},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":2656,"byte_end":2671,"line_start":75,"line_end":75,"column_start":67,"column_end":82},"alias_span":null,"name":"TransactionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2915},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3778,"byte_end":3787,"line_start":106,"line_end":106,"column_start":9,"column_end":18},"alias_span":null,"name":"digit_sum","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2849},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3789,"byte_end":3806,"line_start":106,"line_end":106,"column_start":20,"column_end":37},"alias_span":null,"name":"mock_dependencies","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2850},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3808,"byte_end":3838,"line_start":106,"line_end":106,"column_start":39,"column_end":69},"alias_span":null,"name":"mock_dependencies_with_balance","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2851},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3848,"byte_end":3879,"line_start":107,"line_end":107,"column_start":9,"column_end":40},"alias_span":null,"name":"mock_dependencies_with_balances","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2868},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3881,"byte_end":3889,"line_start":107,"line_end":107,"column_start":42,"column_end":50},"alias_span":null,"name":"mock_env","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2869},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3891,"byte_end":3900,"line_start":107,"line_end":107,"column_start":52,"column_end":61},"alias_span":null,"name":"mock_info","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2917},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3902,"byte_end":3917,"line_start":107,"line_end":107,"column_start":63,"column_end":78},"alias_span":null,"name":"mock_wasmd_attr","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2913},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3919,"byte_end":3933,"line_start":107,"line_end":107,"column_start":80,"column_end":94},"alias_span":null,"name":"riffle_shuffle","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":7338},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3943,"byte_end":3954,"line_start":108,"line_end":108,"column_start":9,"column_end":20},"alias_span":null,"name":"BankQuerier","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":7333},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3956,"byte_end":3963,"line_start":108,"line_end":108,"column_start":22,"column_end":29},"alias_span":null,"name":"MockApi","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2871},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3965,"byte_end":3976,"line_start":108,"line_end":108,"column_start":31,"column_end":42},"alias_span":null,"name":"MockQuerier","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2870},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3978,"byte_end":4008,"line_start":108,"line_end":108,"column_start":44,"column_end":74},"alias_span":null,"name":"MockQuerierCustomHandlerResult","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2852},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":4010,"byte_end":4021,"line_start":108,"line_end":108,"column_start":76,"column_end":87},"alias_span":null,"name":"MockStorage","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":0,"index":2848},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":4031,"byte_end":4049,"line_start":109,"line_end":109,"column_start":9,"column_end":27},"alias_span":null,"name":"MOCK_CONTRACT_ADDR","value":"","parent":{"krate":0,"index":2920}},{"kind":"Use","ref_id":{"krate":68,"index":10},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":4466,"byte_end":4477,"line_start":122,"line_end":122,"column_start":26,"column_end":37},"alias_span":null,"name":"entry_point","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":0,"byte_end":4478,"line_start":1,"line_end":122,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":158},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":242},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":402},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1895},{"krate":0,"index":2232},{"krate":0,"index":2240},{"krate":0,"index":2271},{"krate":0,"index":2315},{"krate":0,"index":2344},{"krate":0,"index":2476},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2536},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2554},{"krate":0,"index":2557},{"krate":0,"index":2560},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2583},{"krate":0,"index":2586},{"krate":0,"index":2589},{"krate":0,"index":2592},{"krate":0,"index":2595},{"krate":0,"index":2598},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2675},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2716},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2723},{"krate":0,"index":2726},{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2735},{"krate":0,"index":2920},{"krate":0,"index":2964}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2967},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5656,"byte_end":5660,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Addr","qualname":"::addresses::Addr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A human readable address.","sig":null,"attributes":[{"value":"/ A human readable address.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":4629,"byte_end":4658,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":4659,"byte_end":4662,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":4663,"byte_end":4750,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/ assumptions should be made other than being UTF-8 encoded and of reasonable length.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":4751,"byte_end":4838,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":4839,"byte_end":4842,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type represents a validated address. It can be created in the following ways","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":4843,"byte_end":4928,"line_start":14,"line_end":14,"column_start":1,"column_end":86}},{"value":"/ 1. Use `Addr::unchecked(input)`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":4929,"byte_end":4964,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/ 2. Use `let checked: Addr = deps.api.addr_validate(input)?`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":4965,"byte_end":5028,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5029,"byte_end":5101,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ 4. Deserialize from JSON. This must only be done from JSON that was validated before","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5102,"byte_end":5190,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"/    such as a contract's state. `Addr` must not be used in messages sent by the user","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5191,"byte_end":5278,"line_start":19,"line_end":19,"column_start":1,"column_end":88}},{"value":"/    because this would result in unvalidated instances.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5279,"byte_end":5337,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5338,"byte_end":5341,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type is immutable. If you really need to mutate it (Really? Are you sure?), create","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5342,"byte_end":5433,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5434,"byte_end":5525,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ instance.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5526,"byte_end":5539,"line_start":24,"line_end":24,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6348,"byte_end":6357,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"unchecked","qualname":"<Addr>::unchecked","value":"pub fn unchecked<impl Into<String>: Into<String>>(impl Into<String>) -> Addr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Addr` instance from the given input without checking the validity\n of the input. Since `Addr` must always contain valid addresses, the caller is\n responsible for ensuring the input is valid.","sig":null,"attributes":[{"value":"/ Creates a new `Addr` instance from the given input without checking the validity","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5687,"byte_end":5771,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ of the input. Since `Addr` must always contain valid addresses, the caller is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5776,"byte_end":5857,"line_start":32,"line_end":32,"column_start":5,"column_end":86}},{"value":"/ responsible for ensuring the input is valid.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5862,"byte_end":5910,"line_start":33,"line_end":33,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5915,"byte_end":5918,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Use this in cases where the address was validated before or in test code.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5923,"byte_end":6000,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ If you see this in contract code, it should most likely be replaced with","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6005,"byte_end":6081,"line_start":36,"line_end":36,"column_start":5,"column_end":81}},{"value":"/ `let checked: Addr = deps.api.addr_humanize(canonical_addr)?`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6086,"byte_end":6152,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6157,"byte_end":6160,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6165,"byte_end":6180,"line_start":39,"line_end":39,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6185,"byte_end":6188,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6193,"byte_end":6200,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6205,"byte_end":6236,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/ let address = Addr::unchecked(\"foobar\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6241,"byte_end":6285,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(address, \"foobar\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6290,"byte_end":6324,"line_start":44,"line_end":44,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6329,"byte_end":6336,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6453,"byte_end":6459,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Addr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6432,"byte_end":6441,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6668,"byte_end":6676,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Addr>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the UTF-8 encoded address string as a byte array.","sig":null,"attributes":[{"value":"/ Returns the UTF-8 encoded address string as a byte array.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6512,"byte_end":6573,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6578,"byte_end":6581,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `address.as_str().as_bytes()`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6586,"byte_end":6642,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6647,"byte_end":6656,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6806,"byte_end":6817,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Addr>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Utility for explicit conversion to `String`.\n","sig":null,"attributes":[{"value":"/ Utility for explicit conversion to `String`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6732,"byte_end":6780,"line_start":63,"line_end":63,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6785,"byte_end":6794,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3017},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8243,"byte_end":8256,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"CanonicalAddr","qualname":"::addresses::CanonicalAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3019},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8257,"byte_end":8267,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"name":"0","qualname":"::addresses::CanonicalAddr::0","value":"binary::Binary","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":9179,"byte_end":9187,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<CanonicalAddr>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3063},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23505,"byte_end":23511,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Binary","qualname":"::binary::Binary","value":"","parent":null,"children":[],"decl_id":null,"docs":" Binary is a wrapper around Vec<u8> to add base64 de/serialization\n with serde. It also adds some helper methods to help encode inline.","sig":null,"attributes":[{"value":"/ Binary is a wrapper around Vec<u8> to add base64 de/serialization","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23186,"byte_end":23255,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ with serde. It also adds some helper methods to help encode inline.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23256,"byte_end":23327,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23328,"byte_end":23331,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23332,"byte_end":23417,"line_start":12,"line_end":12,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":3087},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23541,"byte_end":23552,"line_start":14,"line_end":14,"column_start":48,"column_end":59},"name":"0","qualname":"::binary::Binary::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"schemars(with = \"String\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23512,"byte_end":23540,"line_start":14,"line_end":14,"column_start":19,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23682,"byte_end":23693,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"from_base64","qualname":"<Binary>::from_base64","value":"pub fn from_base64(&str) -> StdResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" take an (untrusted) string and decode it into bytes.\n fails if it is not valid base64\n","sig":null,"attributes":[{"value":"/ take an (untrusted) string and decode it into bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23574,"byte_end":23630,"line_start":17,"line_end":17,"column_start":5,"column_end":61}},{"value":"/ fails if it is not valid base64","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23635,"byte_end":23670,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24012,"byte_end":24021,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"to_base64","qualname":"<Binary>::to_base64","value":"pub fn to_base64(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" encode to base64 string (guaranteed to be success as we control the data inside).\n this returns normalized form (with trailing = if needed)\n","sig":null,"attributes":[{"value":"/ encode to base64 string (guaranteed to be success as we control the data inside).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23850,"byte_end":23935,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ this returns normalized form (with trailing = if needed)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23940,"byte_end":24000,"line_start":25,"line_end":25,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24091,"byte_end":24099,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Binary>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":25143,"byte_end":25151,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Binary>::to_array","value":"pub fn to_array<const LENGTH: usize>(&Self) -> StdResult<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" Copies content into fixed-sized array.\n The result type `A: ByteArray` is a workaround for\n the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).\n `A` is a fixed-sized array like `[u8; 8]`.","sig":null,"attributes":[{"value":"/ Copies content into fixed-sized array.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24155,"byte_end":24197,"line_start":34,"line_end":34,"column_start":5,"column_end":47}},{"value":"/ The result type `A: ByteArray` is a workaround for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24202,"byte_end":24256,"line_start":35,"line_end":35,"column_start":5,"column_end":59}},{"value":"/ the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24261,"byte_end":24353,"line_start":36,"line_end":36,"column_start":5,"column_end":97}},{"value":"/ `A` is a fixed-sized array like `[u8; 8]`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24358,"byte_end":24404,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24409,"byte_end":24412,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ByteArray is implemented for `[u8; 0]` to `[u8; 64]`, such that","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24417,"byte_end":24484,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ we are limited to 64 bytes for now.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24489,"byte_end":24528,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24533,"byte_end":24536,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24541,"byte_end":24555,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24560,"byte_end":24563,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Copy to array of explicit length","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24568,"byte_end":24604,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24609,"byte_end":24612,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24617,"byte_end":24624,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24629,"byte_end":24660,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24665,"byte_end":24716,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/ let array: [u8; 3] = binary.to_array().unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24721,"byte_end":24773,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(array, [0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24778,"byte_end":24820,"line_start":50,"line_end":50,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24825,"byte_end":24832,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24837,"byte_end":24840,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Copy to integer","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24845,"byte_end":24864,"line_start":53,"line_end":53,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24869,"byte_end":24872,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24877,"byte_end":24884,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24889,"byte_end":24920,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0x8b, 0x67, 0x64, 0x84, 0xb5, 0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":24925,"byte_end":25006,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"/ let num = u64::from_be_bytes(binary.to_array().unwrap());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":25011,"byte_end":25072,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num, 10045108015024774967);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":25077,"byte_end":25119,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":25124,"byte_end":25131,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3088},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":39866,"byte_end":39870,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Coin","qualname":"::coins::Coin","value":"Coin { denom, amount }","parent":null,"children":[{"krate":0,"index":3089},{"krate":0,"index":3090}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3089},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":39881,"byte_end":39886,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"denom","qualname":"::coins::Coin::denom","value":"std::string::String","parent":{"krate":0,"index":3088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3090},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":39904,"byte_end":39910,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"amount","qualname":"::coins::Coin::amount","value":"math::uint128::Uint128","parent":{"krate":0,"index":3088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":39947,"byte_end":39950,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Coin>::new","value":"pub fn new<impl Into<String>: Into<String>>(u128, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41121,"byte_end":41126,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"coins","qualname":"::coins::coins","value":"pub fn coins<impl Into<String>: Into<String>>(u128, impl Into<String>)\n-> Vec<Coin>","parent":null,"children":[],"decl_id":null,"docs":" A shortcut constructor for a set of one denomination of coins","sig":null,"attributes":[{"value":"/ A shortcut constructor for a set of one denomination of coins","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40596,"byte_end":40661,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40662,"byte_end":40665,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40666,"byte_end":40680,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40681,"byte_end":40684,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40685,"byte_end":40692,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, CosmosMsg, Response, SubMsg};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40693,"byte_end":40763,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40764,"byte_end":40819,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40820,"byte_end":40847,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40848,"byte_end":40890,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/ let tip = coins(123, \"ucosm\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40891,"byte_end":40925,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40926,"byte_end":40929,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut response: Response = Default::default();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40930,"byte_end":40982,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ response.messages = vec![SubMsg::new(BankMsg::Send {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40983,"byte_end":41039,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/   to_address: info.sender.into(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41040,"byte_end":41077,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/   amount: tip,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41078,"byte_end":41096,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ })];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41097,"byte_end":41105,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41106,"byte_end":41113,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41762,"byte_end":41766,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"coin","qualname":"::coins::coin","value":"pub fn coin<impl Into<String>: Into<String>>(u128, impl Into<String>) -> Coin","parent":null,"children":[],"decl_id":null,"docs":" A shorthand constructor for Coin","sig":null,"attributes":[{"value":"/ A shorthand constructor for Coin","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41215,"byte_end":41251,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41252,"byte_end":41255,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41256,"byte_end":41270,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41271,"byte_end":41274,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41275,"byte_end":41282,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coin, BankMsg, CosmosMsg, Response, SubMsg};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41283,"byte_end":41352,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41353,"byte_end":41408,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41409,"byte_end":41436,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41437,"byte_end":41479,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ let tip = vec![","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41480,"byte_end":41499,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/     coin(123, \"ucosm\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41500,"byte_end":41527,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     coin(24, \"ustake\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41528,"byte_end":41555,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ ];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41556,"byte_end":41562,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41563,"byte_end":41566,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let mut response: Response = Default::default();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41567,"byte_end":41619,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/ response.messages = vec![SubMsg::new(BankMsg::Send {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41620,"byte_end":41676,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"/     to_address: info.sender.into(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41677,"byte_end":41716,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/     amount: tip,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41717,"byte_end":41737,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/ })];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41738,"byte_end":41746,"line_start":71,"line_end":71,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41747,"byte_end":41754,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41937,"byte_end":41946,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"has_coins","qualname":"::coins::has_coins","value":"pub fn has_coins(&[Coin], &Coin) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has_coins returns true if the list of coins has at least the required amount\n","sig":null,"attributes":[{"value":"/ has_coins returns true if the list of coins has at least the required amount","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":41849,"byte_end":41929,"line_start":77,"line_end":77,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":212},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":44978,"byte_end":44987,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"OwnedDeps","qualname":"::deps::OwnedDeps","value":"OwnedDeps { storage, api, querier, custom_query_type }","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"decl_id":null,"docs":" Holds all external dependencies of the contract.\n Designed to allow easy dependency injection at runtime.\n This cannot be copied or cloned since it would behave differently\n for mock storages and a bridge storage in the VM.\n","sig":null,"attributes":[{"value":"/ Holds all external dependencies of the contract.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":44730,"byte_end":44782,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/ Designed to allow easy dependency injection at runtime.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":44783,"byte_end":44842,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ This cannot be copied or cloned since it would behave differently","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":44843,"byte_end":44912,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ for mock storages and a bridge storage in the VM.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":44913,"byte_end":44966,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":217},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45054,"byte_end":45061,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::OwnedDeps::storage","value":"S","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":218},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45074,"byte_end":45077,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::OwnedDeps::api","value":"A","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":219},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45090,"byte_end":45097,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::OwnedDeps::querier","value":"Q","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":220},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45110,"byte_end":45127,"line_start":16,"line_end":16,"column_start":9,"column_end":26},"name":"custom_query_type","qualname":"::deps::OwnedDeps::custom_query_type","value":"std::marker::PhantomData<C>","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":221},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45159,"byte_end":45166,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"DepsMut","qualname":"::deps::DepsMut","value":"DepsMut { storage, api, querier }","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":224},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45205,"byte_end":45212,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::DepsMut::storage","value":"&'a mut (dyn traits::Storage + 'a)","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":225},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45243,"byte_end":45246,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::DepsMut::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":226},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45269,"byte_end":45276,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::DepsMut::querier","value":"traits::QuerierWrapper<'a, C>","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3154},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45332,"byte_end":45336,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Deps","qualname":"::deps::Deps","value":"Deps { storage, api, querier }","parent":null,"children":[{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3157},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45375,"byte_end":45382,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::Deps::storage","value":"&'a (dyn traits::Storage + 'a)","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3158},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45409,"byte_end":45412,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::Deps::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3159},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45435,"byte_end":45442,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::Deps::querier","value":"traits::QuerierWrapper<'a, C>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45903,"byte_end":45909,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<OwnedDeps<S, A, Q, C>>::as_ref","value":"pub fn as_ref(&Self) -> Deps<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":46101,"byte_end":46107,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<OwnedDeps<S, A, Q, C>>::as_mut","value":"pub fn as_mut(&mut Self) -> DepsMut<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":46357,"byte_end":46363,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<DepsMut>::as_ref","value":"pub fn as_ref(&Self) -> Deps<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":46531,"byte_end":46537,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"branch","qualname":"<DepsMut>::branch","value":"pub fn branch(&mut Self) -> DepsMut<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3177},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":48971,"byte_end":48988,"line_start":11,"line_end":11,"column_start":5,"column_end":22},"name":"InvalidHashFormat","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidHashFormat","value":"RecoverPubkeyError::InvalidHashFormat","parent":{"krate":0,"index":3164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid hash format\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":48935,"byte_end":48966,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3179},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49035,"byte_end":49057,"line_start":13,"line_end":13,"column_start":5,"column_end":27},"name":"InvalidSignatureFormat","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidSignatureFormat","value":"RecoverPubkeyError::InvalidSignatureFormat","parent":{"krate":0,"index":3164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid signature format\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":48994,"byte_end":49030,"line_start":12,"line_end":12,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3181},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49134,"byte_end":49154,"line_start":15,"line_end":15,"column_start":5,"column_end":25},"name":"InvalidRecoveryParam","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidRecoveryParam","value":"RecoverPubkeyError::InvalidRecoveryParam","parent":{"krate":0,"index":3164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid recovery parameter. Supported values: 0 and 1.\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49063,"byte_end":49129,"line_start":14,"line_end":14,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3183},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49204,"byte_end":49214,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"UnknownErr","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::UnknownErr","value":"RecoverPubkeyError::UnknownErr { error_code }","parent":{"krate":0,"index":3164},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unknown error: {error_code}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49160,"byte_end":49199,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3164},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":48910,"byte_end":48928,"line_start":9,"line_end":9,"column_start":10,"column_end":28},"name":"RecoverPubkeyError","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError","value":"pub enum RecoverPubkeyError {\n    InvalidHashFormat,\n    InvalidSignatureFormat,\n    InvalidRecoveryParam,\n    UnknownErr {\n            error_code: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":3177},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49358,"byte_end":49369,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"unknown_err","qualname":"<RecoverPubkeyError>::unknown_err","value":"pub fn unknown_err(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3204},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52284,"byte_end":52299,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"name":"VerificationErr","qualname":"::errors::std_error::StdError::VerificationErr","value":"StdError::VerificationErr { source }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Verification error: {source}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52239,"byte_end":52279,"line_start":25,"line_end":25,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3206},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52464,"byte_end":52480,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"name":"RecoverPubkeyErr","qualname":"::errors::std_error::StdError::RecoverPubkeyErr","value":"StdError::RecoverPubkeyErr { source }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Recover pubkey error: {source}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52417,"byte_end":52459,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":3208},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52695,"byte_end":52705,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::std_error::StdError::GenericErr","value":"StdError::GenericErr { msg }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" Whenever there is no specific error type available\n","sig":null,"attributes":[{"value":"/ Whenever there is no specific error type available","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52599,"byte_end":52653,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"error(\"Generic error: {msg}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52658,"byte_end":52690,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":3210},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52854,"byte_end":52867,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"InvalidBase64","qualname":"::errors::std_error::StdError::InvalidBase64","value":"StdError::InvalidBase64 { msg }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid Base64 string: {msg}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52809,"byte_end":52849,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3212},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53042,"byte_end":53057,"line_start":51,"line_end":51,"column_start":5,"column_end":20},"name":"InvalidDataSize","qualname":"::errors::std_error::StdError::InvalidDataSize","value":"StdError::InvalidDataSize { expected, actual }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid data size: expected={expected} actual={actual}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52971,"byte_end":53037,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3215},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53359,"byte_end":53370,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::errors::std_error::StdError::InvalidUtf8","value":"StdError::InvalidUtf8 { msg }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.\n","sig":null,"attributes":[{"value":"/ Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53184,"byte_end":53294,"line_start":57,"line_end":57,"column_start":5,"column_end":115}},{"value":"error(\"Cannot decode UTF8 bytes into string: {msg}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53299,"byte_end":53354,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3217},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53507,"byte_end":53515,"line_start":65,"line_end":65,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::errors::std_error::StdError::NotFound","value":"StdError::NotFound { kind }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{kind} not found\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53474,"byte_end":53502,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":3219},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53681,"byte_end":53689,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"ParseErr","qualname":"::errors::std_error::StdError::ParseErr","value":"StdError::ParseErr { target_type, msg }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error parsing into type {target_type}: {msg}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53620,"byte_end":53676,"line_start":70,"line_end":70,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":3222},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53929,"byte_end":53941,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"SerializeErr","qualname":"::errors::std_error::StdError::SerializeErr","value":"StdError::SerializeErr { source_type, msg }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error serializing type {source_type}: {msg}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":53869,"byte_end":53924,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3225},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54156,"byte_end":54164,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::errors::std_error::StdError::Overflow","value":"StdError::Overflow { source }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Overflow: {source}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54121,"byte_end":54151,"line_start":86,"line_end":86,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":3227},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54319,"byte_end":54331,"line_start":93,"line_end":93,"column_start":5,"column_end":17},"name":"DivideByZero","qualname":"::errors::std_error::StdError::DivideByZero","value":"StdError::DivideByZero { source }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Divide by zero: {source}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54278,"byte_end":54314,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":3229},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54484,"byte_end":54502,"line_start":99,"line_end":99,"column_start":5,"column_end":23},"name":"ConversionOverflow","qualname":"::errors::std_error::StdError::ConversionOverflow","value":"StdError::ConversionOverflow { source }","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Conversion error: \")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54449,"byte_end":54479,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3185},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52224,"byte_end":52232,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"StdError","qualname":"::errors::std_error::StdError","value":"pub enum StdError {\n    VerificationErr {\n            source: VerificationError,\n        },\n    RecoverPubkeyErr {\n            source: RecoverPubkeyError,\n        },\n    GenericErr {\n            msg: String,\n        },\n    InvalidBase64 {\n            msg: String,\n        },\n    InvalidDataSize {\n            expected: u64,\n            actual: u64,\n        },\n    InvalidUtf8 {\n            msg: String,\n        },\n    NotFound {\n            kind: String,\n        },\n    ParseErr {\n            target_type: String,\n            msg: String,\n        },\n    SerializeErr {\n            source_type: String,\n            msg: String,\n        },\n    Overflow {\n            source: OverflowError,\n        },\n    DivideByZero {\n            source: DivideByZeroError,\n        },\n    ConversionOverflow {\n            source: ConversionOverflowError,\n        },\n}","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3206},{"krate":0,"index":3208},{"krate":0,"index":3210},{"krate":0,"index":3212},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3222},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3229}],"decl_id":null,"docs":" Structured error type for init, execute and query.","sig":null,"attributes":[{"value":"/ Structured error type for init, execute and query.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51443,"byte_end":51497,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51498,"byte_end":51501,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This can be serialized and passed over the Wasm/VM boundary, which allows us to use structured","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51502,"byte_end":51600,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ error types in e.g. integration tests. In that process backtraces are stripped off.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51601,"byte_end":51688,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51689,"byte_end":51692,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard error within the standard library\". This is not the only","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51693,"byte_end":51790,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51791,"byte_end":51829,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51830,"byte_end":51833,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When new cases are added, they should describe the problem rather than what was attempted (e.g.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51834,"byte_end":51933,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ InvalidBase64 is preferred over Base64DecodingErr). In the long run this allows us to get rid of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":51934,"byte_end":52034,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ the duplication in \"StdError::FooErr\".","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52035,"byte_end":52077,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52078,"byte_end":52081,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Checklist for adding a new error:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52082,"byte_end":52119,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ - Add enum case","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52120,"byte_end":52139,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/ - Add creator function in std_error_helpers.rs","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":52140,"byte_end":52190,"line_start":22,"line_end":22,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54668,"byte_end":54684,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"verification_err","qualname":"<StdError>::verification_err","value":"pub fn verification_err(VerificationError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54894,"byte_end":54912,"line_start":116,"line_end":116,"column_start":12,"column_end":30},"name":"recover_pubkey_err","qualname":"<StdError>::recover_pubkey_err","value":"pub fn recover_pubkey_err(RecoverPubkeyError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":55124,"byte_end":55135,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"generic_err","qualname":"<StdError>::generic_err","value":"pub fn generic_err<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":55346,"byte_end":55360,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"invalid_base64","qualname":"<StdError>::invalid_base64","value":"pub fn invalid_base64<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":55575,"byte_end":55592,"line_start":140,"line_end":140,"column_start":12,"column_end":29},"name":"invalid_data_size","qualname":"<StdError>::invalid_data_size","value":"pub fn invalid_data_size(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":55956,"byte_end":55968,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"invalid_utf8","qualname":"<StdError>::invalid_utf8","value":"pub fn invalid_utf8<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":56181,"byte_end":56190,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"not_found","qualname":"<StdError>::not_found","value":"pub fn not_found<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":56402,"byte_end":56411,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"parse_err","qualname":"<StdError>::parse_err","value":"pub fn parse_err<impl Into<String>: Into<String>,\nimpl ToString: ToString>(impl Into<String>, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":56688,"byte_end":56701,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"serialize_err","qualname":"<StdError>::serialize_err","value":"pub fn serialize_err<impl Into<String>: Into<String>,\nimpl ToString: ToString>(impl Into<String>, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":56982,"byte_end":56990,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"overflow","qualname":"<StdError>::overflow","value":"pub fn overflow(OverflowError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":57189,"byte_end":57203,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"divide_by_zero","qualname":"<StdError>::divide_by_zero","value":"pub fn divide_by_zero(DivideByZeroError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":307},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64979,"byte_end":64988,"line_start":447,"line_end":447,"column_start":10,"column_end":19},"name":"StdResult","qualname":"::errors::std_error::StdResult","value":"core::result::Result<T, StdError>","parent":null,"children":[],"decl_id":null,"docs":" The return type for init, execute and query. Since the error type cannot be serialized to JSON,\n this is only available within the contract and its unit tests.","sig":null,"attributes":[{"value":"/ The return type for init, execute and query. Since the error type cannot be serialized to JSON,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64661,"byte_end":64760,"line_start":442,"line_end":442,"column_start":1,"column_end":100}},{"value":"/ this is only available within the contract and its unit tests.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64761,"byte_end":64827,"line_start":443,"line_end":443,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64828,"byte_end":64831,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard result within the standard library\". This is not the only","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64832,"byte_end":64930,"line_start":445,"line_end":445,"column_start":1,"column_end":99}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64931,"byte_end":64969,"line_start":446,"line_end":446,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3232},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65102,"byte_end":65105,"line_start":451,"line_end":451,"column_start":5,"column_end":8},"name":"Add","qualname":"::errors::std_error::OverflowOperation::Add","value":"OverflowOperation::Add","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3234},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65111,"byte_end":65114,"line_start":452,"line_end":452,"column_start":5,"column_end":8},"name":"Sub","qualname":"::errors::std_error::OverflowOperation::Sub","value":"OverflowOperation::Sub","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65120,"byte_end":65123,"line_start":453,"line_end":453,"column_start":5,"column_end":8},"name":"Mul","qualname":"::errors::std_error::OverflowOperation::Mul","value":"OverflowOperation::Mul","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3238},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65129,"byte_end":65132,"line_start":454,"line_end":454,"column_start":5,"column_end":8},"name":"Pow","qualname":"::errors::std_error::OverflowOperation::Pow","value":"OverflowOperation::Pow","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3240},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65138,"byte_end":65141,"line_start":455,"line_end":455,"column_start":5,"column_end":8},"name":"Shr","qualname":"::errors::std_error::OverflowOperation::Shr","value":"OverflowOperation::Shr","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3242},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65147,"byte_end":65150,"line_start":456,"line_end":456,"column_start":5,"column_end":8},"name":"Shl","qualname":"::errors::std_error::OverflowOperation::Shl","value":"OverflowOperation::Shl","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3231},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65078,"byte_end":65095,"line_start":450,"line_end":450,"column_start":10,"column_end":27},"name":"OverflowOperation","qualname":"::errors::std_error::OverflowOperation","value":"pub enum OverflowOperation { Add, Sub, Mul, Pow, Shr, Shl, }","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3234},{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3240},{"krate":0,"index":3242}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3272},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65409,"byte_end":65422,"line_start":467,"line_end":467,"column_start":12,"column_end":25},"name":"OverflowError","qualname":"::errors::std_error::OverflowError","value":"OverflowError { operation, operand1, operand2 }","parent":null,"children":[{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot {operation} with {operand1} and {operand2}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65336,"byte_end":65397,"line_start":466,"line_end":466,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3273},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65433,"byte_end":65442,"line_start":468,"line_end":468,"column_start":9,"column_end":18},"name":"operation","qualname":"::errors::std_error::OverflowError::operation","value":"errors::std_error::OverflowOperation","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3274},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65471,"byte_end":65479,"line_start":469,"line_end":469,"column_start":9,"column_end":17},"name":"operand1","qualname":"::errors::std_error::OverflowError::operand1","value":"std::string::String","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3275},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65497,"byte_end":65505,"line_start":470,"line_end":470,"column_start":9,"column_end":17},"name":"operand2","qualname":"::errors::std_error::OverflowError::operand2","value":"std::string::String","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65550,"byte_end":65553,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<OverflowError>::new","value":"pub fn new<impl ToString: ToString,\nimpl ToString: ToString>(OverflowOperation, impl ToString, impl ToString)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3295},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66179,"byte_end":66202,"line_start":495,"line_end":495,"column_start":12,"column_end":35},"name":"ConversionOverflowError","qualname":"::errors::std_error::ConversionOverflowError","value":"ConversionOverflowError { source_type, target_type, value }","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298}],"decl_id":null,"docs":" The error returned by [`TryFrom`] conversions that overflow, for example\n when converting from [`Uint256`] to [`Uint128`].","sig":null,"attributes":[{"value":"/ The error returned by [`TryFrom`] conversions that overflow, for example","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65820,"byte_end":65896,"line_start":487,"line_end":487,"column_start":1,"column_end":77}},{"value":"/ when converting from [`Uint256`] to [`Uint128`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65897,"byte_end":65949,"line_start":488,"line_end":488,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65950,"byte_end":65953,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ [`TryFrom`]: std::convert::TryFrom","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65954,"byte_end":65992,"line_start":490,"line_end":490,"column_start":1,"column_end":39}},{"value":"/ [`Uint256`]: crate::Uint256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65993,"byte_end":66024,"line_start":491,"line_end":491,"column_start":1,"column_end":32}},{"value":"/ [`Uint128`]: crate::Uint128","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66025,"byte_end":66056,"line_start":492,"line_end":492,"column_start":1,"column_end":32}},{"value":"error(\"Error converting {source_type} to {target_type} for {value}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66096,"byte_end":66167,"line_start":494,"line_end":494,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3296},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66213,"byte_end":66224,"line_start":496,"line_end":496,"column_start":9,"column_end":20},"name":"source_type","qualname":"::errors::std_error::ConversionOverflowError::source_type","value":"&'static str","parent":{"krate":0,"index":3295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3297},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66248,"byte_end":66259,"line_start":497,"line_end":497,"column_start":9,"column_end":20},"name":"target_type","qualname":"::errors::std_error::ConversionOverflowError::target_type","value":"&'static str","parent":{"krate":0,"index":3295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3298},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66283,"byte_end":66288,"line_start":498,"line_end":498,"column_start":9,"column_end":14},"name":"value","qualname":"::errors::std_error::ConversionOverflowError::value","value":"std::string::String","parent":{"krate":0,"index":3295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66343,"byte_end":66346,"line_start":502,"line_end":502,"column_start":12,"column_end":15},"name":"new","qualname":"<ConversionOverflowError>::new","value":"pub fn new<impl Into<String>: Into<String>>(&'static str, &'static str,\nimpl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3318},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66679,"byte_end":66696,"line_start":517,"line_end":517,"column_start":12,"column_end":29},"name":"DivideByZeroError","qualname":"::errors::std_error::DivideByZeroError","value":"DivideByZeroError { operand }","parent":null,"children":[{"krate":0,"index":3319}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot devide {operand} by zero\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66624,"byte_end":66667,"line_start":516,"line_end":516,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3319},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66707,"byte_end":66714,"line_start":518,"line_end":518,"column_start":9,"column_end":16},"name":"operand","qualname":"::errors::std_error::DivideByZeroError::operand","value":"std::string::String","parent":{"krate":0,"index":3318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66763,"byte_end":66766,"line_start":522,"line_end":522,"column_start":12,"column_end":15},"name":"new","qualname":"<DivideByZeroError>::new","value":"pub fn new<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3332},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":67002,"byte_end":67014,"line_start":532,"line_end":532,"column_start":5,"column_end":17},"name":"DivideByZero","qualname":"::errors::std_error::CheckedMultiplyRatioError::DivideByZero","value":"CheckedMultiplyRatioError::DivideByZero","parent":{"krate":0,"index":3320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Denominator must not be zero\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66957,"byte_end":66997,"line_start":531,"line_end":531,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3334},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":67061,"byte_end":67069,"line_start":535,"line_end":535,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::errors::std_error::CheckedMultiplyRatioError::Overflow","value":"CheckedMultiplyRatioError::Overflow","parent":{"krate":0,"index":3320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiplication overflow\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":67021,"byte_end":67056,"line_start":534,"line_end":534,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3320},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66925,"byte_end":66950,"line_start":530,"line_end":530,"column_start":10,"column_end":35},"name":"CheckedMultiplyRatioError","qualname":"::errors::std_error::CheckedMultiplyRatioError","value":"pub enum CheckedMultiplyRatioError { DivideByZero, Overflow, }","parent":null,"children":[{"krate":0,"index":3332},{"krate":0,"index":3334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3348},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":67195,"byte_end":67207,"line_start":541,"line_end":541,"column_start":5,"column_end":17},"name":"DivideByZero","qualname":"::errors::std_error::CheckedFromRatioError::DivideByZero","value":"CheckedFromRatioError::DivideByZero","parent":{"krate":0,"index":3336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Denominator must not be zero\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":67150,"byte_end":67190,"line_start":540,"line_end":540,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3350},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":67239,"byte_end":67247,"line_start":544,"line_end":544,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::errors::std_error::CheckedFromRatioError::Overflow","value":"CheckedFromRatioError::Overflow","parent":{"krate":0,"index":3336},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Overflow\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":67214,"byte_end":67234,"line_start":543,"line_end":543,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3336},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":67122,"byte_end":67143,"line_start":539,"line_end":539,"column_start":10,"column_end":31},"name":"CheckedFromRatioError","qualname":"::errors::std_error::CheckedFromRatioError","value":"pub enum CheckedFromRatioError { DivideByZero, Overflow, }","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3350}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3588},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75881,"byte_end":75895,"line_start":19,"line_end":19,"column_start":5,"column_end":19},"name":"InvalidRequest","qualname":"::errors::system_error::SystemError::InvalidRequest","value":"SystemError::InvalidRequest { error, request }","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3591},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75957,"byte_end":75972,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"InvalidResponse","qualname":"::errors::system_error::SystemError::InvalidResponse","value":"SystemError::InvalidResponse { error, response }","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3594},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":76035,"byte_end":76049,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"NoSuchContract","qualname":"::errors::system_error::SystemError::NoSuchContract","value":"SystemError::NoSuchContract { addr }","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3596},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":76137,"byte_end":76144,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::errors::system_error::SystemError::Unknown","value":"SystemError::Unknown {  }","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3597},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":76153,"byte_end":76171,"line_start":32,"line_end":32,"column_start":5,"column_end":23},"name":"UnsupportedRequest","qualname":"::errors::system_error::SystemError::UnsupportedRequest","value":"SystemError::UnsupportedRequest { kind }","parent":{"krate":0,"index":3587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3587},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75863,"byte_end":75874,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"SystemError","qualname":"::errors::system_error::SystemError","value":"pub enum SystemError {\n    InvalidRequest {\n            error: String,\n            request: Binary,\n        },\n    InvalidResponse {\n            error: String,\n            response: Binary,\n        },\n    NoSuchContract {\n            addr: String,\n        },\n    Unknown {\n        },\n    UnsupportedRequest {\n            kind: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":3591},{"krate":0,"index":3594},{"krate":0,"index":3596},{"krate":0,"index":3597}],"decl_id":null,"docs":" SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","sig":null,"attributes":[{"value":"/ SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75136,"byte_end":75225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75226,"byte_end":75229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is used on return values for Querier as a nested result: Result<StdResult<T>, SystemError>","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75230,"byte_end":75329,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ The first wrap (SystemError) will trigger if the contract address doesn't exist,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75330,"byte_end":75414,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ the QueryRequest is malformated, etc. The second wrap will be an error message from","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75415,"byte_end":75502,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ the contract itself.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75503,"byte_end":75527,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75528,"byte_end":75531,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Such errors are only created by the VM. The error type is defined in the standard library, to ensure","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75532,"byte_end":75636,"line_start":13,"line_end":13,"column_start":1,"column_end":105}},{"value":"/ the contract understands the error format without creating a dependency on cosmwasm-vm.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75637,"byte_end":75728,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75800,"byte_end":75835,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":75836,"byte_end":75853,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3612},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77424,"byte_end":77432,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"BatchErr","qualname":"::errors::verification_error::VerificationError::BatchErr","value":"VerificationError::BatchErr","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Batch error\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77396,"byte_end":77419,"line_start":11,"line_end":11,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3614},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77468,"byte_end":77478,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::verification_error::VerificationError::GenericErr","value":"VerificationError::GenericErr","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Generic error\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77438,"byte_end":77463,"line_start":13,"line_end":13,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3616},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77520,"byte_end":77537,"line_start":16,"line_end":16,"column_start":5,"column_end":22},"name":"InvalidHashFormat","qualname":"::errors::verification_error::VerificationError::InvalidHashFormat","value":"VerificationError::InvalidHashFormat","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid hash format\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77484,"byte_end":77515,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3618},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77584,"byte_end":77606,"line_start":18,"line_end":18,"column_start":5,"column_end":27},"name":"InvalidSignatureFormat","qualname":"::errors::verification_error::VerificationError::InvalidSignatureFormat","value":"VerificationError::InvalidSignatureFormat","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid signature format\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77543,"byte_end":77579,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3620},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77654,"byte_end":77673,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"InvalidPubkeyFormat","qualname":"::errors::verification_error::VerificationError::InvalidPubkeyFormat","value":"VerificationError::InvalidPubkeyFormat","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid public key format\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77612,"byte_end":77649,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3622},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77750,"byte_end":77770,"line_start":22,"line_end":22,"column_start":5,"column_end":25},"name":"InvalidRecoveryParam","qualname":"::errors::verification_error::VerificationError::InvalidRecoveryParam","value":"VerificationError::InvalidRecoveryParam","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid recovery parameter. Supported values: 0 and 1.\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77679,"byte_end":77745,"line_start":21,"line_end":21,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3624},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77820,"byte_end":77830,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"UnknownErr","qualname":"::errors::verification_error::VerificationError::UnknownErr","value":"VerificationError::UnknownErr { error_code }","parent":{"krate":0,"index":3599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unknown error: {error_code}\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77776,"byte_end":77815,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3599},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77372,"byte_end":77389,"line_start":10,"line_end":10,"column_start":10,"column_end":27},"name":"VerificationError","qualname":"::errors::verification_error::VerificationError","value":"pub enum VerificationError {\n    BatchErr,\n    GenericErr,\n    InvalidHashFormat,\n    InvalidSignatureFormat,\n    InvalidPubkeyFormat,\n    InvalidRecoveryParam,\n    UnknownErr {\n            error_code: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":3612},{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3624}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77973,"byte_end":77984,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"unknown_err","qualname":"<VerificationError>::unknown_err","value":"pub fn unknown_err(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":395},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":111912,"byte_end":111918,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Record","qualname":"::iterator::Record","value":"(Vec<u8>, V)","parent":null,"children":[],"decl_id":null,"docs":" A record of a key-value storage that is created through an iterator API.\n The first element (key) is always raw binary data. The second element\n (value) is binary by default but can be changed to a custom type. This\n allows contracts to reuse the type when deserializing database records.\n","sig":null,"attributes":[{"value":"/ A record of a key-value storage that is created through an iterator API.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":111601,"byte_end":111677,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ The first element (key) is always raw binary data. The second element","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":111678,"byte_end":111751,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ (value) is binary by default but can be changed to a custom type. This","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":111752,"byte_end":111826,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ allows contracts to reuse the type when deserializing database records.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":111827,"byte_end":111902,"line_start":6,"line_end":6,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3627},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":112086,"byte_end":112095,"line_start":12,"line_end":12,"column_start":5,"column_end":14},"name":"Ascending","qualname":"::iterator::Order::Ascending","value":"Order::Ascending","parent":{"krate":0,"index":3626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3630},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":112105,"byte_end":112115,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Descending","qualname":"::iterator::Order::Descending","value":"Order::Descending","parent":{"krate":0,"index":3626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3626},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":112074,"byte_end":112079,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Order","qualname":"::iterator::Order","value":"pub enum Order { Ascending = , Descending = , }","parent":null,"children":[{"krate":0,"index":3627},{"krate":0,"index":3630}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3636},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115307,"byte_end":115314,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::math::decimal::Decimal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":114972,"byte_end":115077,"line_start":17,"line_end":17,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115078,"byte_end":115081,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115082,"byte_end":115212,"line_start":19,"line_end":19,"column_start":1,"column_end":131}}]},{"kind":"Struct","id":{"krate":0,"index":3669},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115436,"byte_end":115456,"line_start":25,"line_end":25,"column_start":12,"column_end":32},"name":"DecimalRangeExceeded","qualname":"::math::decimal::DecimalRangeExceeded","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Decimal range exceeded\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115390,"byte_end":115424,"line_start":24,"line_end":24,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":501},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115813,"byte_end":115816,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::decimal::Decimal::MAX","value":"Self","parent":{"krate":0,"index":497},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115992,"byte_end":115995,"line_start":37,"line_end":37,"column_start":18,"column_end":21},"name":"new","qualname":"<Decimal>::new","value":"pub const fn new(Uint128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Decimal(value)\n This is equivalent to `Decimal::from_atomics(value, 18)` but usable in a const context.\n","sig":null,"attributes":[{"value":"/ Creates a Decimal(value)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115850,"byte_end":115878,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"/ This is equivalent to `Decimal::from_atomics(value, 18)` but usable in a const context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115883,"byte_end":115974,"line_start":36,"line_end":36,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116204,"byte_end":116207,"line_start":43,"line_end":43,"column_start":18,"column_end":21},"name":"raw","qualname":"<Decimal>::raw","value":"pub const fn raw(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Decimal(Uint128(value))\n This is equivalent to `Decimal::from_atomics(value, 18)` but usable in a const context.\n","sig":null,"attributes":[{"value":"/ Creates a Decimal(Uint128(value))","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116053,"byte_end":116090,"line_start":41,"line_end":41,"column_start":5,"column_end":42}},{"value":"/ This is equivalent to `Decimal::from_atomics(value, 18)` but usable in a const context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116095,"byte_end":116186,"line_start":42,"line_end":42,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116318,"byte_end":116321,"line_start":48,"line_end":48,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116276,"byte_end":116300,"line_start":47,"line_end":47,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116426,"byte_end":116430,"line_start":53,"line_end":53,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116384,"byte_end":116408,"line_start":52,"line_end":52,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116523,"byte_end":116530,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal>::percent","value":"pub fn percent(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116484,"byte_end":116511,"line_start":57,"line_end":57,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116674,"byte_end":116682,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal>::permille","value":"pub fn permille(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116620,"byte_end":116662,"line_start":62,"line_end":62,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117620,"byte_end":117632,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"from_atomics","qualname":"<Decimal>::from_atomics","value":"pub fn from_atomics<impl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>,\nu32) -> Result<Self, DecimalRangeExceeded>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decimal from a number of atomic units and the number\n of decimal places. The inputs will be converted internally to form\n a decimal with 18 decimal places. So the input 123 and 2 will create\n the decimal 1.23.","sig":null,"attributes":[{"value":"/ Creates a decimal from a number of atomic units and the number","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116771,"byte_end":116837,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/ of decimal places. The inputs will be converted internally to form","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116842,"byte_end":116912,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ a decimal with 18 decimal places. So the input 123 and 2 will create","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116917,"byte_end":116989,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ the decimal 1.23.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":116994,"byte_end":117015,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117020,"byte_end":117023,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Using 18 decimal places is slightly more efficient than other values","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117028,"byte_end":117100,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ as no internal conversion is necessary.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117105,"byte_end":117148,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117153,"byte_end":117156,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117161,"byte_end":117176,"line_start":75,"line_end":75,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117181,"byte_end":117184,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117189,"byte_end":117196,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal, Uint128};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117201,"byte_end":117244,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal::from_atomics(Uint128::new(1234), 3).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117249,"byte_end":117315,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(a.to_string(), \"1.234\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117320,"byte_end":117359,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117364,"byte_end":117367,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal::from_atomics(1234u128, 0).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117372,"byte_end":117428,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(a.to_string(), \"1234\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117433,"byte_end":117471,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117476,"byte_end":117479,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal::from_atomics(1u64, 18).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117484,"byte_end":117537,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(a.to_string(), \"0.000000000000000001\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117542,"byte_end":117596,"line_start":86,"line_end":86,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":117601,"byte_end":117608,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":119144,"byte_end":119154,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal>::from_ratio","value":"pub fn from_ratio<impl Into<Uint128>: Into<Uint128>,\nimpl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>, impl Into<Uint128>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":119072,"byte_end":119132,"line_start":119,"line_end":119,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":119636,"byte_end":119654,"line_start":131,"line_end":131,"column_start":12,"column_end":30},"name":"checked_from_ratio","qualname":"<Decimal>::checked_from_ratio","value":"pub fn checked_from_ratio<impl Into<Uint128>: Into<Uint128>,\nimpl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>, impl Into<Uint128>)\n-> Result<Self, CheckedFromRatioError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":119564,"byte_end":119624,"line_start":130,"line_end":130,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120378,"byte_end":120385,"line_start":149,"line_end":149,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Decimal>::is_zero","value":"pub const fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121177,"byte_end":121184,"line_start":171,"line_end":171,"column_start":18,"column_end":25},"name":"atomics","qualname":"<Decimal>::atomics","value":"pub const fn atomics(&Self) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" A decimal is an integer of atomic units plus a number that specifies the\n position of the decimal dot. So any decimal can be expressed as two numbers.","sig":null,"attributes":[{"value":"/ A decimal is an integer of atomic units plus a number that specifies the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120439,"byte_end":120515,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ position of the decimal dot. So any decimal can be expressed as two numbers.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120520,"byte_end":120600,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120605,"byte_end":120608,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120613,"byte_end":120628,"line_start":156,"line_end":156,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120633,"byte_end":120636,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120641,"byte_end":120648,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal, Uint128};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120653,"byte_end":120696,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120701,"byte_end":120729,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/ // Value with whole and fractional part","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120734,"byte_end":120777,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal::from_str(\"1.234\").unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120782,"byte_end":120830,"line_start":162,"line_end":162,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.decimal_places(), 18);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120835,"byte_end":120874,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(a.atomics(), Uint128::new(1234000000000000000));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120879,"byte_end":120942,"line_start":164,"line_end":164,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120947,"byte_end":120950,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Smallest possible value","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120955,"byte_end":120985,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/ let b = Decimal::from_str(\"0.000000000000000001\").unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":120990,"byte_end":121053,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(b.decimal_places(), 18);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121058,"byte_end":121097,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.atomics(), Uint128::new(1));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121102,"byte_end":121147,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121152,"byte_end":121159,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121427,"byte_end":121441,"line_start":179,"line_end":179,"column_start":18,"column_end":32},"name":"decimal_places","qualname":"<Decimal>::decimal_places","value":"pub const fn decimal_places(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of decimal places. This is a constant value for now\n but this could potentially change as the type evolves.","sig":null,"attributes":[{"value":"/ The number of decimal places. This is a constant value for now","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121231,"byte_end":121297,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ but this could potentially change as the type evolves.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121302,"byte_end":121360,"line_start":176,"line_end":176,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121365,"byte_end":121368,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ See also [`Decimal::atomics()`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121373,"byte_end":121409,"line_start":178,"line_end":178,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121611,"byte_end":121622,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Decimal>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one `Decimal` by another, returning an `OverflowError` if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Multiplies one `Decimal` by another, returning an `OverflowError` if an overflow occurred.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":121505,"byte_end":121599,"line_start":183,"line_end":183,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":122264,"byte_end":122275,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Decimal>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of `exp`, returning an `OverflowError` if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Raises a value to the power of `exp`, returning an `OverflowError` if an overflow occurred.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":122157,"byte_end":122252,"line_start":197,"line_end":197,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":123341,"byte_end":123345,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the approximate square root as a Decimal.","sig":null,"attributes":[{"value":"/ Returns the approximate square root as a Decimal.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":123225,"byte_end":123278,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":123283,"byte_end":123286,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This should not overflow or panic.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":123291,"byte_end":123329,"line_start":232,"line_end":232,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3719},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174526,"byte_end":174536,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"Decimal256","qualname":"::math::decimal256::Decimal256","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174141,"byte_end":174249,"line_start":17,"line_end":17,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174250,"byte_end":174253,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174254,"byte_end":174312,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ 115792089237316195423570985008687907853269984665640564039457.584007913129639935","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174313,"byte_end":174396,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ (which is (2^256 - 1) / 10^18)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174397,"byte_end":174431,"line_start":21,"line_end":21,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3752},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174661,"byte_end":174684,"line_start":27,"line_end":27,"column_start":12,"column_end":35},"name":"Decimal256RangeExceeded","qualname":"::math::decimal256::Decimal256RangeExceeded","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Decimal256 range exceeded\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174612,"byte_end":174649,"line_start":26,"line_end":26,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":692},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175228,"byte_end":175231,"line_start":42,"line_end":42,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::decimal256::Decimal256::MAX","value":"Self","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175419,"byte_end":175422,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"new","qualname":"<Decimal256>::new","value":"pub const fn new(Uint256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Decimal256 from Uint256\n This is equivalent to `Decimal256::from_atomics(value, 18)` but usable in a const context.\n","sig":null,"attributes":[{"value":"/ Creates a Decimal256 from Uint256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175265,"byte_end":175302,"line_start":44,"line_end":44,"column_start":5,"column_end":42}},{"value":"/ This is equivalent to `Decimal256::from_atomics(value, 18)` but usable in a const context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175307,"byte_end":175401,"line_start":45,"line_end":45,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175631,"byte_end":175634,"line_start":52,"line_end":52,"column_start":18,"column_end":21},"name":"raw","qualname":"<Decimal256>::raw","value":"pub const fn raw(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Decimal256 from u128\n This is equivalent to `Decimal256::from_atomics(value, 18)` but usable in a const context.\n","sig":null,"attributes":[{"value":"/ Creates a Decimal256 from u128","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175480,"byte_end":175514,"line_start":50,"line_end":50,"column_start":5,"column_end":39}},{"value":"/ This is equivalent to `Decimal256::from_atomics(value, 18)` but usable in a const context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175519,"byte_end":175613,"line_start":51,"line_end":51,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175754,"byte_end":175757,"line_start":57,"line_end":57,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal256>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal256\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175709,"byte_end":175736,"line_start":56,"line_end":56,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175865,"byte_end":175869,"line_start":62,"line_end":62,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal256>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal256\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175820,"byte_end":175847,"line_start":61,"line_end":61,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175965,"byte_end":175972,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal256>::percent","value":"pub fn percent(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal256\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":175923,"byte_end":175953,"line_start":66,"line_end":66,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176134,"byte_end":176142,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal256>::permille","value":"pub fn permille(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal256\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176077,"byte_end":176122,"line_start":71,"line_end":71,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":177213,"byte_end":177225,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"from_atomics","qualname":"<Decimal256>::from_atomics","value":"pub fn from_atomics<impl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>,\nu32) -> Result<Self, Decimal256RangeExceeded>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decimal from a number of atomic units and the number\n of decimal places. The inputs will be converted internally to form\n a decimal with 18 decimal places. So the input 123 and 2 will create\n the decimal 1.23.","sig":null,"attributes":[{"value":"/ Creates a decimal from a number of atomic units and the number","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176246,"byte_end":176312,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ of decimal places. The inputs will be converted internally to form","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176317,"byte_end":176387,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ a decimal with 18 decimal places. So the input 123 and 2 will create","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176392,"byte_end":176464,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ the decimal 1.23.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176469,"byte_end":176490,"line_start":79,"line_end":79,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176495,"byte_end":176498,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Using 18 decimal places is slightly more efficient than other values","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176503,"byte_end":176575,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ as no internal conversion is necessary.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176580,"byte_end":176623,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176628,"byte_end":176631,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176636,"byte_end":176651,"line_start":84,"line_end":84,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176656,"byte_end":176659,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176664,"byte_end":176671,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal256, Uint256};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176676,"byte_end":176722,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/ let a = Decimal256::from_atomics(1234u64, 3).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176727,"byte_end":176785,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(a.to_string(), \"1.234\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176790,"byte_end":176829,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176834,"byte_end":176837,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(1234u128, 0).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176842,"byte_end":176901,"line_start":91,"line_end":91,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(a.to_string(), \"1234\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176906,"byte_end":176944,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176949,"byte_end":176952,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(1u64, 18).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":176957,"byte_end":177013,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(a.to_string(), \"0.000000000000000001\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":177018,"byte_end":177072,"line_start":95,"line_end":95,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":177077,"byte_end":177080,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(Uint256::MAX, 18).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":177085,"byte_end":177149,"line_start":97,"line_end":97,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a, Decimal256::MAX);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":177154,"byte_end":177189,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":177194,"byte_end":177201,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":178759,"byte_end":178769,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal256>::from_ratio","value":"pub fn from_ratio<impl Into<Uint256>: Into<Uint256>,\nimpl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>, impl Into<Uint256>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal256\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":178684,"byte_end":178747,"line_start":131,"line_end":131,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":179257,"byte_end":179275,"line_start":143,"line_end":143,"column_start":12,"column_end":30},"name":"checked_from_ratio","qualname":"<Decimal256>::checked_from_ratio","value":"pub fn checked_from_ratio<impl Into<Uint256>: Into<Uint256>,\nimpl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>, impl Into<Uint256>)\n-> Result<Self, CheckedFromRatioError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal256\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal256","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":179182,"byte_end":179245,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":179996,"byte_end":180003,"line_start":161,"line_end":161,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Decimal256>::is_zero","value":"pub const fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180814,"byte_end":180821,"line_start":183,"line_end":183,"column_start":18,"column_end":25},"name":"atomics","qualname":"<Decimal256>::atomics","value":"pub const fn atomics(&Self) -> Uint256","parent":null,"children":[],"decl_id":null,"docs":" A decimal is an integer of atomic units plus a number that specifies the\n position of the decimal dot. So any decimal can be expressed as two numbers.","sig":null,"attributes":[{"value":"/ A decimal is an integer of atomic units plus a number that specifies the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180057,"byte_end":180133,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ position of the decimal dot. So any decimal can be expressed as two numbers.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180138,"byte_end":180218,"line_start":166,"line_end":166,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180223,"byte_end":180226,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180231,"byte_end":180246,"line_start":168,"line_end":168,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180251,"byte_end":180254,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180259,"byte_end":180266,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal256, Uint256};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180271,"byte_end":180317,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180322,"byte_end":180350,"line_start":172,"line_end":172,"column_start":5,"column_end":33}},{"value":"/ // Value with whole and fractional part","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180355,"byte_end":180398,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal256::from_str(\"1.234\").unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180403,"byte_end":180454,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(a.decimal_places(), 18);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180459,"byte_end":180498,"line_start":175,"line_end":175,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(a.atomics(), Uint256::from(1234000000000000000u128));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180503,"byte_end":180571,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180576,"byte_end":180579,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Smallest possible value","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180584,"byte_end":180614,"line_start":178,"line_end":178,"column_start":5,"column_end":35}},{"value":"/ let b = Decimal256::from_str(\"0.000000000000000001\").unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180619,"byte_end":180685,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(b.decimal_places(), 18);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180690,"byte_end":180729,"line_start":180,"line_end":180,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.atomics(), Uint256::from(1u128));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180734,"byte_end":180784,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180789,"byte_end":180796,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":181067,"byte_end":181081,"line_start":191,"line_end":191,"column_start":18,"column_end":32},"name":"decimal_places","qualname":"<Decimal256>::decimal_places","value":"pub const fn decimal_places(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of decimal places. This is a constant value for now\n but this could potentially change as the type evolves.","sig":null,"attributes":[{"value":"/ The number of decimal places. This is a constant value for now","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180868,"byte_end":180934,"line_start":187,"line_end":187,"column_start":5,"column_end":71}},{"value":"/ but this could potentially change as the type evolves.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":180939,"byte_end":180997,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":181002,"byte_end":181005,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ See also [`Decimal256::atomics()`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":181010,"byte_end":181049,"line_start":190,"line_end":190,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":181254,"byte_end":181265,"line_start":196,"line_end":196,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Decimal256>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one `Decimal256` by another, returning an `OverflowError` if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Multiplies one `Decimal256` by another, returning an `OverflowError` if an overflow occurred.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":181145,"byte_end":181242,"line_start":195,"line_end":195,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":181907,"byte_end":181918,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Decimal256>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of `exp`, returning an `OverflowError` if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Raises a value to the power of `exp`, returning an `OverflowError` if an overflow occurred.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":181800,"byte_end":181895,"line_start":209,"line_end":209,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":182999,"byte_end":183003,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal256>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the approximate square root as a Decimal256.","sig":null,"attributes":[{"value":"/ Returns the approximate square root as a Decimal256.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":182880,"byte_end":182936,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":182941,"byte_end":182944,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This should not overflow or panic.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":182949,"byte_end":182987,"line_start":244,"line_end":244,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":785},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237435,"byte_end":237443,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Fraction","qualname":"::math::fraction::Fraction","value":"Fraction<T>: Sized","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"decl_id":null,"docs":" A fraction `p`/`q` with integers `p` and `q`.","sig":null,"attributes":[{"value":"/ A fraction `p`/`q` with integers `p` and `q`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237304,"byte_end":237353,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237354,"byte_end":237357,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `p` is called the numerator and `q` is called the denominator.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237358,"byte_end":237424,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237497,"byte_end":237506,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"numerator","qualname":"::math::fraction::Fraction::numerator","value":"pub fn numerator(&Self) -> T","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Returns the numerator `p`\n","sig":null,"attributes":[{"value":"/ Returns the numerator `p`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237460,"byte_end":237489,"line_start":5,"line_end":5,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237563,"byte_end":237574,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"denominator","qualname":"::math::fraction::Fraction::denominator","value":"pub fn denominator(&Self) -> T","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Returns the denominator `q`\n","sig":null,"attributes":[{"value":"/ Returns the denominator `q`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237524,"byte_end":237555,"line_start":7,"line_end":7,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237715,"byte_end":237718,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"inv","qualname":"::math::fraction::Fraction::inv","value":"pub fn inv(&Self) -> Option<Self>","parent":{"krate":0,"index":785},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse `q/p` for fraction `p/q`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse `q/p` for fraction `p/q`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237593,"byte_end":237657,"line_start":10,"line_end":10,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237662,"byte_end":237665,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ If `p` is zero, None is returned.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237670,"byte_end":237707,"line_start":12,"line_end":12,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":811},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":237937,"byte_end":237942,"line_start":7,"line_end":7,"column_start":11,"column_end":16},"name":"Isqrt","qualname":"::math::isqrt::Isqrt","value":"Isqrt","parent":null,"children":[{"krate":0,"index":812}],"decl_id":null,"docs":" A trait for calculating the\n [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).\n","sig":null,"attributes":[{"value":"/ A trait for calculating the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":237817,"byte_end":237848,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/ [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":237849,"byte_end":237926,"line_start":6,"line_end":6,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238038,"byte_end":238043,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"isqrt","qualname":"::math::isqrt::Isqrt::isqrt","value":"pub fn isqrt(Self) -> Self","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" The [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).\n","sig":null,"attributes":[{"value":"/ The [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":237949,"byte_end":238030,"line_start":8,"line_end":8,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":816},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238778,"byte_end":238786,"line_start":42,"line_end":42,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::math::isqrt::Unsigned","value":"Unsigned","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for types that represent unsigned integers.\n","sig":null,"attributes":[{"value":"/ Marker trait for types that represent unsigned integers.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238707,"byte_end":238767,"line_start":41,"line_end":41,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3802},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241687,"byte_end":241694,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Uint128","qualname":"::math::uint128::Uint128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around u128 that is using strings for JSON encoding/decoding,\n such that the full u128 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ A thin wrapper around u128 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241034,"byte_end":241114,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ such that the full u128 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241115,"byte_end":241209,"line_start":16,"line_end":16,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241210,"byte_end":241237,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241238,"byte_end":241241,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241242,"byte_end":241256,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241257,"byte_end":241260,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances of this and `u128` to get the value out:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241261,"byte_end":241336,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241337,"byte_end":241340,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241341,"byte_end":241348,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint128;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241349,"byte_end":241381,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/ let a = Uint128::from(123u128);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241382,"byte_end":241417,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(a.u128(), 123);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241418,"byte_end":241448,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241449,"byte_end":241452,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = Uint128::from(42u64);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241453,"byte_end":241486,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(b.u128(), 42);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241487,"byte_end":241516,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241517,"byte_end":241520,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let c = Uint128::from(70u32);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241521,"byte_end":241554,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(c.u128(), 70);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241555,"byte_end":241584,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241585,"byte_end":241592,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":925},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241761,"byte_end":241764,"line_start":38,"line_end":38,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint128::Uint128::MAX","value":"Self","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241937,"byte_end":241940,"line_start":43,"line_end":43,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint128>::new","value":"pub const fn new(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(value).","sig":null,"attributes":[{"value":"/ Creates a Uint128(value).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241795,"byte_end":241824,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241829,"byte_end":241832,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241837,"byte_end":241919,"line_start":42,"line_end":42,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242040,"byte_end":242044,"line_start":48,"line_end":48,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint128>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint128(0)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241998,"byte_end":242022,"line_start":47,"line_end":47,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242144,"byte_end":242148,"line_start":53,"line_end":53,"column_start":18,"column_end":22},"name":"u128","qualname":"<Uint128>::u128","value":"pub const fn u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242087,"byte_end":242126,"line_start":52,"line_end":52,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242263,"byte_end":242274,"line_start":58,"line_end":58,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint128>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242192,"byte_end":242245,"line_start":57,"line_end":57,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242409,"byte_end":242420,"line_start":63,"line_end":63,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint128>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242335,"byte_end":242391,"line_start":62,"line_end":62,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242494,"byte_end":242501,"line_start":67,"line_end":67,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Uint128>::is_zero","value":"pub const fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242557,"byte_end":242560,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint128>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242685,"byte_end":242699,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint128>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u128>, B: Into<u128>>(&Self, A, B) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":242629,"byte_end":242673,"line_start":75,"line_end":75,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243210,"byte_end":243232,"line_start":91,"line_end":91,"column_start":12,"column_end":34},"name":"checked_multiply_ratio","qualname":"<Uint128>::checked_multiply_ratio","value":"pub fn checked_multiply_ratio<A: Into<u128>, B: Into<u128>>(&Self, A, B)\n-> Result<Uint128, CheckedMultiplyRatioError>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243154,"byte_end":243198,"line_start":90,"line_end":90,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":244136,"byte_end":244144,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint128>::full_mul","value":"pub fn full_mul<impl Into<u128>: Into<u128>>(Self, impl Into<u128>) -> Uint256","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two u128 values without overflow, producing an\n [`Uint256`].","sig":null,"attributes":[{"value":"/ Multiplies two u128 values without overflow, producing an","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243788,"byte_end":243849,"line_start":107,"line_end":107,"column_start":5,"column_end":66}},{"value":"/ [`Uint256`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243854,"byte_end":243870,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243875,"byte_end":243878,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243883,"byte_end":243897,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243902,"byte_end":243905,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243910,"byte_end":243917,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint128;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243922,"byte_end":243952,"line_start":113,"line_end":113,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243957,"byte_end":243960,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let a = Uint128::MAX;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243965,"byte_end":243990,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":243995,"byte_end":244029,"line_start":116,"line_end":116,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.to_string(), \"680564733841876926926749214863536422910\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":244034,"byte_end":244112,"line_start":117,"line_end":117,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":244117,"byte_end":244124,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":244313,"byte_end":244324,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint128>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":244551,"byte_end":244562,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint128>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":244789,"byte_end":244800,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint128>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":245027,"byte_end":245038,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint128>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":245256,"byte_end":245267,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint128>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":245471,"byte_end":245489,"line_start":160,"line_end":160,"column_start":12,"column_end":30},"name":"checked_div_euclid","qualname":"<Uint128>::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":245700,"byte_end":245711,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint128>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":245915,"byte_end":245927,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"wrapping_add","qualname":"<Uint128>::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":246018,"byte_end":246030,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"wrapping_sub","qualname":"<Uint128>::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":246121,"byte_end":246133,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"wrapping_mul","qualname":"<Uint128>::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":246224,"byte_end":246236,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"wrapping_pow","qualname":"<Uint128>::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":246324,"byte_end":246338,"line_start":190,"line_end":190,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint128>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":246431,"byte_end":246445,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint128>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":246538,"byte_end":246552,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint128>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":246645,"byte_end":246659,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"saturating_pow","qualname":"<Uint128>::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4126},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":267808,"byte_end":267812,"line_start":22,"line_end":22,"column_start":20,"column_end":24},"name":"U256","qualname":"::math::uint256::uints::U256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian large integer type\n","sig":null,"attributes":[{"value":"/ Little-endian large integer type","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.3/src/uint.rs","byte_start":15486523,"byte_end":15486559,"line_start":561,"line_end":561,"column_start":3,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.3/src/uint.rs","byte_start":15486562,"byte_end":15486572,"line_start":562,"line_end":562,"column_start":3,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":4412},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268721,"byte_end":268728,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"Uint256","qualname":"::math::uint256::Uint256","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of u256 that is using strings for JSON encoding/decoding,\n such that the full u256 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ An implementation of u256 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":267958,"byte_end":268037,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ such that the full u256 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268038,"byte_end":268132,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268133,"byte_end":268160,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268161,"byte_end":268164,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268165,"byte_end":268179,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268180,"byte_end":268183,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances out of primitive uint types or `new` to provide big","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268184,"byte_end":268270,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ endian bytes:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268271,"byte_end":268288,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268289,"byte_end":268292,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268293,"byte_end":268300,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint256;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268301,"byte_end":268333,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ let a = Uint256::from(258u128);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268334,"byte_end":268369,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ let b = Uint256::new([","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268370,"byte_end":268396,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268397,"byte_end":268444,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268445,"byte_end":268492,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268493,"byte_end":268540,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268541,"byte_end":268588,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ ]);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268589,"byte_end":268596,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268597,"byte_end":268618,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268619,"byte_end":268626,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1170},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268795,"byte_end":268798,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint256::Uint256::MAX","value":"Uint256","parent":{"krate":0,"index":1169},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":269069,"byte_end":269072,"line_start":60,"line_end":60,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint256>::new","value":"pub const fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint256(value) from a big endian representation. It's just an alias for\n [`Uint256::from_be_bytes`].","sig":null,"attributes":[{"value":"/ Creates a Uint256(value) from a big endian representation. It's just an alias for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268835,"byte_end":268920,"line_start":56,"line_end":56,"column_start":5,"column_end":90}},{"value":"/ [`Uint256::from_be_bytes`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268925,"byte_end":268956,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268961,"byte_end":268964,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268969,"byte_end":269051,"line_start":59,"line_end":59,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":269188,"byte_end":269192,"line_start":65,"line_end":65,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint256>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint256(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint256(0)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":269146,"byte_end":269170,"line_start":64,"line_end":64,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":269259,"byte_end":269272,"line_start":69,"line_end":69,"column_start":18,"column_end":31},"name":"from_be_bytes","qualname":"<Uint256>::from_be_bytes","value":"pub const fn from_be_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":269962,"byte_end":269975,"line_start":87,"line_end":87,"column_start":18,"column_end":31},"name":"from_le_bytes","qualname":"<Uint256>::from_le_bytes","value":"pub const fn from_le_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":270794,"byte_end":270803,"line_start":107,"line_end":107,"column_start":18,"column_end":27},"name":"from_u128","qualname":"<Uint256>::from_u128","value":"pub const fn from_u128(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `u128` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `u128` that, unlike the one provided by the `From` trait,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":270655,"byte_end":270734,"line_start":105,"line_end":105,"column_start":5,"column_end":84}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":270739,"byte_end":270776,"line_start":106,"line_end":106,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":271309,"byte_end":271321,"line_start":119,"line_end":119,"column_start":18,"column_end":30},"name":"from_uint128","qualname":"<Uint256>::from_uint128","value":"pub const fn from_uint128(Uint128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `Uint128` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `Uint128` that, unlike the one provided by the `From` trait,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":271167,"byte_end":271249,"line_start":117,"line_end":117,"column_start":5,"column_end":87}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":271254,"byte_end":271291,"line_start":118,"line_end":118,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":271464,"byte_end":271475,"line_start":124,"line_end":124,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint256>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":271393,"byte_end":271446,"line_start":123,"line_end":123,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":271850,"byte_end":271861,"line_start":135,"line_end":135,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint256>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":271776,"byte_end":271832,"line_start":134,"line_end":134,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":272175,"byte_end":272182,"line_start":145,"line_end":145,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Uint256>::is_zero","value":"pub const fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":272323,"byte_end":272326,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint256>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":272480,"byte_end":272494,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint256>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<Uint256>, B: Into<Uint256>>(&Self, A, B)\n-> Uint256","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":272424,"byte_end":272468,"line_start":155,"line_end":155,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273011,"byte_end":273033,"line_start":171,"line_end":171,"column_start":12,"column_end":34},"name":"checked_multiply_ratio","qualname":"<Uint256>::checked_multiply_ratio","value":"pub fn checked_multiply_ratio<A: Into<Uint256>, B: Into<Uint256>>(&Self, A, B)\n-> Result<Uint256, CheckedMultiplyRatioError>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":272955,"byte_end":272999,"line_start":170,"line_end":170,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":274028,"byte_end":274036,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint256>::full_mul","value":"pub fn full_mul<impl Into<Uint256>: Into<Uint256>>(Self, impl Into<Uint256>)\n-> Uint512","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two u256 values without overflow, producing an\n [`Uint512`].","sig":null,"attributes":[{"value":"/ Multiplies two u256 values without overflow, producing an","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273606,"byte_end":273667,"line_start":187,"line_end":187,"column_start":5,"column_end":66}},{"value":"/ [`Uint512`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273672,"byte_end":273688,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273693,"byte_end":273696,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273701,"byte_end":273715,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273720,"byte_end":273723,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273728,"byte_end":273735,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint256;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273740,"byte_end":273770,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273775,"byte_end":273778,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let a = Uint256::MAX;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273783,"byte_end":273808,"line_start":195,"line_end":195,"column_start":5,"column_end":30}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273813,"byte_end":273847,"line_start":196,"line_end":196,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273852,"byte_end":273867,"line_start":197,"line_end":197,"column_start":5,"column_end":20}},{"value":"/     result.to_string(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273872,"byte_end":273899,"line_start":198,"line_end":198,"column_start":5,"column_end":32}},{"value":"/     \"231584178474632390847141970017375815706539969331281128078915168015826259279870\",","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273904,"byte_end":273993,"line_start":199,"line_end":199,"column_start":5,"column_end":94}},{"value":"/ );","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":273998,"byte_end":274004,"line_start":200,"line_end":200,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":274009,"byte_end":274016,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":274201,"byte_end":274212,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint256>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":274439,"byte_end":274450,"line_start":215,"line_end":215,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint256>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":274677,"byte_end":274688,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint256>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":274915,"byte_end":274926,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint256>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":275151,"byte_end":275162,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint256>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":275366,"byte_end":275377,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint256>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":275581,"byte_end":275592,"line_start":250,"line_end":250,"column_start":12,"column_end":23},"name":"checked_shr","qualname":"<Uint256>::checked_shr","value":"pub fn checked_shr(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":275816,"byte_end":275827,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"checked_shl","qualname":"<Uint256>::checked_shl","value":"pub fn checked_shl(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276051,"byte_end":276065,"line_start":266,"line_end":266,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint256>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276158,"byte_end":276172,"line_start":270,"line_end":270,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint256>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276265,"byte_end":276279,"line_start":274,"line_end":274,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint256>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4736},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316168,"byte_end":316172,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"name":"U512","qualname":"::math::uint512::uints::U512","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian large integer type\n","sig":null,"attributes":[{"value":"/ Little-endian large integer type","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.3/src/uint.rs","byte_start":15486523,"byte_end":15486559,"line_start":561,"line_end":561,"column_start":3,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.3/src/uint.rs","byte_start":15486562,"byte_end":15486572,"line_start":562,"line_end":562,"column_start":3,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":5022},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317273,"byte_end":317280,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"Uint512","qualname":"::math::uint512::Uint512","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of u512 that is using strings for JSON encoding/decoding,\n such that the full u512 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ An implementation of u512 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316318,"byte_end":316397,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ such that the full u512 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316398,"byte_end":316492,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316493,"byte_end":316520,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316521,"byte_end":316524,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316525,"byte_end":316539,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316540,"byte_end":316543,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances out of primitive uint types or `new` to provide big","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316544,"byte_end":316630,"line_start":34,"line_end":34,"column_start":1,"column_end":87}},{"value":"/ endian bytes:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316631,"byte_end":316648,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316649,"byte_end":316652,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316653,"byte_end":316660,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint512;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316661,"byte_end":316693,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ let a = Uint512::from(258u128);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316694,"byte_end":316729,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/ let b = Uint512::new([","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316730,"byte_end":316756,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316757,"byte_end":316804,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316805,"byte_end":316852,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316853,"byte_end":316900,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316901,"byte_end":316948,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316949,"byte_end":316996,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":316997,"byte_end":317044,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317045,"byte_end":317092,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317093,"byte_end":317140,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ ]);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317141,"byte_end":317148,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317149,"byte_end":317170,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317171,"byte_end":317178,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1428},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317347,"byte_end":317350,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint512::Uint512::MAX","value":"Uint512","parent":{"krate":0,"index":1427},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317517,"byte_end":317520,"line_start":60,"line_end":60,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint512>::new","value":"pub const fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint512(value) from a big endian representation. It's just an alias for\n `from_big_endian`.\n","sig":null,"attributes":[{"value":"/ Creates a Uint512(value) from a big endian representation. It's just an alias for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317387,"byte_end":317472,"line_start":58,"line_end":58,"column_start":5,"column_end":90}},{"value":"/ `from_big_endian`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317477,"byte_end":317499,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317636,"byte_end":317640,"line_start":65,"line_end":65,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint512>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint512(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint512(0)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317594,"byte_end":317618,"line_start":64,"line_end":64,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317707,"byte_end":317720,"line_start":69,"line_end":69,"column_start":18,"column_end":31},"name":"from_be_bytes","qualname":"<Uint512>::from_be_bytes","value":"pub const fn from_be_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":318990,"byte_end":319003,"line_start":99,"line_end":99,"column_start":18,"column_end":31},"name":"from_le_bytes","qualname":"<Uint512>::from_le_bytes","value":"pub const fn from_le_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":320402,"byte_end":320414,"line_start":131,"line_end":131,"column_start":18,"column_end":30},"name":"from_uint256","qualname":"<Uint512>::from_uint256","value":"pub const fn from_uint256(Uint256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `Uint256` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `Uint256` that, unlike the one provided by the `From` trait,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":320260,"byte_end":320342,"line_start":129,"line_end":129,"column_start":5,"column_end":87}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":320347,"byte_end":320384,"line_start":130,"line_end":130,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":321111,"byte_end":321122,"line_start":144,"line_end":144,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint512>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":321040,"byte_end":321093,"line_start":143,"line_end":143,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":321661,"byte_end":321672,"line_start":159,"line_end":159,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint512>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":321587,"byte_end":321643,"line_start":158,"line_end":158,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":322150,"byte_end":322157,"line_start":173,"line_end":173,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Uint512>::is_zero","value":"pub const fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":322450,"byte_end":322453,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint512>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":322558,"byte_end":322569,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint512>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":322796,"byte_end":322807,"line_start":197,"line_end":197,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint512>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":323034,"byte_end":323045,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint512>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":323272,"byte_end":323283,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint512>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":323508,"byte_end":323519,"line_start":218,"line_end":218,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint512>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":323723,"byte_end":323734,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint512>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":323938,"byte_end":323949,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"checked_shr","qualname":"<Uint512>::checked_shr","value":"pub fn checked_shr(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324173,"byte_end":324187,"line_start":240,"line_end":240,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint512>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324280,"byte_end":324294,"line_start":244,"line_end":244,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint512>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324387,"byte_end":324401,"line_start":248,"line_end":248,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint512>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5083},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352235,"byte_end":352241,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Uint64","qualname":"::math::uint64::Uint64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around u64 that is using strings for JSON encoding/decoding,\n such that the full u64 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ A thin wrapper around u64 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351661,"byte_end":351740,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ such that the full u64 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351741,"byte_end":351834,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351835,"byte_end":351862,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351863,"byte_end":351866,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351867,"byte_end":351881,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351882,"byte_end":351885,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances of this and `u64` to get the value out:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351886,"byte_end":351960,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351961,"byte_end":351964,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351965,"byte_end":351972,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint64;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":351973,"byte_end":352004,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ let a = Uint64::from(42u64);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352005,"byte_end":352037,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.u64(), 42);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352038,"byte_end":352066,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352067,"byte_end":352070,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let b = Uint64::from(70u32);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352071,"byte_end":352103,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(b.u64(), 70);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352104,"byte_end":352132,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352133,"byte_end":352140,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1662},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352306,"byte_end":352309,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint64::Uint64::MAX","value":"Self","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352480,"byte_end":352483,"line_start":39,"line_end":39,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint64>::new","value":"pub const fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint64(value).","sig":null,"attributes":[{"value":"/ Creates a Uint64(value).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352339,"byte_end":352367,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352372,"byte_end":352375,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352380,"byte_end":352462,"line_start":38,"line_end":38,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352580,"byte_end":352584,"line_start":44,"line_end":44,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint64>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint64(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint64(0)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352539,"byte_end":352562,"line_start":43,"line_end":43,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352683,"byte_end":352686,"line_start":49,"line_end":49,"column_start":18,"column_end":21},"name":"u64","qualname":"<Uint64>::u64","value":"pub const fn u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352626,"byte_end":352665,"line_start":48,"line_end":48,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352800,"byte_end":352811,"line_start":54,"line_end":54,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint64>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352729,"byte_end":352782,"line_start":53,"line_end":53,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352945,"byte_end":352956,"line_start":59,"line_end":59,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint64>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352871,"byte_end":352927,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":353029,"byte_end":353036,"line_start":63,"line_end":63,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Uint64>::is_zero","value":"pub const fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":353092,"byte_end":353095,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint64>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":353220,"byte_end":353234,"line_start":72,"line_end":72,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint64>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u64>, B: Into<u64>>(&Self, A, B) -> Uint64","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":353164,"byte_end":353208,"line_start":71,"line_end":71,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":353742,"byte_end":353764,"line_start":87,"line_end":87,"column_start":12,"column_end":34},"name":"checked_multiply_ratio","qualname":"<Uint64>::checked_multiply_ratio","value":"pub fn checked_multiply_ratio<A: Into<u64>, B: Into<u64>>(&Self, A, B)\n-> Result<Uint64, CheckedMultiplyRatioError>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":353686,"byte_end":353730,"line_start":86,"line_end":86,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354642,"byte_end":354650,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint64>::full_mul","value":"pub fn full_mul<impl Into<u64>: Into<u64>>(Self, impl Into<u64>) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two `Uint64`/`u64` values without overflow, producing an\n [`Uint128`].","sig":null,"attributes":[{"value":"/ Multiplies two `Uint64`/`u64` values without overflow, producing an","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354305,"byte_end":354376,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ [`Uint128`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354381,"byte_end":354397,"line_start":104,"line_end":104,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354402,"byte_end":354405,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354410,"byte_end":354424,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354429,"byte_end":354432,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354437,"byte_end":354444,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint64;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354449,"byte_end":354478,"line_start":109,"line_end":109,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354483,"byte_end":354486,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let a = Uint64::MAX;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354491,"byte_end":354515,"line_start":111,"line_end":111,"column_start":5,"column_end":29}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354520,"byte_end":354554,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.to_string(), \"36893488147419103230\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354559,"byte_end":354618,"line_start":113,"line_end":113,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354623,"byte_end":354630,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":354817,"byte_end":354828,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint64>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":355055,"byte_end":355066,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint64>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":355293,"byte_end":355304,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint64>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":355531,"byte_end":355542,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint64>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":355760,"byte_end":355771,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint64>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":355975,"byte_end":355993,"line_start":156,"line_end":156,"column_start":12,"column_end":30},"name":"checked_div_euclid","qualname":"<Uint64>::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":356204,"byte_end":356215,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint64>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":356419,"byte_end":356431,"line_start":170,"line_end":170,"column_start":12,"column_end":24},"name":"wrapping_add","qualname":"<Uint64>::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":356522,"byte_end":356534,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"wrapping_sub","qualname":"<Uint64>::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":356625,"byte_end":356637,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"wrapping_mul","qualname":"<Uint64>::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":356728,"byte_end":356740,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"wrapping_pow","qualname":"<Uint64>::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":356828,"byte_end":356842,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint64>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":356935,"byte_end":356949,"line_start":190,"line_end":190,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint64>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357042,"byte_end":357056,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint64>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357149,"byte_end":357163,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"saturating_pow","qualname":"<Uint64>::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5272},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":379892,"byte_end":379899,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Balance","qualname":"::query::bank::BankQuery::Balance","value":"BankQuery::Balance { address, denom }","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" This calls into the native bank module for one denomination\n Return value is BalanceResponse\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for one denomination","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":379784,"byte_end":379847,"line_start":10,"line_end":10,"column_start":5,"column_end":68}},{"value":"/ Return value is BalanceResponse","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":379852,"byte_end":379887,"line_start":11,"line_end":11,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":5275},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380152,"byte_end":380163,"line_start":16,"line_end":16,"column_start":5,"column_end":16},"name":"AllBalances","qualname":"::query::bank::BankQuery::AllBalances","value":"BankQuery::AllBalances { address }","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" This calls into the native bank module for all denominations.\n Note that this may be much more expensive than Balance and should be avoided if possible.\n Return value is AllBalanceResponse.\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for all denominations.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":379940,"byte_end":380005,"line_start":13,"line_end":13,"column_start":5,"column_end":70}},{"value":"/ Note that this may be much more expensive than Balance and should be avoided if possible.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380010,"byte_end":380103,"line_start":14,"line_end":14,"column_start":5,"column_end":98}},{"value":"/ Return value is AllBalanceResponse.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380108,"byte_end":380147,"line_start":15,"line_end":15,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5271},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":379768,"byte_end":379777,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"BankQuery","qualname":"::query::bank::BankQuery","value":"pub enum BankQuery {\n    Balance {\n            address: String,\n            denom: String,\n        },\n    AllBalances {\n            address: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":5272},{"krate":0,"index":5275}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":379634,"byte_end":379651,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":379723,"byte_end":379758,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5336},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380306,"byte_end":380321,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"BalanceResponse","qualname":"::query::bank::BalanceResponse","value":"BalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":5337}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380259,"byte_end":380294,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5337},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380438,"byte_end":380444,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::bank::BalanceResponse::amount","value":"coins::Coin","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Always returns a Coin with the requested denom.\n This may be of 0 amount if no such funds.\n","sig":null,"attributes":[{"value":"/ Always returns a Coin with the requested denom.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380328,"byte_end":380379,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/ This may be of 0 amount if no such funds.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380384,"byte_end":380429,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5397},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380573,"byte_end":380591,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"AllBalanceResponse","qualname":"::query::bank::AllBalanceResponse","value":"AllBalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":5398}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380526,"byte_end":380561,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5398},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380659,"byte_end":380665,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::bank::AllBalanceResponse::amount","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":5397},"children":[],"decl_id":null,"docs":" Returns all non-zero coins held by this account.\n","sig":null,"attributes":[{"value":"/ Returns all non-zero coins held by this account.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/bank.rs","byte_start":380598,"byte_end":380650,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":5565},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":386849,"byte_end":386854,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Smart","qualname":"::query::wasm::WasmQuery::Smart","value":"WasmQuery::Smart { contract_addr, msg }","parent":{"krate":0,"index":5564},"children":[],"decl_id":null,"docs":" this queries the public API of another contract at a known address (with known ABI)\n Return value is whatever the contract returns (caller should know), wrapped in a\n ContractResult that is JSON encoded.\n","sig":null,"attributes":[{"value":"/ this queries the public API of another contract at a known address (with known ABI)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":386623,"byte_end":386710,"line_start":10,"line_end":10,"column_start":5,"column_end":92}},{"value":"/ Return value is whatever the contract returns (caller should know), wrapped in a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":386715,"byte_end":386799,"line_start":11,"line_end":11,"column_start":5,"column_end":89}},{"value":"/ ContractResult that is JSON encoded.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":386804,"byte_end":386844,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":5568},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387130,"byte_end":387133,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"Raw","qualname":"::query::wasm::WasmQuery::Raw","value":"WasmQuery::Raw { contract_addr, key }","parent":{"krate":0,"index":5564},"children":[],"decl_id":null,"docs":" this queries the raw kv-store of the contract.\n returns the raw, unparsed data stored at that key, which may be an empty vector if not present\n","sig":null,"attributes":[{"value":"/ this queries the raw kv-store of the contract.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":386972,"byte_end":387022,"line_start":18,"line_end":18,"column_start":5,"column_end":55}},{"value":"/ returns the raw, unparsed data stored at that key, which may be an empty vector if not present","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387027,"byte_end":387125,"line_start":19,"line_end":19,"column_start":5,"column_end":103}}]},{"kind":"StructVariant","id":{"krate":0,"index":5571},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387346,"byte_end":387358,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ContractInfo","qualname":"::query::wasm::WasmQuery::ContractInfo","value":"WasmQuery::ContractInfo { contract_addr }","parent":{"krate":0,"index":5564},"children":[],"decl_id":null,"docs":" returns a ContractInfoResponse with metadata on the contract from the runtime\n","sig":null,"attributes":[{"value":"/ returns a ContractInfoResponse with metadata on the contract from the runtime","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387260,"byte_end":387341,"line_start":25,"line_end":25,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":5564},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":386607,"byte_end":386616,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"WasmQuery","qualname":"::query::wasm::WasmQuery","value":"pub enum WasmQuery {\n    Smart {\n            contract_addr: String,\n            msg: Binary,\n        },\n    Raw {\n            contract_addr: String,\n            key: Binary,\n        },\n    ContractInfo {\n            contract_addr: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":5565},{"krate":0,"index":5568},{"krate":0,"index":5571}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":386473,"byte_end":386490,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":386562,"byte_end":386597,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5573},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387489,"byte_end":387509,"line_start":31,"line_end":31,"column_start":12,"column_end":32},"name":"ContractInfoResponse","qualname":"::query::wasm::ContractInfoResponse","value":"ContractInfoResponse { code_id, creator, admin, pinned, ibc_port }","parent":null,"children":[{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387389,"byte_end":387406,"line_start":29,"line_end":29,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5574},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387520,"byte_end":387527,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"code_id","qualname":"::query::wasm::ContractInfoResponse::code_id","value":"u64","parent":{"krate":0,"index":5573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5575},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387590,"byte_end":387597,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"creator","qualname":"::query::wasm::ContractInfoResponse::creator","value":"std::string::String","parent":{"krate":0,"index":5573},"children":[],"decl_id":null,"docs":" address that instantiated this contract\n","sig":null,"attributes":[{"value":"/ address that instantiated this contract","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387538,"byte_end":387581,"line_start":33,"line_end":33,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5576},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387661,"byte_end":387666,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"admin","qualname":"::query::wasm::ContractInfoResponse::admin","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5573},"children":[],"decl_id":null,"docs":" admin who can run migrations (if any)\n","sig":null,"attributes":[{"value":"/ admin who can run migrations (if any)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387611,"byte_end":387652,"line_start":35,"line_end":35,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5577},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387780,"byte_end":387786,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"pinned","qualname":"::query::wasm::ContractInfoResponse::pinned","value":"bool","parent":{"krate":0,"index":5573},"children":[],"decl_id":null,"docs":" if set, the contract is pinned to the cache, and thus uses less gas when called\n","sig":null,"attributes":[{"value":"/ if set, the contract is pinned to the cache, and thus uses less gas when called","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387688,"byte_end":387771,"line_start":37,"line_end":37,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":5578},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387853,"byte_end":387861,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"name":"ibc_port","qualname":"::query::wasm::ContractInfoResponse::ibc_port","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5573},"children":[],"decl_id":null,"docs":" set if this contract has bound an IBC port\n","sig":null,"attributes":[{"value":"/ set if this contract has bound an IBC port","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387798,"byte_end":387844,"line_start":39,"line_end":39,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387990,"byte_end":387993,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<ContractInfoResponse>::new","value":"pub fn new<impl Into<String>: Into<String>>(u64, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor for tests / mocks\n","sig":null,"attributes":[{"value":"/ Convenience constructor for tests / mocks","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387914,"byte_end":387959,"line_start":44,"line_end":44,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5716},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":377058,"byte_end":377062,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Bank","qualname":"::query::QueryRequest::Bank","value":"QueryRequest::Bank(BankQuery)","parent":{"krate":0,"index":5714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5719},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":377079,"byte_end":377085,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Custom","qualname":"::query::QueryRequest::Custom","value":"QueryRequest::Custom(C)","parent":{"krate":0,"index":5714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5722},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":377975,"byte_end":377979,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::query::QueryRequest::Wasm","value":"QueryRequest::Wasm(WasmQuery)","parent":{"krate":0,"index":5714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5714},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":377036,"byte_end":377048,"line_start":26,"line_end":26,"column_start":10,"column_end":22},"name":"QueryRequest","qualname":"::query::QueryRequest","value":"pub enum QueryRequest<C> { Bank(BankQuery), Custom(C), Wasm(WasmQuery), }","parent":null,"children":[{"krate":0,"index":5716},{"krate":0,"index":5719},{"krate":0,"index":5722}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":376902,"byte_end":376919,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":376991,"byte_end":377026,"line_start":25,"line_end":25,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1884},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378595,"byte_end":378606,"line_start":67,"line_end":67,"column_start":11,"column_end":22},"name":"CustomQuery","qualname":"::query::CustomQuery","value":"CustomQuery: Serialize + Clone","parent":null,"children":[],"decl_id":null,"docs":" A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery\n in generic implementations.\n You need to implement it in your custom query type.","sig":null,"attributes":[{"value":"/ A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":377995,"byte_end":378094,"line_start":48,"line_end":48,"column_start":1,"column_end":100}},{"value":"/ in generic implementations.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378095,"byte_end":378126,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ You need to implement it in your custom query type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378127,"byte_end":378182,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378183,"byte_end":378186,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378187,"byte_end":378201,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378202,"byte_end":378205,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378206,"byte_end":378213,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::CustomQuery;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378214,"byte_end":378250,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/ # use schemars::JsonSchema;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378251,"byte_end":378282,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378283,"byte_end":378325,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ #[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378326,"byte_end":378400,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ #[serde(rename_all = \"snake_case\")]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378401,"byte_end":378440,"line_start":59,"line_end":59,"column_start":1,"column_end":40}},{"value":"/ pub enum MyCustomQuery {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378441,"byte_end":378469,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/     Ping {},","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378470,"byte_end":378486,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/     Capitalized { text: String },","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378487,"byte_end":378524,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378525,"byte_end":378530,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378531,"byte_end":378534,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ impl CustomQuery for MyCustomQuery {}","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378535,"byte_end":378576,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378577,"byte_end":378584,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5793},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390393,"byte_end":390395,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::contract_result::ContractResult::Ok","value":"ContractResult::Ok(S)","parent":{"krate":0,"index":5791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5796},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390613,"byte_end":390616,"line_start":39,"line_end":39,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::contract_result::ContractResult::Err","value":"ContractResult::Err(String)","parent":{"krate":0,"index":5791},"children":[],"decl_id":null,"docs":" An error type that every custom error created by contract developers can be converted to.\n This could potientially have more structure, but String is the easiest.\n","sig":null,"attributes":[{"value":"/ An error type that every custom error created by contract developers can be converted to.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390404,"byte_end":390497,"line_start":36,"line_end":36,"column_start":5,"column_end":98}},{"value":"/ This could potientially have more structure, but String is the easiest.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390502,"byte_end":390577,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"serde(rename = \"error\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390582,"byte_end":390608,"line_start":38,"line_end":38,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":5791},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390369,"byte_end":390383,"line_start":34,"line_end":34,"column_start":10,"column_end":24},"name":"ContractResult","qualname":"::results::contract_result::ContractResult","value":"pub enum ContractResult<S> { Ok(S), Err(String), }","parent":null,"children":[{"krate":0,"index":5793},{"krate":0,"index":5796}],"decl_id":null,"docs":" This is the final result type that is created and serialized in a contract for\n every init/execute/migrate call. The VM then deserializes this type to distinguish\n between successful and failed executions.","sig":null,"attributes":[{"value":"/ This is the final result type that is created and serialized in a contract for","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389111,"byte_end":389193,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ every init/execute/migrate call. The VM then deserializes this type to distinguish","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389194,"byte_end":389280,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/ between successful and failed executions.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389281,"byte_end":389326,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389327,"byte_end":389330,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389331,"byte_end":389415,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389416,"byte_end":389503,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389504,"byte_end":389589,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389590,"byte_end":389593,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389594,"byte_end":389608,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389609,"byte_end":389612,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389613,"byte_end":389625,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389626,"byte_end":389629,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389630,"byte_end":389637,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, Response};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389638,"byte_end":389697,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/ let response: Response = Response::default();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389698,"byte_end":389747,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ let result: ContractResult<Response> = ContractResult::Ok(response);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389748,"byte_end":389820,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"messages\":[],\"attributes\":[],\"events\":[],\"data\":null}}\"#);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389821,"byte_end":389932,"line_start":21,"line_end":21,"column_start":1,"column_end":112}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389933,"byte_end":389940,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389941,"byte_end":389944,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389945,"byte_end":389957,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389958,"byte_end":389961,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389962,"byte_end":389969,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, Response};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":389970,"byte_end":390029,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ let error_msg = String::from(\"Something went wrong\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390030,"byte_end":390087,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ let result: ContractResult<Response> = ContractResult::Err(error_msg);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390088,"byte_end":390162,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390163,"byte_end":390244,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390245,"byte_end":390252,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390324,"byte_end":390359,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390918,"byte_end":390929,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ContractResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390788,"byte_end":390867,"line_start":45,"line_end":45,"column_start":5,"column_end":84}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390872,"byte_end":390906,"line_start":46,"line_end":46,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391017,"byte_end":391023,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ContractResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391091,"byte_end":391096,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<ContractResult<S>>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391178,"byte_end":391184,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"is_err","qualname":"<ContractResult<S>>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391309,"byte_end":391319,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<ContractResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1955},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395847,"byte_end":395856,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"CustomMsg","qualname":"::results::cosmos_msg::CustomMsg","value":"CustomMsg: Serialize + Clone + fmt::Debug + PartialEq + JsonSchema","parent":null,"children":[],"decl_id":null,"docs":" Like CustomQuery for better type clarity.\n Also makes it shorter to use as a trait bound.\n","sig":null,"attributes":[{"value":"/ Like CustomQuery for better type clarity.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395740,"byte_end":395785,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ Also makes it shorter to use as a trait bound.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395786,"byte_end":395836,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5869},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":396210,"byte_end":396214,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Bank","qualname":"::results::cosmos_msg::CosmosMsg::Bank","value":"CosmosMsg::Bank(BankMsg)","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5872},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":396361,"byte_end":396367,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Custom","qualname":"::results::cosmos_msg::CosmosMsg::Custom","value":"CosmosMsg::Custom(T)","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5875},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":396993,"byte_end":396997,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::results::cosmos_msg::CosmosMsg::Wasm","value":"CosmosMsg::Wasm(WasmMsg)","parent":{"krate":0,"index":5867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5867},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":396183,"byte_end":396192,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"CosmosMsg","qualname":"::results::cosmos_msg::CosmosMsg","value":"pub enum CosmosMsg<T = Empty> { Bank(BankMsg), Custom(T), Wasm(WasmMsg), }","parent":null,"children":[{"krate":0,"index":5869},{"krate":0,"index":5872},{"krate":0,"index":5875}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395947,"byte_end":395964,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":396036,"byte_end":396071,"line_start":22,"line_end":22,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6006},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397645,"byte_end":397649,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"Send","qualname":"::results::cosmos_msg::BankMsg::Send","value":"BankMsg::Send { to_address, amount }","parent":{"krate":0,"index":6005},"children":[],"decl_id":null,"docs":" Sends native tokens from the contract to the given address.","sig":null,"attributes":[{"value":"/ Sends native tokens from the contract to the given address.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397348,"byte_end":397411,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397416,"byte_end":397419,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgSend](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto#L19-L28).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397424,"byte_end":397556,"line_start":56,"line_end":56,"column_start":5,"column_end":137}},{"value":"/ `from_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397561,"byte_end":397640,"line_start":57,"line_end":57,"column_start":5,"column_end":84}}]},{"kind":"StructVariant","id":{"krate":0,"index":6009},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397980,"byte_end":397984,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Burn","qualname":"::results::cosmos_msg::BankMsg::Burn","value":"BankMsg::Burn { amount }","parent":{"krate":0,"index":6005},"children":[],"decl_id":null,"docs":" This will burn the given coins from the contract's account.\n There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper.\n Important if a contract controls significant token supply that must be retired.\n","sig":null,"attributes":[{"value":"/ This will burn the given coins from the contract's account.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397718,"byte_end":397781,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397786,"byte_end":397887,"line_start":63,"line_end":63,"column_start":5,"column_end":106}},{"value":"/ Important if a contract controls significant token supply that must be retired.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397892,"byte_end":397975,"line_start":64,"line_end":64,"column_start":5,"column_end":88}}]},{"kind":"Enum","id":{"krate":0,"index":6005},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397334,"byte_end":397341,"line_start":53,"line_end":53,"column_start":10,"column_end":17},"name":"BankMsg","qualname":"::results::cosmos_msg::BankMsg","value":"pub enum BankMsg {\n    Send {\n            to_address: String,\n            amount: Vec<Coin>,\n        },\n    Burn {\n            amount: Vec<Coin>,\n        },\n}","parent":null,"children":[{"krate":0,"index":6006},{"krate":0,"index":6009}],"decl_id":null,"docs":" The message types of the bank module.","sig":null,"attributes":[{"value":"/ The message types of the bank module.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397061,"byte_end":397102,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397103,"byte_end":397106,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397107,"byte_end":397199,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397200,"byte_end":397217,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":397289,"byte_end":397324,"line_start":52,"line_end":52,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6263},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400877,"byte_end":400884,"line_start":124,"line_end":124,"column_start":5,"column_end":12},"name":"Execute","qualname":"::results::cosmos_msg::WasmMsg::Execute","value":"WasmMsg::Execute { contract_addr, msg, funds }","parent":{"krate":0,"index":6262},"children":[],"decl_id":null,"docs":" Dispatches a call to another contract at a known address (with known ABI).","sig":null,"attributes":[{"value":"/ Dispatches a call to another contract at a known address (with known ABI).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400567,"byte_end":400645,"line_start":120,"line_end":120,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400650,"byte_end":400653,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgExecuteContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L68-L78).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400658,"byte_end":400794,"line_start":122,"line_end":122,"column_start":5,"column_end":141}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400799,"byte_end":400872,"line_start":123,"line_end":123,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6267},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401357,"byte_end":401368,"line_start":134,"line_end":134,"column_start":5,"column_end":16},"name":"Instantiate","qualname":"::results::cosmos_msg::WasmMsg::Instantiate","value":"WasmMsg::Instantiate { admin, code_id, msg, funds, label }","parent":{"krate":0,"index":6262},"children":[],"decl_id":null,"docs":" Instantiates a new contracts from previously uploaded Wasm code.","sig":null,"attributes":[{"value":"/ Instantiates a new contracts from previously uploaded Wasm code.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401046,"byte_end":401114,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401119,"byte_end":401122,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgInstantiateContract](https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha1/x/wasm/internal/types/tx.proto#L47-L61).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401127,"byte_end":401274,"line_start":132,"line_end":132,"column_start":5,"column_end":152}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401279,"byte_end":401352,"line_start":133,"line_end":133,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6273},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":402076,"byte_end":402083,"line_start":150,"line_end":150,"column_start":5,"column_end":12},"name":"Migrate","qualname":"::results::cosmos_msg::WasmMsg::Migrate","value":"WasmMsg::Migrate { contract_addr, new_code_id, msg }","parent":{"krate":0,"index":6262},"children":[],"decl_id":null,"docs":" Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to\n customize behavior.","sig":null,"attributes":[{"value":"/ Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401631,"byte_end":401718,"line_start":143,"line_end":143,"column_start":5,"column_end":92}},{"value":"/ customize behavior.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401723,"byte_end":401746,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401751,"byte_end":401754,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Only the contract admin (as defined in wasmd), if any, is able to make this call.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401759,"byte_end":401844,"line_start":146,"line_end":146,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401849,"byte_end":401852,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgMigrateContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L86-L96).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401857,"byte_end":401993,"line_start":148,"line_end":148,"column_start":5,"column_end":141}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":401998,"byte_end":402071,"line_start":149,"line_end":149,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6277},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":402477,"byte_end":402488,"line_start":159,"line_end":159,"column_start":5,"column_end":16},"name":"UpdateAdmin","qualname":"::results::cosmos_msg::WasmMsg::UpdateAdmin","value":"WasmMsg::UpdateAdmin { contract_addr, admin }","parent":{"krate":0,"index":6262},"children":[],"decl_id":null,"docs":" Sets a new admin (for migrate) on the given contract.\n Fails if this contract is not currently admin of the target contract.\n","sig":null,"attributes":[{"value":"/ Sets a new admin (for migrate) on the given contract.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":402337,"byte_end":402394,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/ Fails if this contract is not currently admin of the target contract.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":402399,"byte_end":402472,"line_start":158,"line_end":158,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":6280},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":402713,"byte_end":402723,"line_start":165,"line_end":165,"column_start":5,"column_end":15},"name":"ClearAdmin","qualname":"::results::cosmos_msg::WasmMsg::ClearAdmin","value":"WasmMsg::ClearAdmin { contract_addr }","parent":{"krate":0,"index":6262},"children":[],"decl_id":null,"docs":" Clears the admin on the given contract, so no more migration possible.\n Fails if this contract is not currently admin of the target contract.\n","sig":null,"attributes":[{"value":"/ Clears the admin on the given contract, so no more migration possible.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":402556,"byte_end":402630,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ Fails if this contract is not currently admin of the target contract.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":402635,"byte_end":402708,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6262},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400553,"byte_end":400560,"line_start":119,"line_end":119,"column_start":10,"column_end":17},"name":"WasmMsg","qualname":"::results::cosmos_msg::WasmMsg","value":"pub enum WasmMsg {\n    Execute {\n            contract_addr: String,\n            msg: Binary,\n            funds: Vec<Coin>,\n        },\n    Instantiate {\n            admin: Option<String>,\n            code_id: u64,\n            msg: Binary,\n            funds: Vec<Coin>,\n            label: String,\n        },\n    Migrate {\n            contract_addr: String,\n            new_code_id: u64,\n            msg: Binary,\n        },\n    UpdateAdmin {\n            contract_addr: String,\n            admin: String,\n        },\n    ClearAdmin {\n            contract_addr: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":6263},{"krate":0,"index":6267},{"krate":0,"index":6273},{"krate":0,"index":6277},{"krate":0,"index":6280}],"decl_id":null,"docs":" The message types of the wasm module.","sig":null,"attributes":[{"value":"/ The message types of the wasm module.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400287,"byte_end":400328,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400329,"byte_end":400332,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400333,"byte_end":400418,"line_start":115,"line_end":115,"column_start":1,"column_end":86}},{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400419,"byte_end":400436,"line_start":116,"line_end":116,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":400508,"byte_end":400543,"line_start":118,"line_end":118,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1957},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":403577,"byte_end":403593,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"wasm_instantiate","qualname":"::results::cosmos_msg::wasm_instantiate","value":"pub fn wasm_instantiate<impl Serialize: Serialize>(u64, &impl Serialize,\nVec<Coin>, String) -> StdResult<WasmMsg>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code.","sig":null,"attributes":[{"value":"/ Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":403358,"byte_end":403460,"line_start":186,"line_end":186,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":403461,"byte_end":403464,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ When using this, `admin` is always unset. If you need more flexibility, create the message directly.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":403465,"byte_end":403569,"line_start":188,"line_end":188,"column_start":1,"column_end":105}}]},{"kind":"Function","id":{"krate":0,"index":1959},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":403980,"byte_end":403992,"line_start":206,"line_end":206,"column_start":8,"column_end":20},"name":"wasm_execute","qualname":"::results::cosmos_msg::wasm_execute","value":"pub fn wasm_execute<impl Into<String>: Into<String>,\nimpl Serialize: Serialize>(impl Into<String>, &impl Serialize, Vec<Coin>)\n-> StdResult<WasmMsg>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code\n","sig":null,"attributes":[{"value":"/ Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":403871,"byte_end":403972,"line_start":205,"line_end":205,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":6282},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/empty.rs","byte_start":406083,"byte_end":406088,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::results::empty::Empty","value":"Empty {  }","parent":null,"children":[],"decl_id":null,"docs":" An empty struct that serves as a placeholder in different places,\n such as contracts that don't set a custom message.","sig":null,"attributes":[{"value":"/ An empty struct that serves as a placeholder in different places,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/empty.rs","byte_start":405613,"byte_end":405682,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ such as contracts that don't set a custom message.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/empty.rs","byte_start":405683,"byte_end":405737,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/empty.rs","byte_start":405738,"byte_end":405741,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is designed to be expressable in correct JSON and JSON Schema but","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/empty.rs","byte_start":405742,"byte_end":405814,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ contains no meaningful data. Previously we used enums without cases,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/empty.rs","byte_start":405815,"byte_end":405887,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/empty.rs","byte_start":405888,"byte_end":405991,"line_start":9,"line_end":9,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":6341},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407426,"byte_end":407431,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Event","qualname":"::results::events::Event","value":"Event { ty, attributes }","parent":null,"children":[{"krate":0,"index":6404},{"krate":0,"index":6342}],"decl_id":null,"docs":" A full [*Cosmos SDK* event].","sig":null,"attributes":[{"value":"/ A full [*Cosmos SDK* event].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":406826,"byte_end":406858,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":406859,"byte_end":406862,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This version uses string attributes (similar to [*Cosmos SDK* StringEvent]),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":406863,"byte_end":406943,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ which then get magically converted to bytes for Tendermint somewhere between","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":406944,"byte_end":407024,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ the Rust-Go interface, JSON deserialization and the `NewEvent` call in Cosmos SDK.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407025,"byte_end":407111,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407112,"byte_end":407115,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [*Cosmos SDK* event]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407116,"byte_end":407193,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ [*Cosmos SDK* StringEvent]: https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/base/abci/v1beta1/abci.proto#L56-L70","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407194,"byte_end":407325,"line_start":11,"line_end":11,"column_start":1,"column_end":132}},{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407397,"byte_end":407414,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":6404},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407577,"byte_end":407579,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"ty","qualname":"::results::events::Event::ty","value":"std::string::String","parent":{"krate":0,"index":6341},"children":[],"decl_id":null,"docs":" The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.\n","sig":null,"attributes":[{"value":"/ The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407438,"byte_end":407538,"line_start":15,"line_end":15,"column_start":5,"column_end":105}},{"value":"serde(rename = \"type\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407543,"byte_end":407568,"line_start":16,"line_end":16,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6342},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407811,"byte_end":407821,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::events::Event::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":6341},"children":[],"decl_id":null,"docs":" The attributes to be included in the event.","sig":null,"attributes":[{"value":"/ The attributes to be included in the event.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407593,"byte_end":407640,"line_start":18,"line_end":18,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407645,"byte_end":407648,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ You can learn more about these from [*Cosmos SDK* docs].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407653,"byte_end":407713,"line_start":20,"line_end":20,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407718,"byte_end":407721,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407726,"byte_end":407802,"line_start":22,"line_end":22,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407946,"byte_end":407949,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new event with the given type and an empty list of attributes.\n","sig":null,"attributes":[{"value":"/ Create a new event with the given type and an empty list of attributes.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407859,"byte_end":407934,"line_start":27,"line_end":27,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408141,"byte_end":408154,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Event>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(Self, impl Into<String>, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute to the event.\n","sig":null,"attributes":[{"value":"/ Add an attribute to the event.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408095,"byte_end":408129,"line_start":35,"line_end":35,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408558,"byte_end":408572,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<Event>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\nimpl IntoIterator<Item = A>: IntoIterator<Item =\nA>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes to the event.","sig":null,"attributes":[{"value":"/ Bulk add attributes to the event.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408364,"byte_end":408401,"line_start":44,"line_end":44,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408406,"byte_end":408409,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408414,"byte_end":408483,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408488,"byte_end":408546,"line_start":47,"line_end":47,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":6405},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408927,"byte_end":408936,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::results::events::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":6406},{"krate":0,"index":6407}],"decl_id":null,"docs":" An key value pair that is used in the context of event attributes in logs\n","sig":null,"attributes":[{"value":"/ An key value pair that is used in the context of event attributes in logs","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408758,"byte_end":408835,"line_start":57,"line_end":57,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":6406},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408947,"byte_end":408950,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"key","qualname":"::results::events::Attribute::key","value":"std::string::String","parent":{"krate":0,"index":6405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6407},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408968,"byte_end":408973,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"value","qualname":"::results::events::Attribute::value","value":"std::string::String","parent":{"krate":0,"index":6405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":409081,"byte_end":409084,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"pub fn new<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(impl Into<String>, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute. `attr` is just an alias for this.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute. `attr` is just an alias for this.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":409007,"byte_end":409069,"line_start":65,"line_end":65,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":2027},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":410643,"byte_end":410647,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"attr","qualname":"::results::events::attr","value":"pub fn attr<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(impl Into<String>, impl Into<String>)\n-> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute. `Attribute::new` is an alias for this.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute. `Attribute::new` is an alias for this.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":410558,"byte_end":410625,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":410626,"byte_end":410635,"line_start":127,"line_end":127,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":2034},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/query.rs","byte_start":411768,"byte_end":411781,"line_start":3,"line_end":3,"column_start":10,"column_end":23},"name":"QueryResponse","qualname":"::results::query::QueryResponse","value":"Binary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6471},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413520,"byte_end":413528,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"Response","qualname":"::results::response::Response","value":"Response { messages, attributes, events, data }","parent":null,"children":[{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6475},{"krate":0,"index":6476}],"decl_id":null,"docs":" A response of a contract entry point, such as `instantiate`, `execute` or `migrate`.","sig":null,"attributes":[{"value":"/ A response of a contract entry point, such as `instantiate`, `execute` or `migrate`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":411935,"byte_end":412023,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412024,"byte_end":412027,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type can be constructed directly at the end of the call. Alternatively a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412028,"byte_end":412109,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ mutable response instance can be created early in the contract's logic and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412110,"byte_end":412188,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ incrementally be updated.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412189,"byte_end":412218,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412219,"byte_end":412222,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412223,"byte_end":412238,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412239,"byte_end":412242,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Direct:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412243,"byte_end":412254,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412255,"byte_end":412258,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412259,"byte_end":412266,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{Binary, DepsMut, Env, MessageInfo};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412267,"byte_end":412327,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ # type InstantiateMsg = ();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412328,"byte_end":412359,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412360,"byte_end":412365,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use cosmwasm_std::{attr, Response, StdResult};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412366,"byte_end":412416,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412417,"byte_end":412420,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ pub fn instantiate(","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412421,"byte_end":412444,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     deps: DepsMut,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412445,"byte_end":412467,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/     _env: Env,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412468,"byte_end":412486,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/     _info: MessageInfo,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412487,"byte_end":412514,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/     msg: InstantiateMsg,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412515,"byte_end":412543,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ ) -> StdResult<Response> {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412544,"byte_end":412574,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412575,"byte_end":412589,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412590,"byte_end":412593,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     Ok(Response::new().add_attribute(\"action\", \"instantiate\"))","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412594,"byte_end":412660,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412661,"byte_end":412666,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412667,"byte_end":412674,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412675,"byte_end":412678,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Mutating:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412679,"byte_end":412692,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412693,"byte_end":412696,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412697,"byte_end":412704,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, Binary, DepsMut, Env, MessageInfo, SubMsg};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412705,"byte_end":412789,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ # type InstantiateMsg = ();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412790,"byte_end":412821,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ # type MyError = ();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412822,"byte_end":412846,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412847,"byte_end":412852,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ use cosmwasm_std::Response;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412853,"byte_end":412884,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412885,"byte_end":412888,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ pub fn instantiate(","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412889,"byte_end":412912,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/     deps: DepsMut,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412913,"byte_end":412935,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/     _env: Env,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412936,"byte_end":412954,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/     info: MessageInfo,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412955,"byte_end":412981,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/     msg: InstantiateMsg,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":412982,"byte_end":413010,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ ) -> Result<Response, MyError> {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413011,"byte_end":413047,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/     let mut response = Response::new()","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413048,"byte_end":413090,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         .add_attribute(\"Let the\", \"hacking begin\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413091,"byte_end":413145,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/         .add_message(BankMsg::Send {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413146,"byte_end":413186,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/             to_address: String::from(\"recipient\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413187,"byte_end":413241,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/             amount: coins(128, \"uint\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413242,"byte_end":413285,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/         })","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413286,"byte_end":413300,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/         .add_attribute(\"foo\", \"bar\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413301,"byte_end":413341,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/         .set_data(b\"the result data\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413342,"byte_end":413384,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     Ok(response)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413385,"byte_end":413405,"line_start":59,"line_end":59,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413406,"byte_end":413411,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413412,"byte_end":413419,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"non_exhaustive","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413491,"byte_end":413508,"line_start":63,"line_end":63,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":6473},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413941,"byte_end":413949,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"name":"messages","qualname":"::results::response::Response::messages","value":"std::vec::Vec<results::submessages::SubMsg<T>>","parent":{"krate":0,"index":6471},"children":[],"decl_id":null,"docs":" Optional list of messages to pass. These will be executed in order.\n If the ReplyOn variant matches the result (Always, Success on Ok, Error on Err),\n the runtime will invoke this contract's `reply` entry point\n after execution. Otherwise, they act like \"fire and forget\".\n Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.\n","sig":null,"attributes":[{"value":"/ Optional list of messages to pass. These will be executed in order.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413546,"byte_end":413617,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ If the ReplyOn variant matches the result (Always, Success on Ok, Error on Err),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413622,"byte_end":413706,"line_start":66,"line_end":66,"column_start":5,"column_end":89}},{"value":"/ the runtime will invoke this contract's `reply` entry point","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413711,"byte_end":413774,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/ after execution. Otherwise, they act like \"fire and forget\".","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413779,"byte_end":413843,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/ Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413848,"byte_end":413932,"line_start":69,"line_end":69,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":6474},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414234,"byte_end":414244,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::response::Response::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":6471},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event.","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":413971,"byte_end":414037,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414042,"byte_end":414045,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ More info about events (and their attributes) can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414050,"byte_end":414136,"line_start":73,"line_end":73,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414141,"byte_end":414144,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414149,"byte_end":414225,"line_start":75,"line_end":75,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":6475},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414554,"byte_end":414560,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"events","qualname":"::results::response::Response::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":6471},"children":[],"decl_id":null,"docs":" Extra, custom events separate from the main `wasm` one. These will have\n `wasm-` prepended to the type.","sig":null,"attributes":[{"value":"/ Extra, custom events separate from the main `wasm` one. These will have","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414266,"byte_end":414341,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ `wasm-` prepended to the type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414346,"byte_end":414380,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414385,"byte_end":414388,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ More info about events can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414393,"byte_end":414456,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414461,"byte_end":414464,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414469,"byte_end":414545,"line_start":82,"line_end":82,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":6476},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414637,"byte_end":414641,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"name":"data","qualname":"::results::response::Response::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":6471},"children":[],"decl_id":null,"docs":" The binary payload to include in the response.\n","sig":null,"attributes":[{"value":"/ The binary payload to include in the response.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414578,"byte_end":414628,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414908,"byte_end":414911,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415145,"byte_end":415158,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Response<T>>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(Self, impl Into<String>, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Add an attribute included in the main `wasm` event.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414959,"byte_end":415014,"line_start":104,"line_end":104,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415019,"byte_end":415022,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ For working with optional values or optional attributes, see [`add_attributes`][Self::add_attributes].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415027,"byte_end":415133,"line_start":106,"line_end":106,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415461,"byte_end":415472,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"add_message","qualname":"<Response<T>>::add_message","value":"pub fn add_message<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(Self,\nimpl Into<CosmosMsg<T>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415311,"byte_end":415393,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415398,"byte_end":415449,"line_start":113,"line_end":113,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415729,"byte_end":415743,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"add_submessage","qualname":"<Response<T>>::add_submessage","value":"pub fn add_submessage(Self, SubMsg<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This takes an explicit SubMsg (creates via eg. `reply_on_error`)\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This takes an explicit SubMsg (creates via eg. `reply_on_error`)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415593,"byte_end":415661,"line_start":119,"line_end":119,"column_start":5,"column_end":73}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415666,"byte_end":415717,"line_start":120,"line_end":120,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416063,"byte_end":416072,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"add_event","qualname":"<Response<T>>::add_event","value":"pub fn add_event(Self, Event) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra event to the response, separate from the main `wasm` event\n that is always created.","sig":null,"attributes":[{"value":"/ Adds an extra event to the response, separate from the main `wasm` event","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415837,"byte_end":415913,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ that is always created.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415918,"byte_end":415945,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415950,"byte_end":415953,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided type","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":415958,"byte_end":416033,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ of event.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416038,"byte_end":416051,"line_start":130,"line_end":130,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417686,"byte_end":417700,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<Response<T>>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\nimpl IntoIterator<Item = A>: IntoIterator<Item =\nA>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add attributes included in the main `wasm` event.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416164,"byte_end":416222,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416227,"byte_end":416230,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416235,"byte_end":416304,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416309,"byte_end":416367,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416372,"byte_end":416375,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416380,"byte_end":416395,"line_start":141,"line_end":141,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416400,"byte_end":416403,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Adding a list of attributes using the pair notation for key and value:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416408,"byte_end":416482,"line_start":143,"line_end":143,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416487,"byte_end":416490,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416495,"byte_end":416502,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Response;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416507,"byte_end":416538,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416543,"byte_end":416546,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let attrs = vec![","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416551,"byte_end":416572,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/     (\"action\", \"reaction\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416577,"byte_end":416608,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/     (\"answer\", \"42\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416613,"byte_end":416638,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/     (\"another\", \"attribute\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416643,"byte_end":416676,"line_start":151,"line_end":151,"column_start":5,"column_end":38}},{"value":"/ ];","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416681,"byte_end":416687,"line_start":152,"line_end":152,"column_start":5,"column_end":11}},{"value":"/ let res: Response = Response::new().add_attributes(attrs.clone());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416692,"byte_end":416762,"line_start":153,"line_end":153,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(res.attributes, attrs);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416767,"byte_end":416805,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416810,"byte_end":416817,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416822,"byte_end":416825,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Adding an optional value as an optional attribute by turning it into a list of 0 or 1 elements:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416830,"byte_end":416929,"line_start":157,"line_end":157,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416934,"byte_end":416937,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416942,"byte_end":416949,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{Attribute, Response};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":416954,"byte_end":416998,"line_start":160,"line_end":160,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417003,"byte_end":417006,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ // Some value","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417011,"byte_end":417028,"line_start":162,"line_end":162,"column_start":5,"column_end":22}},{"value":"/ let value: Option<String> = Some(\"sarah\".to_string());","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417033,"byte_end":417091,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/ let attribute: Option<Attribute> = value.map(|v| Attribute::new(\"winner\", v));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417096,"byte_end":417178,"line_start":164,"line_end":164,"column_start":5,"column_end":87}},{"value":"/ let res: Response = Response::new().add_attributes(attribute);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417183,"byte_end":417249,"line_start":165,"line_end":165,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(res.attributes, [Attribute {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417254,"byte_end":417297,"line_start":166,"line_end":166,"column_start":5,"column_end":48}},{"value":"/     key: \"winner\".to_string(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417302,"byte_end":417336,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/     value: \"sarah\".to_string(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417341,"byte_end":417376,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ }]);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417381,"byte_end":417389,"line_start":169,"line_end":169,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417394,"byte_end":417397,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // No value","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417402,"byte_end":417417,"line_start":171,"line_end":171,"column_start":5,"column_end":20}},{"value":"/ let value: Option<String> = None;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417422,"byte_end":417459,"line_start":172,"line_end":172,"column_start":5,"column_end":42}},{"value":"/ let attribute: Option<Attribute> = value.map(|v| Attribute::new(\"winner\", v));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417464,"byte_end":417546,"line_start":173,"line_end":173,"column_start":5,"column_end":87}},{"value":"/ let res: Response = Response::new().add_attributes(attribute);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417551,"byte_end":417617,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(res.attributes.len(), 0);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417622,"byte_end":417662,"line_start":175,"line_end":175,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417667,"byte_end":417674,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418220,"byte_end":418232,"line_start":196,"line_end":196,"column_start":12,"column_end":24},"name":"add_messages","qualname":"<Response<T>>::add_messages","value":"pub fn add_messages<M: Into<CosmosMsg<T>>,\nimpl IntoIterator<Item = M>: IntoIterator<Item =\nM>>(Self, impl IntoIterator<Item = M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add \"fire and forget\" messages to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add \"fire and forget\" messages to the list of messages to process.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417888,"byte_end":417963,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417968,"byte_end":417971,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417976,"byte_end":417991,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":417996,"byte_end":417999,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418004,"byte_end":418011,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{CosmosMsg, Response};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418016,"byte_end":418060,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418065,"byte_end":418068,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_msgs(msgs: Vec<CosmosMsg>) -> Response {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418073,"byte_end":418139,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/     Response::new().add_messages(msgs)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418144,"byte_end":418186,"line_start":193,"line_end":193,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418191,"byte_end":418196,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418201,"byte_end":418208,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418711,"byte_end":418726,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"add_submessages","qualname":"<Response<T>>::add_submessages","value":"pub fn add_submessages<impl IntoIterator<Item = SubMsg<T>>: IntoIterator<Item\n= SubMsg<T>>>(Self, impl IntoIterator<Item = SubMsg<T>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add explicit SubMsg structs to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add explicit SubMsg structs to the list of messages to process.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418382,"byte_end":418454,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418459,"byte_end":418462,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418467,"byte_end":418482,"line_start":202,"line_end":202,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418487,"byte_end":418490,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418495,"byte_end":418502,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{SubMsg, Response};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418507,"byte_end":418548,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418553,"byte_end":418556,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_submsgs(msgs: Vec<SubMsg>) -> Response {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418561,"byte_end":418627,"line_start":207,"line_end":207,"column_start":5,"column_end":71}},{"value":"/     Response::new().add_submessages(msgs)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418632,"byte_end":418677,"line_start":208,"line_end":208,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418682,"byte_end":418687,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418692,"byte_end":418699,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":419080,"byte_end":419090,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"add_events","qualname":"<Response<T>>::add_events","value":"pub fn add_events<impl IntoIterator<Item = Event>: IntoIterator<Item =\nEvent>>(Self, impl IntoIterator<Item = Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add custom events to the response. These are separate from the main\n `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add custom events to the response. These are separate from the main","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418862,"byte_end":418938,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ `wasm` event.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418943,"byte_end":418960,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418965,"byte_end":418968,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided types","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":418973,"byte_end":419049,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ of events.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":419054,"byte_end":419068,"line_start":220,"line_end":220,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":419285,"byte_end":419293,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Response<T>>::set_data","value":"pub fn set_data<impl Into<Binary>: Into<Binary>>(Self, impl Into<Binary>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the binary data included in the response.\n","sig":null,"attributes":[{"value":"/ Set the binary data included in the response.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":419224,"byte_end":419273,"line_start":226,"line_end":226,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6612},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423273,"byte_end":423279,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Always","qualname":"::results::submessages::ReplyOn::Always","value":"ReplyOn::Always","parent":{"krate":0,"index":6611},"children":[],"decl_id":null,"docs":" Always perform a callback after SubMsg is processed\n","sig":null,"attributes":[{"value":"/ Always perform a callback after SubMsg is processed","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423213,"byte_end":423268,"line_start":14,"line_end":14,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6614},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423364,"byte_end":423369,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Error","qualname":"::results::submessages::ReplyOn::Error","value":"ReplyOn::Error","parent":{"krate":0,"index":6611},"children":[],"decl_id":null,"docs":" Only callback if SubMsg returned an error, no callback on success case\n","sig":null,"attributes":[{"value":"/ Only callback if SubMsg returned an error, no callback on success case","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423285,"byte_end":423359,"line_start":16,"line_end":16,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6616},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423449,"byte_end":423456,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Success","qualname":"::results::submessages::ReplyOn::Success","value":"ReplyOn::Success","parent":{"krate":0,"index":6611},"children":[],"decl_id":null,"docs":" Only callback if SubMsg was successful, no callback on error case\n","sig":null,"attributes":[{"value":"/ Only callback if SubMsg was successful, no callback on error case","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423375,"byte_end":423444,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6618},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423540,"byte_end":423545,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Never","qualname":"::results::submessages::ReplyOn::Never","value":"ReplyOn::Never","parent":{"krate":0,"index":6611},"children":[],"decl_id":null,"docs":" Never make a callback - this is like the original CosmosMsg semantics\n","sig":null,"attributes":[{"value":"/ Never make a callback - this is like the original CosmosMsg semantics","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423462,"byte_end":423535,"line_start":20,"line_end":20,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6611},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423199,"byte_end":423206,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"ReplyOn","qualname":"::results::submessages::ReplyOn","value":"pub enum ReplyOn { Always, Error, Success, Never, }","parent":null,"children":[{"krate":0,"index":6612},{"krate":0,"index":6614},{"krate":0,"index":6616},{"krate":0,"index":6618}],"decl_id":null,"docs":" Use this to define when the contract gets a response callback.\n If you only need it for errors or success you can select just those in order\n to save gas.\n","sig":null,"attributes":[{"value":"/ Use this to define when the contract gets a response callback.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":422918,"byte_end":422984,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ If you only need it for errors or success you can select just those in order","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":422985,"byte_end":423065,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ to save gas.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423066,"byte_end":423082,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423154,"byte_end":423189,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6620},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424065,"byte_end":424071,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"SubMsg","qualname":"::results::submessages::SubMsg","value":"SubMsg { id, msg, gas_limit, reply_on }","parent":null,"children":[{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6625}],"decl_id":null,"docs":" A submessage that will guarantee a `reply` call on success or error, depending on\n the `reply_on` setting. If you do not need to process the result, use regular messages instead.","sig":null,"attributes":[{"value":"/ A submessage that will guarantee a `reply` call on success or error, depending on","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423550,"byte_end":423635,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/ the `reply_on` setting. If you do not need to process the result, use regular messages instead.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423636,"byte_end":423735,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423736,"byte_end":423739,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note: On error the submessage execution will revert any partial state changes due to this message,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423740,"byte_end":423842,"line_start":27,"line_end":27,"column_start":1,"column_end":103}},{"value":"/ but not revert any state changes in the calling contract. If this is required, it must be done","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423843,"byte_end":423941,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ manually in the `reply` entry point.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":423942,"byte_end":423982,"line_start":29,"line_end":29,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6622},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424236,"byte_end":424238,"line_start":34,"line_end":34,"column_start":9,"column_end":11},"name":"id","qualname":"::results::submessages::SubMsg::id","value":"u64","parent":{"krate":0,"index":6620},"children":[],"decl_id":null,"docs":" An arbitrary ID chosen by the contract.\n This is typically used to match `Reply`s in the `reply` entry point to the submessage.\n","sig":null,"attributes":[{"value":"/ An arbitrary ID chosen by the contract.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424089,"byte_end":424132,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/ This is typically used to match `Reply`s in the `reply` entry point to the submessage.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424137,"byte_end":424227,"line_start":33,"line_end":33,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":6623},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424253,"byte_end":424256,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"name":"msg","qualname":"::results::submessages::SubMsg::msg","value":"results::cosmos_msg::CosmosMsg<T>","parent":{"krate":0,"index":6620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6624},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424280,"byte_end":424289,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"name":"gas_limit","qualname":"::results::submessages::SubMsg::gas_limit","value":"std::option::Option<u64>","parent":{"krate":0,"index":6620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6625},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424312,"byte_end":424320,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"reply_on","qualname":"::results::submessages::SubMsg::reply_on","value":"results::submessages::ReplyOn","parent":{"krate":0,"index":6620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424556,"byte_end":424559,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<SubMsg<T>>::new","value":"pub fn new<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" new creates a \"fire and forget\" message with the pre-0.14 semantics\n","sig":null,"attributes":[{"value":"/ new creates a \"fire and forget\" message with the pre-0.14 semantics","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424473,"byte_end":424544,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424872,"byte_end":424888,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"reply_on_success","qualname":"<SubMsg<T>>::reply_on_success","value":"pub fn reply_on_success<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\nu64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will provide a `reply` with the given id if the message returns `Ok`\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will provide a `reply` with the given id if the message returns `Ok`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424765,"byte_end":424860,"line_start":54,"line_end":54,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425114,"byte_end":425128,"line_start":60,"line_end":60,"column_start":12,"column_end":26},"name":"reply_on_error","qualname":"<SubMsg<T>>::reply_on_error","value":"pub fn reply_on_error<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\nu64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will provide a `reply` with the given id if the message returns `Err`\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will provide a `reply` with the given id if the message returns `Err`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425006,"byte_end":425102,"line_start":59,"line_end":59,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425330,"byte_end":425342,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"reply_always","qualname":"<SubMsg<T>>::reply_always","value":"pub fn reply_always<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\nu64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will always provide a `reply` with the given id\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will always provide a `reply` with the given id","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425244,"byte_end":425318,"line_start":64,"line_end":64,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425962,"byte_end":425976,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"with_gas_limit","qualname":"<SubMsg<T>>::with_gas_limit","value":"pub fn with_gas_limit(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a gas limit to the message.","sig":null,"attributes":[{"value":"/ Add a gas limit to the message.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425459,"byte_end":425494,"line_start":69,"line_end":69,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425499,"byte_end":425502,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425507,"byte_end":425522,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425527,"byte_end":425530,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425535,"byte_end":425542,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, ReplyOn, SubMsg};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425547,"byte_end":425605,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"/ # let msg = BankMsg::Send { to_address: String::from(\"you\"), amount: coins(1015, \"earth\") };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425610,"byte_end":425706,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ let sub_msg: SubMsg = SubMsg::reply_always(msg, 1234).with_gas_limit(60_000);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425711,"byte_end":425792,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(sub_msg.id, 1234);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425797,"byte_end":425830,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(sub_msg.gas_limit, Some(60_000));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425835,"byte_end":425883,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(sub_msg.reply_on, ReplyOn::Always);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425888,"byte_end":425938,"line_start":79,"line_end":79,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":425943,"byte_end":425950,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6700},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426491,"byte_end":426496,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"Reply","qualname":"::results::submessages::Reply","value":"Reply { id, result }","parent":null,"children":[{"krate":0,"index":6701},{"krate":0,"index":6702}],"decl_id":null,"docs":" The result object returned to `reply`. We always get the ID from the submessage\n back and then must handle success and error cases ourselves.\n","sig":null,"attributes":[{"value":"/ The result object returned to `reply`. We always get the ID from the submessage","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426260,"byte_end":426343,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/ back and then must handle success and error cases ourselves.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426344,"byte_end":426408,"line_start":97,"line_end":97,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6701},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426641,"byte_end":426643,"line_start":102,"line_end":102,"column_start":9,"column_end":11},"name":"id","qualname":"::results::submessages::Reply::id","value":"u64","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":" The ID that the contract set when emitting the `SubMsg`.\n Use this to identify which submessage triggered the `reply`.\n","sig":null,"attributes":[{"value":"/ The ID that the contract set when emitting the `SubMsg`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426503,"byte_end":426563,"line_start":100,"line_end":100,"column_start":5,"column_end":65}},{"value":"/ Use this to identify which submessage triggered the `reply`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426568,"byte_end":426632,"line_start":101,"line_end":101,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":6702},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426658,"byte_end":426664,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"result","qualname":"::results::submessages::Reply::result","value":"results::submessages::SubMsgResult","parent":{"krate":0,"index":6700},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6822},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428196,"byte_end":428198,"line_start":141,"line_end":141,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::submessages::SubMsgResult::Ok","value":"SubMsgResult::Ok(SubMsgResponse)","parent":{"krate":0,"index":6821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6825},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428429,"byte_end":428432,"line_start":145,"line_end":145,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::submessages::SubMsgResult::Err","value":"SubMsgResult::Err(String)","parent":{"krate":0,"index":6821},"children":[],"decl_id":null,"docs":" An error type that every custom error created by contract developers can be converted to.\n This could potientially have more structure, but String is the easiest.\n","sig":null,"attributes":[{"value":"/ An error type that every custom error created by contract developers can be converted to.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428220,"byte_end":428313,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/ This could potientially have more structure, but String is the easiest.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428318,"byte_end":428393,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"serde(rename = \"error\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428398,"byte_end":428424,"line_start":144,"line_end":144,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":6821},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428177,"byte_end":428189,"line_start":140,"line_end":140,"column_start":10,"column_end":22},"name":"SubMsgResult","qualname":"::results::submessages::SubMsgResult","value":"pub enum SubMsgResult { Ok(SubMsgResponse), Err(String), }","parent":null,"children":[{"krate":0,"index":6822},{"krate":0,"index":6825}],"decl_id":null,"docs":" This is the result type that is returned from a sub message execution.","sig":null,"attributes":[{"value":"/ This is the result type that is returned from a sub message execution.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426683,"byte_end":426757,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426758,"byte_end":426761,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426762,"byte_end":426846,"line_start":108,"line_end":108,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426847,"byte_end":426934,"line_start":109,"line_end":109,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":426935,"byte_end":427020,"line_start":110,"line_end":110,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427021,"byte_end":427024,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Until version 1.0.0-beta5, `ContractResult<SubMsgResponse>` was used instead","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427025,"byte_end":427105,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ of this type. Once serialized, the two types are the same. However, in the Rust type","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427106,"byte_end":427194,"line_start":113,"line_end":113,"column_start":1,"column_end":89}},{"value":"/ system we want different types for clarity and documenation reasons.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427195,"byte_end":427267,"line_start":114,"line_end":114,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427268,"byte_end":427271,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427272,"byte_end":427286,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427287,"byte_end":427290,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427291,"byte_end":427303,"line_start":118,"line_end":118,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427304,"byte_end":427307,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427308,"byte_end":427315,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, Event, SubMsgResponse, SubMsgResult};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427316,"byte_end":427394,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ let response = SubMsgResponse {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427395,"byte_end":427430,"line_start":122,"line_end":122,"column_start":1,"column_end":36}},{"value":"/     data: Some(Binary::from_base64(\"MTIzCg==\").unwrap()),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427431,"byte_end":427492,"line_start":123,"line_end":123,"column_start":1,"column_end":62}},{"value":"/     events: vec![Event::new(\"wasm\").add_attribute(\"fo\", \"ba\")],","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427493,"byte_end":427560,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427561,"byte_end":427567,"line_start":125,"line_end":125,"column_start":1,"column_end":7}},{"value":"/ let result: SubMsgResult = SubMsgResult::Ok(response);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427568,"byte_end":427626,"line_start":126,"line_end":126,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"events\":[{\"type\":\"wasm\",\"attributes\":[{\"key\":\"fo\",\"value\":\"ba\"}]}],\"data\":\"MTIzCg==\"}}\"#);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427627,"byte_end":427770,"line_start":127,"line_end":127,"column_start":1,"column_end":144}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427771,"byte_end":427778,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427779,"byte_end":427782,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427783,"byte_end":427795,"line_start":130,"line_end":130,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427796,"byte_end":427799,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427800,"byte_end":427807,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, SubMsgResult, Response};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427808,"byte_end":427865,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/ let error_msg = String::from(\"Something went wrong\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427866,"byte_end":427923,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ let result = SubMsgResult::Err(error_msg);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427924,"byte_end":427970,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":427971,"byte_end":428052,"line_start":136,"line_end":136,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428053,"byte_end":428060,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428132,"byte_end":428167,"line_start":139,"line_end":139,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428724,"byte_end":428735,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SubMsgResult>::into_result","value":"pub fn into_result(Self) -> Result<SubMsgResponse, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SubMsgResult<S>` to a `Result<S, String>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `SubMsgResult<S>` to a `Result<S, String>` as a convenient way","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428596,"byte_end":428673,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428678,"byte_end":428712,"line_start":152,"line_end":152,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428849,"byte_end":428855,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SubMsgResult>::unwrap","value":"pub fn unwrap(Self) -> SubMsgResponse","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428936,"byte_end":428946,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<SubMsgResult>::unwrap_err","value":"pub fn unwrap_err(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429023,"byte_end":429028,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<SubMsgResult>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429108,"byte_end":429114,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"is_err","qualname":"<SubMsgResult>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6828},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429939,"byte_end":429953,"line_start":195,"line_end":195,"column_start":12,"column_end":26},"name":"SubMsgResponse","qualname":"::results::submessages::SubMsgResponse","value":"SubMsgResponse { events, data }","parent":null,"children":[{"krate":0,"index":6829},{"krate":0,"index":6830}],"decl_id":null,"docs":" The information we get back from a successful sub message execution,\n with full Cosmos SDK events.\n","sig":null,"attributes":[{"value":"/ The information we get back from a successful sub message execution,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429751,"byte_end":429823,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"/ with full Cosmos SDK events.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429824,"byte_end":429856,"line_start":193,"line_end":193,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6829},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429964,"byte_end":429970,"line_start":196,"line_end":196,"column_start":9,"column_end":15},"name":"events","qualname":"::results::submessages::SubMsgResponse::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":6828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6830},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429992,"byte_end":429996,"line_start":197,"line_end":197,"column_start":9,"column_end":13},"name":"data","qualname":"::results::submessages::SubMsgResponse::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":6828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2138},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":430076,"byte_end":430099,"line_start":201,"line_end":201,"column_start":10,"column_end":33},"name":"SubMsgExecutionResponse","qualname":"::results::submessages::SubMsgExecutionResponse","value":"SubMsgResponse","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to SubMsgResponse\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":430017,"byte_end":430066,"line_start":200,"line_end":200,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6960},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437123,"byte_end":437125,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::system_result::SystemResult::Ok","value":"SystemResult::Ok(S)","parent":{"krate":0,"index":6958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6963},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437165,"byte_end":437168,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::system_result::SystemResult::Err","value":"SystemResult::Err(SystemError)","parent":{"krate":0,"index":6958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437134,"byte_end":437160,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":6958},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437101,"byte_end":437113,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"SystemResult","qualname":"::results::system_result::SystemResult","value":"pub enum SystemResult<S> { Ok(S), Err(SystemError), }","parent":null,"children":[{"krate":0,"index":6960},{"krate":0,"index":6963}],"decl_id":null,"docs":" This is the outer result type returned by a querier to the contract.","sig":null,"attributes":[{"value":"/ This is the outer result type returned by a querier to the contract.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436030,"byte_end":436102,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436103,"byte_end":436106,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436107,"byte_end":436191,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436192,"byte_end":436279,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436280,"byte_end":436365,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436366,"byte_end":436369,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436370,"byte_end":436384,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436385,"byte_end":436388,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436389,"byte_end":436401,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436402,"byte_end":436405,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436406,"byte_end":436413,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436414,"byte_end":436485,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ let data = Binary::from(b\"hello, world\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436486,"byte_end":436531,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ let result = SystemResult::Ok(ContractResult::Ok(data));","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436532,"byte_end":436592,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"ok\":\"aGVsbG8sIHdvcmxk\"}}\"#);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436593,"byte_end":436674,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436675,"byte_end":436682,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436683,"byte_end":436686,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436687,"byte_end":436699,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436700,"byte_end":436703,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436704,"byte_end":436711,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult, SystemError};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436712,"byte_end":436796,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/ let error = SystemError::Unknown {};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436797,"byte_end":436837,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ let result: SystemResult<Binary> = SystemResult::Err(error);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436838,"byte_end":436902,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":{\"unknown\":{}}}\"#);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436903,"byte_end":436976,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":436977,"byte_end":436984,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437056,"byte_end":437091,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437478,"byte_end":437489,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SystemResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, SystemError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437343,"byte_end":437427,"line_start":43,"line_end":43,"column_start":5,"column_end":89}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437432,"byte_end":437466,"line_start":44,"line_end":44,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437587,"byte_end":437593,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SystemResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437701,"byte_end":437711,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<SystemResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> SystemError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2261},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/serde.rs","byte_start":446524,"byte_end":446534,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::serde::from_slice","value":"pub fn from_slice<T: DeserializeOwned>(&[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2264},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/serde.rs","byte_start":446691,"byte_end":446702,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"from_binary","qualname":"::serde::from_binary","value":"pub fn from_binary<T: DeserializeOwned>(&Binary) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2266},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/serde.rs","byte_start":446801,"byte_end":446807,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::serde::to_vec","value":"pub fn to_vec<T>(&T) -> StdResult<Vec<u8>> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2269},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/serde.rs","byte_start":446980,"byte_end":446989,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"to_binary","qualname":"::serde::to_binary","value":"pub fn to_binary<T>(&T) -> StdResult<Binary> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6966},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/storage.rs","byte_start":450003,"byte_end":450016,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"MemoryStorage","qualname":"::storage::MemoryStorage","value":"MemoryStorage {  }","parent":null,"children":[{"krate":0,"index":6967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/storage.rs","byte_start":450092,"byte_end":450095,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<MemoryStorage>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6970},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461294,"byte_end":461303,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::timestamp::Timestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" A point in time in nanosecond precision.","sig":null,"attributes":[{"value":"/ A point in time in nanosecond precision.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460640,"byte_end":460684,"line_start":7,"line_end":7,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460685,"byte_end":460688,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460689,"byte_end":460773,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460774,"byte_end":460777,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460778,"byte_end":460793,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460794,"byte_end":460797,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460798,"byte_end":460805,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Timestamp;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460806,"byte_end":460840,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/ let ts = Timestamp::from_nanos(1_000_000_202);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460841,"byte_end":460891,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(ts.nanos(), 1_000_000_202);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460892,"byte_end":460934,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(ts.seconds(), 1);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460935,"byte_end":460967,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.subsec_nanos(), 202);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":460968,"byte_end":461007,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461008,"byte_end":461011,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let ts = ts.plus_seconds(2);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461012,"byte_end":461044,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.nanos(), 3_000_000_202);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461045,"byte_end":461087,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(ts.seconds(), 3);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461088,"byte_end":461120,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.subsec_nanos(), 202);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461121,"byte_end":461160,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461161,"byte_end":461168,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461405,"byte_end":461415,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"name":"from_nanos","qualname":"<Timestamp>::from_nanos","value":"pub const fn from_nanos(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a timestamp from nanoseconds since epoch\n","sig":null,"attributes":[{"value":"/ Creates a timestamp from nanoseconds since epoch","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461335,"byte_end":461387,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461577,"byte_end":461589,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"name":"from_seconds","qualname":"<Timestamp>::from_seconds","value":"pub const fn from_seconds(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a timestamp from seconds since epoch\n","sig":null,"attributes":[{"value":"/ Creates a timestamp from seconds since epoch","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461511,"byte_end":461559,"line_start":36,"line_end":36,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461718,"byte_end":461730,"line_start":41,"line_end":41,"column_start":18,"column_end":30},"name":"plus_seconds","qualname":"<Timestamp>::plus_seconds","value":"pub const fn plus_seconds(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461842,"byte_end":461852,"line_start":45,"line_end":45,"column_start":18,"column_end":28},"name":"plus_nanos","qualname":"<Timestamp>::plus_nanos","value":"pub const fn plus_nanos(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461997,"byte_end":462010,"line_start":50,"line_end":50,"column_start":18,"column_end":31},"name":"minus_seconds","qualname":"<Timestamp>::minus_seconds","value":"pub const fn minus_seconds(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462127,"byte_end":462138,"line_start":54,"line_end":54,"column_start":18,"column_end":29},"name":"minus_nanos","qualname":"<Timestamp>::minus_nanos","value":"pub const fn minus_nanos(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462335,"byte_end":462340,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"nanos","qualname":"<Timestamp>::nanos","value":"pub fn nanos(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns nanoseconds since epoch\n","sig":null,"attributes":[{"value":"/ Returns nanoseconds since epoch","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462274,"byte_end":462309,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462314,"byte_end":462323,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462469,"byte_end":462476,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"seconds","qualname":"<Timestamp>::seconds","value":"pub fn seconds(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns seconds since epoch (truncate nanoseconds)\n","sig":null,"attributes":[{"value":"/ Returns seconds since epoch (truncate nanoseconds)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462389,"byte_end":462443,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462448,"byte_end":462457,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462667,"byte_end":462679,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"subsec_nanos","qualname":"<Timestamp>::subsec_nanos","value":"pub fn subsec_nanos(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns nanoseconds since the last whole second (the remainder truncated\n by `seconds()`)\n","sig":null,"attributes":[{"value":"/ Returns nanoseconds since the last whole second (the remainder truncated","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462541,"byte_end":462617,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ by `seconds()`)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462622,"byte_end":462641,"line_start":72,"line_end":72,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462646,"byte_end":462655,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2430},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":468818,"byte_end":468825,"line_start":24,"line_end":24,"column_start":11,"column_end":18},"name":"Storage","qualname":"::traits::Storage","value":"Storage","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2434},{"krate":0,"index":2435}],"decl_id":null,"docs":" Storage provides read and write access to a persistent storage.\n If you only want to provide read access, provide `&Storage`\n","sig":null,"attributes":[{"value":"/ Storage provides read and write access to a persistent storage.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":468676,"byte_end":468743,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ If you only want to provide read access, provide `&Storage`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":468744,"byte_end":468807,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469131,"byte_end":469134,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"get","qualname":"::traits::Storage::get","value":"pub fn get(&Self, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Returns None when key does not exist.\n Returns Some(Vec<u8>) when key exists.","sig":null,"attributes":[{"value":"/ Returns None when key does not exist.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":468832,"byte_end":468873,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/ Returns Some(Vec<u8>) when key exists.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":468878,"byte_end":468920,"line_start":26,"line_end":26,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":468925,"byte_end":468928,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Note: Support for differentiating between a non-existent key and a key with empty value","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":468933,"byte_end":469024,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ is not great yet and might not be possible in all backends. But we're trying to get there.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469029,"byte_end":469123,"line_start":29,"line_end":29,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469505,"byte_end":469510,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"range","qualname":"::traits::Storage::range","value":"pub fn range<'a>(&'a Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<dyn Iterator<Item = Record> + 'a>","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Allows iteration over a set of key/value pairs, either forwards or backwards.","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469179,"byte_end":469207,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ Allows iteration over a set of key/value pairs, either forwards or backwards.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469212,"byte_end":469293,"line_start":33,"line_end":33,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469298,"byte_end":469301,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The bound `start` is inclusive and `end` is exclusive.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469306,"byte_end":469364,"line_start":35,"line_end":35,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469369,"byte_end":469372,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If `start` is lexicographically greater than or equal to `end`, an empty range is described, mo matter of the order.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469377,"byte_end":469497,"line_start":37,"line_end":37,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469670,"byte_end":469673,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"set","qualname":"::traits::Storage::set","value":"pub fn set(&mut Self, &[u8], &[u8])","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469954,"byte_end":469960,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"remove","qualname":"::traits::Storage::remove","value":"pub fn remove(&mut Self, &[u8])","parent":{"krate":0,"index":2430},"children":[],"decl_id":null,"docs":" Removes a database entry at `key`.","sig":null,"attributes":[{"value":"/ Removes a database entry at `key`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469717,"byte_end":469755,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469760,"byte_end":469763,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The current interface does not allow to differentiate between a key that existed","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469768,"byte_end":469852,"line_start":49,"line_end":49,"column_start":5,"column_end":89}},{"value":"/ before and one that didn't exist. See https://github.com/CosmWasm/cosmwasm/issues/290","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469857,"byte_end":469946,"line_start":50,"line_end":50,"column_start":5,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":2436},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470935,"byte_end":470938,"line_start":68,"line_end":68,"column_start":11,"column_end":14},"name":"Api","qualname":"::traits::Api","value":"Api","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444}],"decl_id":null,"docs":" Api are callbacks to system functions implemented outside of the wasm modules.\n Currently it just supports address conversion but we could add eg. crypto functions here.","sig":null,"attributes":[{"value":"/ Api are callbacks to system functions implemented outside of the wasm modules.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":469988,"byte_end":470070,"line_start":54,"line_end":54,"column_start":1,"column_end":83}},{"value":"/ Currently it just supports address conversion but we could add eg. crypto functions here.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470071,"byte_end":470164,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470165,"byte_end":470168,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is a trait to allow mocks in the test code. Its members have a read-only","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470169,"byte_end":470250,"line_start":57,"line_end":57,"column_start":1,"column_end":82}},{"value":"/ reference to the Api instance to allow accessing configuration.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470251,"byte_end":470318,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"/ Implementations must not have mutable state, such that an instance can freely","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470319,"byte_end":470400,"line_start":59,"line_end":59,"column_start":1,"column_end":82}},{"value":"/ be copied and shared between threads without affecting the behaviour.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470401,"byte_end":470474,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ Given an Api instance, all members should return the same value when called with the same","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470475,"byte_end":470568,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"/ arguments. In particular this means the result must not depend in the state of the chain.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470569,"byte_end":470662,"line_start":62,"line_end":62,"column_start":1,"column_end":94}},{"value":"/ If you need to access chaim state, you probably want to use the Querier.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470663,"byte_end":470739,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ Side effects (such as logging) are allowed.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470740,"byte_end":470787,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470788,"byte_end":470791,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ We can use feature flags to opt-in to non-essential methods","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470792,"byte_end":470855,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/ for backwards compatibility in systems that don't have them all.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470856,"byte_end":470924,"line_start":67,"line_end":67,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472099,"byte_end":472112,"line_start":92,"line_end":92,"column_start":8,"column_end":21},"name":"addr_validate","qualname":"::traits::Api::addr_validate","value":"pub fn addr_validate(&Self, &str) -> StdResult<Addr>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" Takes a human readable address and validates if it is valid.\n If it the validation succeeds, a `Addr` containing the same data as the input is returned.","sig":null,"attributes":[{"value":"/ Takes a human readable address and validates if it is valid.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":470945,"byte_end":471009,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ If it the validation succeeds, a `Addr` containing the same data as the input is returned.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471014,"byte_end":471108,"line_start":70,"line_end":70,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471113,"byte_end":471116,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This validation checks two things:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471121,"byte_end":471159,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/ 1. The address is valid in the sense that it can be converted to a canonical representation by the backend.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471164,"byte_end":471275,"line_start":73,"line_end":73,"column_start":5,"column_end":116}},{"value":"/ 2. The address is normalized, i.e. `humanize(canonicalize(input)) == input`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471280,"byte_end":471360,"line_start":74,"line_end":74,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471365,"byte_end":471368,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Check #2 is typically needed for upper/lower case representations of the same","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471373,"byte_end":471454,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ address that are both valid according to #1. This way we ensure uniqueness","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471459,"byte_end":471537,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ of the human readable address. Clients should perform the normalization before sending","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471542,"byte_end":471632,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ the addresses to the CosmWasm stack. But please note that the definition of normalized","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471637,"byte_end":471727,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ depends on the backend.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471732,"byte_end":471759,"line_start":80,"line_end":80,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471764,"byte_end":471767,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471772,"byte_end":471787,"line_start":82,"line_end":82,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471792,"byte_end":471795,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471800,"byte_end":471807,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Api, Addr};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471812,"byte_end":471848,"line_start":85,"line_end":85,"column_start":5,"column_end":41}},{"value":"/ # use cosmwasm_std::testing::MockApi;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471853,"byte_end":471894,"line_start":86,"line_end":86,"column_start":5,"column_end":46}},{"value":"/ # let api = MockApi::default();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471899,"byte_end":471934,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/ let input = \"what-users-provide\";","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471939,"byte_end":471976,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"/ let validated: Addr = api.addr_validate(input).unwrap();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":471981,"byte_end":472041,"line_start":89,"line_end":89,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(validated, input);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472046,"byte_end":472079,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472084,"byte_end":472091,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472332,"byte_end":472349,"line_start":96,"line_end":96,"column_start":8,"column_end":25},"name":"addr_canonicalize","qualname":"::traits::Api::addr_canonicalize","value":"pub fn addr_canonicalize(&Self, &str) -> StdResult<CanonicalAddr>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" Takes a human readable address and returns a canonical binary representation of it.\n This can be used when a compact fixed length representation is needed.\n","sig":null,"attributes":[{"value":"/ Takes a human readable address and returns a canonical binary representation of it.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472158,"byte_end":472245,"line_start":94,"line_end":94,"column_start":5,"column_end":92}},{"value":"/ This can be used when a compact fixed length representation is needed.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472250,"byte_end":472324,"line_start":95,"line_end":95,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472594,"byte_end":472607,"line_start":102,"line_end":102,"column_start":8,"column_end":21},"name":"addr_humanize","qualname":"::traits::Api::addr_humanize","value":"pub fn addr_humanize(&Self, &CanonicalAddr) -> StdResult<Addr>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" Takes a canonical address and returns a human readble address.\n This is the inverse of [`addr_canonicalize`].","sig":null,"attributes":[{"value":"/ Takes a canonical address and returns a human readble address.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472404,"byte_end":472470,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ This is the inverse of [`addr_canonicalize`].","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472475,"byte_end":472524,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472529,"byte_end":472532,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`addr_canonicalize`]: Api::addr_canonicalize","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472537,"byte_end":472586,"line_start":101,"line_end":101,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472670,"byte_end":472686,"line_start":104,"line_end":104,"column_start":8,"column_end":24},"name":"secp256k1_verify","qualname":"::traits::Api::secp256k1_verify","value":"pub fn secp256k1_verify(&Self, &[u8], &[u8], &[u8])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":472835,"byte_end":472859,"line_start":111,"line_end":111,"column_start":8,"column_end":32},"name":"secp256k1_recover_pubkey","qualname":"::traits::Api::secp256k1_recover_pubkey","value":"pub fn secp256k1_recover_pubkey(&Self, &[u8], &[u8], u8)\n-> Result<Vec<u8>, RecoverPubkeyError>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473013,"byte_end":473027,"line_start":118,"line_end":118,"column_start":8,"column_end":22},"name":"ed25519_verify","qualname":"::traits::Api::ed25519_verify","value":"pub fn ed25519_verify(&Self, &[u8], &[u8], &[u8])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473171,"byte_end":473191,"line_start":125,"line_end":125,"column_start":8,"column_end":28},"name":"ed25519_batch_verify","qualname":"::traits::Api::ed25519_batch_verify","value":"pub fn ed25519_batch_verify(&Self, &[&[u8]], &[&[u8]], &[&[u8]])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473520,"byte_end":473525,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"debug","qualname":"::traits::Api::debug","value":"pub fn debug(&Self, &str)","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":" Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).\n Those messages are not persisted to chain.\n","sig":null,"attributes":[{"value":"/ Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473344,"byte_end":473461,"line_start":132,"line_end":132,"column_start":5,"column_end":122}},{"value":"/ Those messages are not persisted to chain.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473466,"byte_end":473512,"line_start":133,"line_end":133,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2445},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473679,"byte_end":473692,"line_start":138,"line_end":138,"column_start":10,"column_end":23},"name":"QuerierResult","qualname":"::traits::QuerierResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)\n","sig":null,"attributes":[{"value":"/ A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473552,"byte_end":473669,"line_start":137,"line_end":137,"column_start":1,"column_end":118}}]},{"kind":"Trait","id":{"krate":0,"index":2446},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473744,"byte_end":473751,"line_start":140,"line_end":140,"column_start":11,"column_end":18},"name":"Querier","qualname":"::traits::Querier","value":"Querier","parent":null,"children":[{"krate":0,"index":2447}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474117,"byte_end":474126,"line_start":146,"line_end":146,"column_start":8,"column_end":17},"name":"raw_query","qualname":"::traits::Querier::raw_query","value":"pub fn raw_query(&Self, &[u8]) -> QuerierResult","parent":{"krate":0,"index":2446},"children":[],"decl_id":null,"docs":" raw_query is all that must be implemented for the Querier.\n This allows us to pass through binary queries from one level to another without\n knowing the custom format, or we can decode it, with the knowledge of the allowed\n types. People using the querier probably want one of the simpler auto-generated\n helper methods\n","sig":null,"attributes":[{"value":"/ raw_query is all that must be implemented for the Querier.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473758,"byte_end":473820,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"/ This allows us to pass through binary queries from one level to another without","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473825,"byte_end":473908,"line_start":142,"line_end":142,"column_start":5,"column_end":88}},{"value":"/ knowing the custom format, or we can decode it, with the knowledge of the allowed","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":473913,"byte_end":473998,"line_start":143,"line_end":143,"column_start":5,"column_end":90}},{"value":"/ types. People using the querier probably want one of the simpler auto-generated","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474003,"byte_end":474086,"line_start":144,"line_end":144,"column_start":5,"column_end":88}},{"value":"/ helper methods","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474091,"byte_end":474109,"line_start":145,"line_end":145,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":7020},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474203,"byte_end":474217,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"QuerierWrapper","qualname":"::traits::QuerierWrapper","value":"QuerierWrapper {  }","parent":null,"children":[{"krate":0,"index":7023},{"krate":0,"index":7024}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":475030,"byte_end":475033,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"new","qualname":"<QuerierWrapper>::new","value":"pub fn new(&'a dyn Querier) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":475507,"byte_end":475512,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"query","qualname":"<QuerierWrapper>::query","value":"pub fn query<U: DeserializeOwned>(&Self, &QueryRequest<C>) -> StdResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Makes the query and parses the response.","sig":null,"attributes":[{"value":"/ Makes the query and parses the response.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":475181,"byte_end":475225,"line_start":179,"line_end":179,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":475230,"byte_end":475233,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Any error (System Error, Error or called contract, or Parse Error) are flattened into","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":475238,"byte_end":475327,"line_start":181,"line_end":181,"column_start":5,"column_end":94}},{"value":"/ one level. Only use this if you don't need to check the SystemError","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":475332,"byte_end":475403,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ eg. If you don't differentiate between contract missing and contract returned error","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":475408,"byte_end":475495,"line_start":183,"line_end":183,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":476241,"byte_end":476254,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"query_balance","qualname":"<QuerierWrapper>::query_balance","value":"pub fn query_balance<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(&Self, impl Into<String>, impl Into<String>)\n-> StdResult<Coin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":476607,"byte_end":476625,"line_start":214,"line_end":214,"column_start":12,"column_end":30},"name":"query_all_balances","qualname":"<QuerierWrapper>::query_all_balances","value":"pub fn query_all_balances<impl Into<String>: Into<String>>(&Self,\nimpl Into<String>) -> StdResult<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":477053,"byte_end":477069,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"query_wasm_smart","qualname":"<QuerierWrapper>::query_wasm_smart","value":"pub fn query_wasm_smart<T: DeserializeOwned, impl Into<String>: Into<String>,\nimpl Serialize: Serialize>(&Self, impl Into<String>, &impl Serialize)\n-> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":477864,"byte_end":477878,"line_start":245,"line_end":245,"column_start":12,"column_end":26},"name":"query_wasm_raw","qualname":"<QuerierWrapper>::query_wasm_raw","value":"pub fn query_wasm_raw<impl Into<String>: Into<String>,\nimpl Into<Binary>: Into<Binary>>(&Self, impl Into<String>, impl Into<Binary>)\n-> StdResult<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7029},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482354,"byte_end":482357,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Env","qualname":"::types::Env","value":"Env { block, transaction, contract }","parent":null,"children":[{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7030},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482368,"byte_end":482373,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"block","qualname":"::types::Env::block","value":"types::BlockInfo","parent":{"krate":0,"index":7029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7031},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482616,"byte_end":482627,"line_start":14,"line_end":14,"column_start":9,"column_end":20},"name":"transaction","qualname":"::types::Env::transaction","value":"std::option::Option<types::TransactionInfo>","parent":{"krate":0,"index":7029},"children":[],"decl_id":null,"docs":" Information on the transaction this message was executed in.\n The field is unset when the `MsgExecuteContract`/`MsgInstantiateContract`/`MsgMigrateContract`\n is not executed as part of a transaction.\n","sig":null,"attributes":[{"value":"/ Information on the transaction this message was executed in.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482390,"byte_end":482454,"line_start":11,"line_end":11,"column_start":5,"column_end":69}},{"value":"/ The field is unset when the `MsgExecuteContract`/`MsgInstantiateContract`/`MsgMigrateContract`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482459,"byte_end":482557,"line_start":12,"line_end":12,"column_start":5,"column_end":103}},{"value":"/ is not executed as part of a transaction.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482562,"byte_end":482607,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7032},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482662,"byte_end":482670,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"contract","qualname":"::types::Env::contract","value":"types::ContractInfo","parent":{"krate":0,"index":7029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7092},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482759,"byte_end":482774,"line_start":19,"line_end":19,"column_start":12,"column_end":27},"name":"TransactionInfo","qualname":"::types::TransactionInfo","value":"TransactionInfo { index }","parent":null,"children":[{"krate":0,"index":7093}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7093},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483047,"byte_end":483052,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"index","qualname":"::types::TransactionInfo::index","value":"u32","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":" The position of this transaction in the block. The first\n transaction has index 0.","sig":null,"attributes":[{"value":"/ The position of this transaction in the block. The first","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482781,"byte_end":482841,"line_start":20,"line_end":20,"column_start":5,"column_end":65}},{"value":"/ transaction has index 0.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482846,"byte_end":482874,"line_start":21,"line_end":21,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482879,"byte_end":482882,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This allows you to get a unique transaction indentifier in this chain","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482887,"byte_end":482960,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ using the pair (`env.block.height`, `env.transaction.index`).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":482965,"byte_end":483030,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483035,"byte_end":483038,"line_start":25,"line_end":25,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7149},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483144,"byte_end":483153,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"BlockInfo","qualname":"::types::BlockInfo","value":"BlockInfo { height, time, chain_id }","parent":null,"children":[{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7152}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7150},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483250,"byte_end":483256,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"height","qualname":"::types::BlockInfo::height","value":"u64","parent":{"krate":0,"index":7149},"children":[],"decl_id":null,"docs":" The height of a block is the number of blocks preceding it in the blockchain.\n","sig":null,"attributes":[{"value":"/ The height of a block is the number of blocks preceding it in the blockchain.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483160,"byte_end":483241,"line_start":31,"line_end":31,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":7151},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485199,"byte_end":485203,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"name":"time","qualname":"::types::BlockInfo::time","value":"timestamp::Timestamp","parent":{"krate":0,"index":7149},"children":[],"decl_id":null,"docs":" Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","sig":null,"attributes":[{"value":"/ Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483267,"byte_end":483368,"line_start":33,"line_end":33,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483373,"byte_end":483376,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The source of this is the [BFT Time in Tendermint](https://github.com/tendermint/tendermint/blob/58dc1726/spec/consensus/bft-time.md),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483381,"byte_end":483519,"line_start":35,"line_end":35,"column_start":5,"column_end":143}},{"value":"/ which has the same nanosecond precision as the `Timestamp` type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483524,"byte_end":483592,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483597,"byte_end":483600,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483605,"byte_end":483619,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483624,"byte_end":483627,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Using chrono:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483632,"byte_end":483649,"line_start":40,"line_end":40,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483654,"byte_end":483657,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483662,"byte_end":483669,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr, BlockInfo, ContractInfo, Env, MessageInfo, Timestamp, TransactionInfo};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483674,"byte_end":483776,"line_start":43,"line_end":43,"column_start":5,"column_end":107}},{"value":"/ # let env = Env {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483781,"byte_end":483802,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483807,"byte_end":483835,"line_start":45,"line_end":45,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483840,"byte_end":483869,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ #         time: Timestamp::from_nanos(1_571_797_419_879_305_533),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483874,"byte_end":483943,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":483948,"byte_end":484007,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484012,"byte_end":484024,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/ #     transaction: Some(TransactionInfo { index: 3 }),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484029,"byte_end":484087,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484092,"byte_end":484126,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ #         address: Addr::unchecked(\"contract\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484131,"byte_end":484182,"line_start":52,"line_end":52,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484187,"byte_end":484199,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484204,"byte_end":484212,"line_start":54,"line_end":54,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484217,"byte_end":484243,"line_start":55,"line_end":55,"column_start":5,"column_end":31}},{"value":"/ use chrono::NaiveDateTime;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484248,"byte_end":484278,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/ let seconds = env.block.time.seconds();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484283,"byte_end":484326,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ let nsecs = env.block.time.subsec_nanos();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484331,"byte_end":484377,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/ let dt = NaiveDateTime::from_timestamp(seconds as i64, nsecs as u32);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484382,"byte_end":484455,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484460,"byte_end":484467,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484472,"byte_end":484475,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Creating a simple millisecond-precision timestamp (as used in JavaScript):","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484480,"byte_end":484558,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484563,"byte_end":484566,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484571,"byte_end":484578,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr, BlockInfo, ContractInfo, Env, MessageInfo, Timestamp, TransactionInfo};","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484583,"byte_end":484685,"line_start":65,"line_end":65,"column_start":5,"column_end":107}},{"value":"/ # let env = Env {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484690,"byte_end":484711,"line_start":66,"line_end":66,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484716,"byte_end":484744,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484749,"byte_end":484778,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ #         time: Timestamp::from_nanos(1_571_797_419_879_305_533),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484783,"byte_end":484852,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484857,"byte_end":484916,"line_start":70,"line_end":70,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484921,"byte_end":484933,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/ #     transaction: Some(TransactionInfo { index: 3 }),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":484938,"byte_end":484996,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485001,"byte_end":485035,"line_start":73,"line_end":73,"column_start":5,"column_end":39}},{"value":"/ #         address: Addr::unchecked(\"contract\"),","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485040,"byte_end":485091,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485096,"byte_end":485108,"line_start":75,"line_end":75,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485113,"byte_end":485121,"line_start":76,"line_end":76,"column_start":5,"column_end":13}},{"value":"/ let millis = env.block.time.nanos() / 1_000_000;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485126,"byte_end":485178,"line_start":77,"line_end":77,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485183,"byte_end":485190,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":7152},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485224,"byte_end":485232,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"chain_id","qualname":"::types::BlockInfo::chain_id","value":"std::string::String","parent":{"krate":0,"index":7149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7216},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485837,"byte_end":485848,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"MessageInfo","qualname":"::types::MessageInfo","value":"MessageInfo { sender, funds }","parent":null,"children":[{"krate":0,"index":7217},{"krate":0,"index":7218}],"decl_id":null,"docs":" Additional information from [MsgInstantiateContract] and [MsgExecuteContract], which is passed\n along with the contract execution message into the `instantiate` and `execute` entry points.","sig":null,"attributes":[{"value":"/ Additional information from [MsgInstantiateContract] and [MsgExecuteContract], which is passed","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485245,"byte_end":485343,"line_start":83,"line_end":83,"column_start":1,"column_end":99}},{"value":"/ along with the contract execution message into the `instantiate` and `execute` entry points.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485344,"byte_end":485440,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485441,"byte_end":485444,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ It contains the essential info for authorization - identity of the call, and payment.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485445,"byte_end":485534,"line_start":86,"line_end":86,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485535,"byte_end":485538,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [MsgInstantiateContract]: https://github.com/CosmWasm/wasmd/blob/v0.15.0/x/wasm/internal/types/tx.proto#L47-L61","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485539,"byte_end":485654,"line_start":88,"line_end":88,"column_start":1,"column_end":116}},{"value":"/ [MsgExecuteContract]: https://github.com/CosmWasm/wasmd/blob/v0.15.0/x/wasm/internal/types/tx.proto#L68-L78","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485655,"byte_end":485766,"line_start":89,"line_end":89,"column_start":1,"column_end":112}}]},{"kind":"Field","id":{"krate":0,"index":7217},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486422,"byte_end":486428,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"sender","qualname":"::types::MessageInfo::sender","value":"addresses::Addr","parent":{"krate":0,"index":7216},"children":[],"decl_id":null,"docs":" The `sender` field from `MsgInstantiateContract` and `MsgExecuteContract`.\n You can think of this as the address that initiated the action (i.e. the message). What that\n means exactly heavily depends on the application.","sig":null,"attributes":[{"value":"/ The `sender` field from `MsgInstantiateContract` and `MsgExecuteContract`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485855,"byte_end":485933,"line_start":92,"line_end":92,"column_start":5,"column_end":83}},{"value":"/ You can think of this as the address that initiated the action (i.e. the message). What that","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":485938,"byte_end":486034,"line_start":93,"line_end":93,"column_start":5,"column_end":101}},{"value":"/ means exactly heavily depends on the application.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486039,"byte_end":486092,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486097,"byte_end":486100,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The x/wasm module ensures that the sender address signed the transaction or","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486105,"byte_end":486184,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ is otherwise authorized to send the message.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486189,"byte_end":486237,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486242,"byte_end":486245,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Additional signers of the transaction that are either needed for other messages or contain unnecessary","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486250,"byte_end":486356,"line_start":99,"line_end":99,"column_start":5,"column_end":111}},{"value":"/ signatures are not propagated into the contract.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486361,"byte_end":486413,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":7218},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486699,"byte_end":486704,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"funds","qualname":"::types::MessageInfo::funds","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":7216},"children":[],"decl_id":null,"docs":" The funds that are sent to the contract as part of `MsgInstantiateContract`\n or `MsgExecuteContract`. The transfer is processed in bank before the contract\n is executed such that the new balance is visible during contract execution.\n","sig":null,"attributes":[{"value":"/ The funds that are sent to the contract as part of `MsgInstantiateContract`","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486440,"byte_end":486519,"line_start":102,"line_end":102,"column_start":5,"column_end":84}},{"value":"/ or `MsgExecuteContract`. The transfer is processed in bank before the contract","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486524,"byte_end":486606,"line_start":103,"line_end":103,"column_start":5,"column_end":87}},{"value":"/ is executed such that the new balance is visible during contract execution.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486611,"byte_end":486690,"line_start":104,"line_end":104,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":7276},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486790,"byte_end":486802,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"ContractInfo","qualname":"::types::ContractInfo","value":"ContractInfo { address }","parent":null,"children":[{"krate":0,"index":7277}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7277},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/types.rs","byte_start":486813,"byte_end":486820,"line_start":110,"line_end":110,"column_start":9,"column_end":16},"name":"address","qualname":"::types::ContractInfo::address","value":"addresses::Addr","parent":{"krate":0,"index":7276},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2848},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488113,"byte_end":488131,"line_start":34,"line_end":34,"column_start":11,"column_end":29},"name":"MOCK_CONTRACT_ADDR","qualname":"::mock::MOCK_CONTRACT_ADDR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2849},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488387,"byte_end":488404,"line_start":40,"line_end":40,"column_start":8,"column_end":25},"name":"mock_dependencies","qualname":"::mock::mock_dependencies","value":"pub fn mock_dependencies()\n-> OwnedDeps<MockStorage, MockApi, MockQuerier, Empty>","parent":null,"children":[],"decl_id":null,"docs":" Creates all external requirements that can be injected for unit tests.","sig":null,"attributes":[{"value":"/ Creates all external requirements that can be injected for unit tests.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488160,"byte_end":488234,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488235,"byte_end":488238,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See also [`mock_dependencies_with_balance`] and [`mock_dependencies_with_balances`]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488239,"byte_end":488326,"line_start":38,"line_end":38,"column_start":1,"column_end":88}},{"value":"/ if you want to start with some initial balances.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488327,"byte_end":488379,"line_start":39,"line_end":39,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":2850},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488799,"byte_end":488829,"line_start":52,"line_end":52,"column_start":8,"column_end":38},"name":"mock_dependencies_with_balance","qualname":"::mock::mock_dependencies_with_balance","value":"pub fn mock_dependencies_with_balance(&[Coin])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier, Empty>","parent":null,"children":[],"decl_id":null,"docs":" Creates all external requirements that can be injected for unit tests.","sig":null,"attributes":[{"value":"/ Creates all external requirements that can be injected for unit tests.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488644,"byte_end":488718,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488719,"byte_end":488722,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It sets the given balance for the contract itself, nothing else.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":488723,"byte_end":488791,"line_start":51,"line_end":51,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":2851},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":489158,"byte_end":489189,"line_start":60,"line_end":60,"column_start":8,"column_end":39},"name":"mock_dependencies_with_balances","qualname":"::mock::mock_dependencies_with_balances","value":"pub fn mock_dependencies_with_balances(&[(&str, &[Coin])])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the querier along with the mock_dependencies.\n Sets all balances provided (you must explicitly set contract balance if desired).\n","sig":null,"attributes":[{"value":"/ Initializes the querier along with the mock_dependencies.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":489003,"byte_end":489064,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/ Sets all balances provided (you must explicitly set contract balance if desired).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":489065,"byte_end":489150,"line_start":59,"line_end":59,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2852},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":489591,"byte_end":489602,"line_start":73,"line_end":73,"column_start":10,"column_end":21},"name":"MockStorage","qualname":"::mock::MockStorage","value":"MemoryStorage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7333},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":490218,"byte_end":490225,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"MockApi","qualname":"::mock::MockApi","value":"MockApi {  }","parent":null,"children":[{"krate":0,"index":7334}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2868},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":494596,"byte_end":494604,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"mock_env","qualname":"::mock::mock_env","value":"pub fn mock_env() -> Env","parent":null,"children":[],"decl_id":null,"docs":" Returns a default enviroment with height, time, chain_id, and contract address\n You can submit as is to most contracts, or modify height/time if you want to\n test for expiration.","sig":null,"attributes":[{"value":"/ Returns a default enviroment with height, time, chain_id, and contract address","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":494348,"byte_end":494430,"line_start":219,"line_end":219,"column_start":1,"column_end":83}},{"value":"/ You can submit as is to most contracts, or modify height/time if you want to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":494431,"byte_end":494511,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ test for expiration.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":494512,"byte_end":494536,"line_start":221,"line_end":221,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":494537,"byte_end":494540,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":494541,"byte_end":494588,"line_start":223,"line_end":223,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":2869},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":495088,"byte_end":495097,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"mock_info","qualname":"::mock::mock_info","value":"pub fn mock_info(&str, &[Coin]) -> MessageInfo","parent":null,"children":[],"decl_id":null,"docs":" Just set sender and funds for the message.\n This is intended for use in test code only.\n","sig":null,"attributes":[{"value":"/ Just set sender and funds for the message.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":494986,"byte_end":495032,"line_start":238,"line_end":238,"column_start":1,"column_end":47}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":495033,"byte_end":495080,"line_start":239,"line_end":239,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":2870},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":501124,"byte_end":501154,"line_start":417,"line_end":417,"column_start":10,"column_end":40},"name":"MockQuerierCustomHandlerResult","qualname":"::mock::MockQuerierCustomHandlerResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" The same type as cosmwasm-std's QuerierResult, but easier to reuse in\n cosmwasm-vm. It might diverge from QuerierResult at some point.\n","sig":null,"attributes":[{"value":"/ The same type as cosmwasm-std's QuerierResult, but easier to reuse in","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":500973,"byte_end":501046,"line_start":415,"line_end":415,"column_start":1,"column_end":74}},{"value":"/ cosmwasm-vm. It might diverge from QuerierResult at some point.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":501047,"byte_end":501114,"line_start":416,"line_end":416,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2871},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":501332,"byte_end":501343,"line_start":421,"line_end":421,"column_start":12,"column_end":23},"name":"MockQuerier","qualname":"::mock::MockQuerier","value":"MockQuerier {  }","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875}],"decl_id":null,"docs":" MockQuerier holds an immutable table of bank balances\n and configurable handlers for Wasm queries and custom queries.\n","sig":null,"attributes":[{"value":"/ MockQuerier holds an immutable table of bank balances","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":501196,"byte_end":501253,"line_start":419,"line_end":419,"column_start":1,"column_end":58}},{"value":"/ and configurable handlers for Wasm queries and custom queries.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":501254,"byte_end":501320,"line_start":420,"line_end":420,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":501838,"byte_end":501841,"line_start":434,"line_end":434,"column_start":12,"column_end":15},"name":"new","qualname":"<MockQuerier<C>>::new","value":"pub fn new(&[(&str, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":502558,"byte_end":502572,"line_start":450,"line_end":450,"column_start":12,"column_end":26},"name":"update_balance","qualname":"<MockQuerier<C>>::update_balance","value":"pub fn update_balance<impl Into<String>: Into<String>>(&mut Self,\nimpl Into<String>, Vec<Coin>) -> Option<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":503049,"byte_end":503060,"line_start":468,"line_end":468,"column_start":12,"column_end":23},"name":"update_wasm","qualname":"<MockQuerier<C>>::update_wasm","value":"pub fn update_wasm<WH: 'static>(&mut Self, WH) where WH: Fn(&WasmQuery) ->\nQuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":503219,"byte_end":503238,"line_start":475,"line_end":475,"column_start":12,"column_end":31},"name":"with_custom_handler","qualname":"<MockQuerier<C>>::with_custom_handler","value":"pub fn with_custom_handler<CH: 'static>(Self, CH) -> Self where CH: Fn(&C) ->\nMockQuerierCustomHandlerResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":504118,"byte_end":504130,"line_start":506,"line_end":506,"column_start":12,"column_end":24},"name":"handle_query","qualname":"<MockQuerier<C>>::handle_query","value":"pub fn handle_query(&Self, &QueryRequest<C>) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7338},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":506251,"byte_end":506262,"line_start":566,"line_end":566,"column_start":12,"column_end":23},"name":"BankQuerier","qualname":"::mock::BankQuerier","value":"BankQuerier {  }","parent":null,"children":[{"krate":0,"index":7339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":506340,"byte_end":506343,"line_start":571,"line_end":571,"column_start":12,"column_end":15},"name":"new","qualname":"<BankQuerier>::new","value":"pub fn new(&[(&str, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":506593,"byte_end":506598,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"name":"query","qualname":"<BankQuerier>::query","value":"pub fn query(&Self, &BankQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2913},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":511030,"byte_end":511044,"line_start":727,"line_end":727,"column_start":8,"column_end":22},"name":"riffle_shuffle","qualname":"::mock::riffle_shuffle","value":"pub fn riffle_shuffle<T: Clone>(&[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Performs a perfect shuffle (in shuffle)","sig":null,"attributes":[{"value":"/ Performs a perfect shuffle (in shuffle)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510314,"byte_end":510357,"line_start":680,"line_end":680,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510358,"byte_end":510361,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ https://en.wikipedia.org/wiki/Riffle_shuffle_permutation#Perfect_shuffles","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510362,"byte_end":510439,"line_start":682,"line_end":682,"column_start":1,"column_end":78}},{"value":"/ https://en.wikipedia.org/wiki/In_shuffle","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510440,"byte_end":510484,"line_start":683,"line_end":683,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510485,"byte_end":510488,"line_start":684,"line_end":684,"column_start":1,"column_end":4}},{"value":"/ The number of shuffles required to restore the original order are listed in","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510489,"byte_end":510568,"line_start":685,"line_end":685,"column_start":1,"column_end":80}},{"value":"/ https://oeis.org/A002326, e.g.:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510569,"byte_end":510604,"line_start":686,"line_end":686,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510605,"byte_end":510608,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510609,"byte_end":510622,"line_start":688,"line_end":688,"column_start":1,"column_end":14}},{"value":"/ 2: 2","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510623,"byte_end":510631,"line_start":689,"line_end":689,"column_start":1,"column_end":9}},{"value":"/ 4: 4","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510632,"byte_end":510640,"line_start":690,"line_end":690,"column_start":1,"column_end":9}},{"value":"/ 6: 3","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510641,"byte_end":510649,"line_start":691,"line_end":691,"column_start":1,"column_end":9}},{"value":"/ 8: 6","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510650,"byte_end":510658,"line_start":692,"line_end":692,"column_start":1,"column_end":9}},{"value":"/ 10: 10","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510659,"byte_end":510669,"line_start":693,"line_end":693,"column_start":1,"column_end":11}},{"value":"/ 12: 12","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510670,"byte_end":510680,"line_start":694,"line_end":694,"column_start":1,"column_end":11}},{"value":"/ 14: 4","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510681,"byte_end":510690,"line_start":695,"line_end":695,"column_start":1,"column_end":10}},{"value":"/ 16: 8","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510691,"byte_end":510700,"line_start":696,"line_end":696,"column_start":1,"column_end":10}},{"value":"/ 18: 18","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510701,"byte_end":510711,"line_start":697,"line_end":697,"column_start":1,"column_end":11}},{"value":"/ 20: 6","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510712,"byte_end":510721,"line_start":698,"line_end":698,"column_start":1,"column_end":10}},{"value":"/ 22: 11","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510722,"byte_end":510732,"line_start":699,"line_end":699,"column_start":1,"column_end":11}},{"value":"/ 24: 20","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510733,"byte_end":510743,"line_start":700,"line_end":700,"column_start":1,"column_end":11}},{"value":"/ 26: 18","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510744,"byte_end":510754,"line_start":701,"line_end":701,"column_start":1,"column_end":11}},{"value":"/ 28: 28","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510755,"byte_end":510765,"line_start":702,"line_end":702,"column_start":1,"column_end":11}},{"value":"/ 30: 5","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510766,"byte_end":510775,"line_start":703,"line_end":703,"column_start":1,"column_end":10}},{"value":"/ 32: 10","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510776,"byte_end":510786,"line_start":704,"line_end":704,"column_start":1,"column_end":11}},{"value":"/ 34: 12","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510787,"byte_end":510797,"line_start":705,"line_end":705,"column_start":1,"column_end":11}},{"value":"/ 36: 36","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510798,"byte_end":510808,"line_start":706,"line_end":706,"column_start":1,"column_end":11}},{"value":"/ 38: 12","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510809,"byte_end":510819,"line_start":707,"line_end":707,"column_start":1,"column_end":11}},{"value":"/ 40: 20","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510820,"byte_end":510830,"line_start":708,"line_end":708,"column_start":1,"column_end":11}},{"value":"/ 42: 14","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510831,"byte_end":510841,"line_start":709,"line_end":709,"column_start":1,"column_end":11}},{"value":"/ 44: 12","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510842,"byte_end":510852,"line_start":710,"line_end":710,"column_start":1,"column_end":11}},{"value":"/ 46: 23","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510853,"byte_end":510863,"line_start":711,"line_end":711,"column_start":1,"column_end":11}},{"value":"/ 48: 21","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510864,"byte_end":510874,"line_start":712,"line_end":712,"column_start":1,"column_end":11}},{"value":"/ 50: 8","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510875,"byte_end":510884,"line_start":713,"line_end":713,"column_start":1,"column_end":10}},{"value":"/ 52: 52","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510885,"byte_end":510895,"line_start":714,"line_end":714,"column_start":1,"column_end":11}},{"value":"/ 54: 20","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510896,"byte_end":510906,"line_start":715,"line_end":715,"column_start":1,"column_end":11}},{"value":"/ 56: 18","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510907,"byte_end":510917,"line_start":716,"line_end":716,"column_start":1,"column_end":11}},{"value":"/ 58: 58","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510918,"byte_end":510928,"line_start":717,"line_end":717,"column_start":1,"column_end":11}},{"value":"/ 60: 60","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510929,"byte_end":510939,"line_start":718,"line_end":718,"column_start":1,"column_end":11}},{"value":"/ 62: 6","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510940,"byte_end":510949,"line_start":719,"line_end":719,"column_start":1,"column_end":10}},{"value":"/ 64: 12","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510950,"byte_end":510960,"line_start":720,"line_end":720,"column_start":1,"column_end":11}},{"value":"/ 66: 66","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510961,"byte_end":510971,"line_start":721,"line_end":721,"column_start":1,"column_end":11}},{"value":"/ 68: 22","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510972,"byte_end":510982,"line_start":722,"line_end":722,"column_start":1,"column_end":11}},{"value":"/ 70: 35","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510983,"byte_end":510993,"line_start":723,"line_end":723,"column_start":1,"column_end":11}},{"value":"/ 72: 9","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":510994,"byte_end":511003,"line_start":724,"line_end":724,"column_start":1,"column_end":10}},{"value":"/ 74: 20","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":511004,"byte_end":511014,"line_start":725,"line_end":725,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":511015,"byte_end":511022,"line_start":726,"line_end":726,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2915},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":511437,"byte_end":511446,"line_start":742,"line_end":742,"column_start":8,"column_end":17},"name":"digit_sum","qualname":"::mock::digit_sum","value":"pub fn digit_sum(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2917},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":511680,"byte_end":511695,"line_start":748,"line_end":748,"column_start":8,"column_end":23},"name":"mock_wasmd_attr","qualname":"::mock::mock_wasmd_attr","value":"pub fn mock_wasmd_attr<impl Into<String>: Into<String>,\nimpl Into<String>: Into<String>>(impl Into<String>, impl Into<String>)\n-> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Only for test code. This bypasses assertions in new, allowing us to create _*\n Attributes to simulate responses from the blockchain\n","sig":null,"attributes":[{"value":"/ Only for test code. This bypasses assertions in new, allowing us to create _*","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":511534,"byte_end":511615,"line_start":746,"line_end":746,"column_start":1,"column_end":82}},{"value":"/ Attributes to simulate responses from the blockchain","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":511616,"byte_end":511672,"line_start":747,"line_end":747,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":2920},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3660,"byte_end":3667,"line_start":102,"line_end":102,"column_start":9,"column_end":16},"name":"testing","qualname":"::testing","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2943},{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":2955},{"krate":0,"index":2958},{"krate":0,"index":2961}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/lib.rs","byte_start":3616,"byte_end":3651,"line_start":101,"line_end":101,"column_start":1,"column_end":36}}]}],"impls":[{"id":3,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5676,"byte_end":5680,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6882,"byte_end":6886,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7010,"byte_end":7014,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7147,"byte_end":7151,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7415,"byte_end":7419,"line_start":98,"line_end":98,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7551,"byte_end":7557,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7764,"byte_end":7770,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7852,"byte_end":7858,"line_start":120,"line_end":120,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7948,"byte_end":7951,"line_start":126,"line_end":126,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8060,"byte_end":8063,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8292,"byte_end":8305,"line_start":141,"line_end":141,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8405,"byte_end":8418,"line_start":147,"line_end":147,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8526,"byte_end":8529,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":9034,"byte_end":9047,"line_start":164,"line_end":164,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":9152,"byte_end":9165,"line_start":172,"line_end":172,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":9263,"byte_end":9276,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23561,"byte_end":23567,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":25461,"byte_end":25467,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":25600,"byte_end":25606,"line_start":78,"line_end":78,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26073,"byte_end":26079,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26528,"byte_end":26534,"line_start":102,"line_end":102,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26697,"byte_end":26703,"line_start":111,"line_end":111,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26848,"byte_end":26854,"line_start":118,"line_end":118,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26961,"byte_end":26967,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27055,"byte_end":27058,"line_start":130,"line_end":130,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27218,"byte_end":27224,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27416,"byte_end":27419,"line_start":145,"line_end":145,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27591,"byte_end":27597,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27943,"byte_end":27949,"line_start":169,"line_end":169,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":28193,"byte_end":28199,"line_start":179,"line_end":179,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":28430,"byte_end":28443,"line_start":190,"line_end":190,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":39929,"byte_end":39933,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40132,"byte_end":40136,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45799,"byte_end":45803,"line_start":36,"line_end":36,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45868,"byte_end":45877,"line_start":38,"line_end":38,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":46329,"byte_end":46336,"line_start":56,"line_end":56,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49326,"byte_end":49344,"line_start":24,"line_end":24,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49608,"byte_end":49626,"line_start":34,"line_end":34,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":50583,"byte_end":50601,"line_start":62,"line_end":62,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54646,"byte_end":54654,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":57430,"byte_end":57438,"line_start":201,"line_end":201,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":63850,"byte_end":63858,"line_start":406,"line_end":406,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":63998,"byte_end":64006,"line_start":412,"line_end":412,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64144,"byte_end":64152,"line_start":418,"line_end":418,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64286,"byte_end":64294,"line_start":424,"line_end":424,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64426,"byte_end":64434,"line_start":430,"line_end":430,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64555,"byte_end":64563,"line_start":436,"line_end":436,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65177,"byte_end":65194,"line_start":459,"line_end":459,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65523,"byte_end":65536,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66306,"byte_end":66329,"line_start":501,"line_end":501,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66732,"byte_end":66749,"line_start":521,"line_end":521,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":76233,"byte_end":76244,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":76276,"byte_end":76287,"line_start":39,"line_end":39,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77942,"byte_end":77959,"line_start":31,"line_end":31,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":78221,"byte_end":78238,"line_start":41,"line_end":41,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":79504,"byte_end":79521,"line_start":74,"line_end":74,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":112146,"byte_end":112151,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115464,"byte_end":115471,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":124673,"byte_end":124680,"line_start":263,"line_end":263,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":125405,"byte_end":125412,"line_start":289,"line_end":289,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":127478,"byte_end":127485,"line_start":339,"line_end":339,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128091,"byte_end":128098,"line_start":357,"line_end":357,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128284,"byte_end":128291,"line_start":366,"line_end":366,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128463,"byte_end":128470,"line_start":373,"line_end":373,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128656,"byte_end":128663,"line_start":382,"line_end":382,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128835,"byte_end":128842,"line_start":389,"line_end":389,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":129660,"byte_end":129667,"line_start":409,"line_end":409,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":130105,"byte_end":130112,"line_start":419,"line_end":419,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":130459,"byte_end":130466,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":130587,"byte_end":130594,"line_start":440,"line_end":440,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131150,"byte_end":131157,"line_start":457,"line_end":457,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131338,"byte_end":131345,"line_start":464,"line_end":464,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131489,"byte_end":131496,"line_start":472,"line_end":472,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131606,"byte_end":131613,"line_start":478,"line_end":478,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131813,"byte_end":131820,"line_start":488,"line_end":488,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":132064,"byte_end":132071,"line_start":498,"line_end":498,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":132302,"byte_end":132316,"line_start":509,"line_end":509,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174692,"byte_end":174702,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":184340,"byte_end":184350,"line_start":275,"line_end":275,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":185072,"byte_end":185082,"line_start":301,"line_end":301,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":187148,"byte_end":187158,"line_start":351,"line_end":351,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":187764,"byte_end":187774,"line_start":369,"line_end":369,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":187963,"byte_end":187973,"line_start":378,"line_end":378,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":188154,"byte_end":188164,"line_start":385,"line_end":385,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":188353,"byte_end":188363,"line_start":394,"line_end":394,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":188544,"byte_end":188554,"line_start":401,"line_end":401,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":189378,"byte_end":189388,"line_start":421,"line_end":421,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":189844,"byte_end":189851,"line_start":431,"line_end":431,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":190204,"byte_end":190214,"line_start":444,"line_end":444,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":190335,"byte_end":190345,"line_start":452,"line_end":452,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":190910,"byte_end":190920,"line_start":469,"line_end":469,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191110,"byte_end":191120,"line_start":476,"line_end":476,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191261,"byte_end":191271,"line_start":484,"line_end":484,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191381,"byte_end":191391,"line_start":490,"line_end":490,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191591,"byte_end":191601,"line_start":500,"line_end":500,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191845,"byte_end":191855,"line_start":510,"line_end":510,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":192092,"byte_end":192109,"line_start":521,"line_end":521,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238080,"byte_end":238081,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238933,"byte_end":238939,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238961,"byte_end":238968,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238990,"byte_end":238997,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":239019,"byte_end":239026,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241737,"byte_end":241744,"line_start":37,"line_end":37,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247067,"byte_end":247074,"line_start":212,"line_end":212,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247166,"byte_end":247173,"line_start":218,"line_end":218,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247258,"byte_end":247265,"line_start":224,"line_end":224,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247356,"byte_end":247363,"line_start":230,"line_end":230,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247454,"byte_end":247461,"line_start":236,"line_end":236,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247551,"byte_end":247558,"line_start":242,"line_end":242,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247655,"byte_end":247661,"line_start":248,"line_end":248,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247953,"byte_end":247960,"line_start":258,"line_end":258,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248103,"byte_end":248110,"line_start":266,"line_end":266,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248388,"byte_end":248394,"line_start":277,"line_end":277,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248597,"byte_end":248604,"line_start":289,"line_end":289,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248719,"byte_end":248726,"line_start":295,"line_end":295,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248980,"byte_end":248987,"line_start":307,"line_end":307,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":249111,"byte_end":249118,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":249431,"byte_end":249438,"line_start":328,"line_end":328,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":249619,"byte_end":249626,"line_start":335,"line_end":335,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":249944,"byte_end":249951,"line_start":348,"line_end":348,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250129,"byte_end":250136,"line_start":355,"line_end":355,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250392,"byte_end":250399,"line_start":367,"line_end":367,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250527,"byte_end":250534,"line_start":375,"line_end":375,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250789,"byte_end":250796,"line_start":387,"line_end":387,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250931,"byte_end":250938,"line_start":395,"line_end":395,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251060,"byte_end":251067,"line_start":401,"line_end":401,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251185,"byte_end":251192,"line_start":407,"line_end":407,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251311,"byte_end":251318,"line_start":413,"line_end":413,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251421,"byte_end":251428,"line_start":419,"line_end":419,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251710,"byte_end":251717,"line_start":432,"line_end":432,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251900,"byte_end":251907,"line_start":439,"line_end":439,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":252022,"byte_end":252029,"line_start":445,"line_end":445,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":252135,"byte_end":252142,"line_start":451,"line_end":451,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":252404,"byte_end":252411,"line_start":461,"line_end":461,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":252703,"byte_end":252717,"line_start":473,"line_end":473,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":253182,"byte_end":253189,"line_start":491,"line_end":491,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268771,"byte_end":268778,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1187},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276386,"byte_end":276393,"line_start":279,"line_end":279,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276489,"byte_end":276496,"line_start":285,"line_end":285,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276588,"byte_end":276595,"line_start":291,"line_end":291,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276687,"byte_end":276694,"line_start":297,"line_end":297,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276785,"byte_end":276792,"line_start":303,"line_end":303,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276883,"byte_end":276890,"line_start":309,"line_end":309,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276980,"byte_end":276987,"line_start":315,"line_end":315,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":277084,"byte_end":277091,"line_start":321,"line_end":321,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":277385,"byte_end":277392,"line_start":331,"line_end":331,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":277535,"byte_end":277542,"line_start":339,"line_end":339,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":277947,"byte_end":277953,"line_start":354,"line_end":354,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":278057,"byte_end":278064,"line_start":360,"line_end":360,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":278345,"byte_end":278352,"line_start":370,"line_end":370,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":278593,"byte_end":278600,"line_start":382,"line_end":382,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":278724,"byte_end":278731,"line_start":390,"line_end":390,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279031,"byte_end":279038,"line_start":403,"line_end":403,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279219,"byte_end":279226,"line_start":410,"line_end":410,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279472,"byte_end":279479,"line_start":422,"line_end":422,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279602,"byte_end":279609,"line_start":430,"line_end":430,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279891,"byte_end":279898,"line_start":443,"line_end":443,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":280079,"byte_end":280086,"line_start":450,"line_end":450,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":280394,"byte_end":280401,"line_start":463,"line_end":463,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":280575,"byte_end":280582,"line_start":470,"line_end":470,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":280902,"byte_end":280909,"line_start":483,"line_end":483,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281036,"byte_end":281043,"line_start":491,"line_end":491,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281362,"byte_end":281369,"line_start":504,"line_end":504,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281506,"byte_end":281513,"line_start":512,"line_end":512,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281635,"byte_end":281642,"line_start":518,"line_end":518,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281760,"byte_end":281767,"line_start":524,"line_end":524,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281886,"byte_end":281893,"line_start":530,"line_end":530,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282007,"byte_end":282014,"line_start":536,"line_end":536,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282144,"byte_end":282151,"line_start":542,"line_end":542,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282273,"byte_end":282280,"line_start":548,"line_end":548,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282542,"byte_end":282549,"line_start":558,"line_end":558,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282841,"byte_end":282855,"line_start":570,"line_end":570,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":283253,"byte_end":283260,"line_start":585,"line_end":585,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317323,"byte_end":317330,"line_start":55,"line_end":55,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1444},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324508,"byte_end":324515,"line_start":253,"line_end":253,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324703,"byte_end":324710,"line_start":261,"line_end":261,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324806,"byte_end":324813,"line_start":267,"line_end":267,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324905,"byte_end":324912,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325004,"byte_end":325011,"line_start":279,"line_end":279,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325102,"byte_end":325109,"line_start":285,"line_end":285,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325200,"byte_end":325207,"line_start":291,"line_end":291,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325297,"byte_end":325304,"line_start":297,"line_end":297,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325401,"byte_end":325408,"line_start":303,"line_end":303,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325925,"byte_end":325932,"line_start":322,"line_end":322,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":326226,"byte_end":326233,"line_start":332,"line_end":332,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":326376,"byte_end":326383,"line_start":340,"line_end":340,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":326662,"byte_end":326668,"line_start":351,"line_end":351,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":326772,"byte_end":326779,"line_start":357,"line_end":357,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327060,"byte_end":327067,"line_start":367,"line_end":367,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327224,"byte_end":327231,"line_start":375,"line_end":375,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327387,"byte_end":327394,"line_start":383,"line_end":383,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327605,"byte_end":327612,"line_start":392,"line_end":392,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327817,"byte_end":327824,"line_start":399,"line_end":399,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327986,"byte_end":327993,"line_start":407,"line_end":407,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":328145,"byte_end":328152,"line_start":415,"line_end":415,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":328434,"byte_end":328441,"line_start":428,"line_end":428,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":328622,"byte_end":328629,"line_start":435,"line_end":435,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":328845,"byte_end":328852,"line_start":444,"line_end":444,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329050,"byte_end":329057,"line_start":451,"line_end":451,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329377,"byte_end":329384,"line_start":464,"line_end":464,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329534,"byte_end":329541,"line_start":472,"line_end":472,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329687,"byte_end":329694,"line_start":478,"line_end":478,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329836,"byte_end":329843,"line_start":484,"line_end":484,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329986,"byte_end":329993,"line_start":490,"line_end":490,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330131,"byte_end":330138,"line_start":496,"line_end":496,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330268,"byte_end":330275,"line_start":502,"line_end":502,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330397,"byte_end":330404,"line_start":508,"line_end":508,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330666,"byte_end":330673,"line_start":518,"line_end":518,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330965,"byte_end":330979,"line_start":530,"line_end":530,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":331377,"byte_end":331384,"line_start":545,"line_end":545,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352283,"byte_end":352289,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357566,"byte_end":357572,"line_start":208,"line_end":208,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357655,"byte_end":357661,"line_start":214,"line_end":214,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357751,"byte_end":357757,"line_start":220,"line_end":220,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357846,"byte_end":357852,"line_start":226,"line_end":226,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357945,"byte_end":357951,"line_start":232,"line_end":232,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358233,"byte_end":358239,"line_start":243,"line_end":243,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358438,"byte_end":358444,"line_start":255,"line_end":255,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358558,"byte_end":358564,"line_start":261,"line_end":261,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358727,"byte_end":358733,"line_start":269,"line_end":269,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358894,"byte_end":358900,"line_start":277,"line_end":277,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":359207,"byte_end":359213,"line_start":290,"line_end":290,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":359390,"byte_end":359396,"line_start":297,"line_end":297,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":359709,"byte_end":359715,"line_start":310,"line_end":310,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":359890,"byte_end":359896,"line_start":317,"line_end":317,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360065,"byte_end":360071,"line_start":325,"line_end":325,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360230,"byte_end":360236,"line_start":333,"line_end":333,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360515,"byte_end":360521,"line_start":346,"line_end":346,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360695,"byte_end":360701,"line_start":353,"line_end":353,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360860,"byte_end":360866,"line_start":361,"line_end":361,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361031,"byte_end":361037,"line_start":369,"line_end":369,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361185,"byte_end":361191,"line_start":375,"line_end":375,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361335,"byte_end":361341,"line_start":381,"line_end":381,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361487,"byte_end":361493,"line_start":387,"line_end":387,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361634,"byte_end":361640,"line_start":393,"line_end":393,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361776,"byte_end":361782,"line_start":399,"line_end":399,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361910,"byte_end":361916,"line_start":405,"line_end":405,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":362178,"byte_end":362184,"line_start":415,"line_end":415,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":362473,"byte_end":362486,"line_start":427,"line_end":427,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":362947,"byte_end":362953,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387887,"byte_end":387907,"line_start":43,"line_end":43,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378803,"byte_end":378808,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378854,"byte_end":378866,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378984,"byte_end":378996,"line_start":79,"line_end":79,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":379291,"byte_end":379303,"line_start":92,"line_end":92,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390764,"byte_end":390778,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391278,"byte_end":391292,"line_start":64,"line_end":64,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391431,"byte_end":391445,"line_start":70,"line_end":70,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391704,"byte_end":391710,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395937,"byte_end":395942,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":404285,"byte_end":404294,"line_start":219,"line_end":219,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":404719,"byte_end":404728,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407847,"byte_end":407852,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408991,"byte_end":409000,"line_start":64,"line_end":64,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":409546,"byte_end":409555,"line_start":84,"line_end":84,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":409691,"byte_end":409700,"line_start":90,"line_end":90,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":410471,"byte_end":410480,"line_start":120,"line_end":120,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414682,"byte_end":414690,"line_start":88,"line_end":88,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414883,"byte_end":414891,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2081},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424457,"byte_end":424463,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428577,"byte_end":428589,"line_start":150,"line_end":150,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429240,"byte_end":429252,"line_start":174,"line_end":174,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429504,"byte_end":429510,"line_start":183,"line_end":183,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437321,"byte_end":437333,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437672,"byte_end":437684,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437825,"byte_end":437837,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":438086,"byte_end":438092,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/storage.rs","byte_start":450065,"byte_end":450078,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/storage.rs","byte_start":450167,"byte_end":450180,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/storage.rs","byte_start":452244,"byte_end":452257,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2307}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461319,"byte_end":461328,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462764,"byte_end":462773,"line_start":79,"line_end":79,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474649,"byte_end":474663,"line_start":159,"line_end":159,"column_start":35,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474840,"byte_end":474854,"line_start":163,"line_end":163,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2454},{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474995,"byte_end":475009,"line_start":171,"line_end":171,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2463},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":490407,"byte_end":490414,"line_start":93,"line_end":93,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":490542,"byte_end":490549,"line_start":101,"line_end":101,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":501810,"byte_end":501821,"line_start":433,"line_end":433,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":503442,"byte_end":503453,"line_start":484,"line_end":484,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2888}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":503574,"byte_end":503585,"line_start":490,"line_end":490,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":504090,"byte_end":504101,"line_start":505,"line_end":505,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":505268,"byte_end":505279,"line_start":533,"line_end":533,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":505685,"byte_end":505696,"line_start":550,"line_end":550,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":506315,"byte_end":506326,"line_start":570,"line_end":570,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":5676,"byte_end":5680,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":6882,"byte_end":6886,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2967},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7010,"byte_end":7014,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2967},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7147,"byte_end":7151,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2967},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7415,"byte_end":7419,"line_start":98,"line_end":98,"column_start":28,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2967},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7551,"byte_end":7557,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7764,"byte_end":7770,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7852,"byte_end":7858,"line_start":120,"line_end":120,"column_start":22,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":7948,"byte_end":7951,"line_start":126,"line_end":126,"column_start":21,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8060,"byte_end":8063,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":678},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8292,"byte_end":8305,"line_start":141,"line_end":141,"column_start":22,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8405,"byte_end":8418,"line_start":147,"line_end":147,"column_start":24,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":8526,"byte_end":8529,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":9034,"byte_end":9047,"line_start":164,"line_end":164,"column_start":16,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":9152,"byte_end":9165,"line_start":172,"line_end":172,"column_start":6,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/addresses.rs","byte_start":9263,"byte_end":9276,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3017},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":23561,"byte_end":23567,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":25461,"byte_end":25467,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":25600,"byte_end":25606,"line_start":78,"line_end":78,"column_start":21,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26073,"byte_end":26079,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26528,"byte_end":26534,"line_start":102,"line_end":102,"column_start":16,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26697,"byte_end":26703,"line_start":111,"line_end":111,"column_start":51,"column_end":57},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26848,"byte_end":26854,"line_start":118,"line_end":118,"column_start":50,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":26961,"byte_end":26967,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27055,"byte_end":27058,"line_start":130,"line_end":130,"column_start":23,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27218,"byte_end":27224,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27416,"byte_end":27419,"line_start":145,"line_end":145,"column_start":28,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":7089},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27591,"byte_end":27597,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":27943,"byte_end":27949,"line_start":169,"line_end":169,"column_start":20,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3063},"to":{"krate":23,"index":2117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":28193,"byte_end":28199,"line_start":179,"line_end":179,"column_start":32,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3063},"to":{"krate":23,"index":1576}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/binary.rs","byte_start":28430,"byte_end":28443,"line_start":190,"line_end":190,"column_start":32,"column_end":45},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":150},"to":{"krate":23,"index":1662}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":39929,"byte_end":39933,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/coins.rs","byte_start":40132,"byte_end":40136,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3088},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45799,"byte_end":45803,"line_start":36,"line_end":36,"column_start":35,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3154},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":45868,"byte_end":45877,"line_start":38,"line_end":38,"column_start":54,"column_end":63},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/deps.rs","byte_start":46329,"byte_end":46336,"line_start":56,"line_end":56,"column_start":26,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49326,"byte_end":49344,"line_start":24,"line_end":24,"column_start":6,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":49608,"byte_end":49626,"line_start":34,"line_end":34,"column_start":40,"column_end":58},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3164},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/recover_pubkey_error.rs","byte_start":50583,"byte_end":50601,"line_start":62,"line_end":62,"column_start":28,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3164},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":54646,"byte_end":54654,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":57430,"byte_end":57438,"line_start":201,"line_end":201,"column_start":30,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":63850,"byte_end":63858,"line_start":406,"line_end":406,"column_start":36,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":63998,"byte_end":64006,"line_start":412,"line_end":412,"column_start":43,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64144,"byte_end":64152,"line_start":418,"line_end":418,"column_start":34,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64286,"byte_end":64294,"line_start":424,"line_end":424,"column_start":35,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64426,"byte_end":64434,"line_start":430,"line_end":430,"column_start":30,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":64555,"byte_end":64563,"line_start":436,"line_end":436,"column_start":34,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65177,"byte_end":65194,"line_start":459,"line_end":459,"column_start":23,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3231},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":65523,"byte_end":65536,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66306,"byte_end":66329,"line_start":501,"line_end":501,"column_start":6,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/std_error.rs","byte_start":66732,"byte_end":66749,"line_start":521,"line_end":521,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":76233,"byte_end":76244,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3587},"to":{"krate":1,"index":2546}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/system_error.rs","byte_start":76276,"byte_end":76287,"line_start":39,"line_end":39,"column_start":28,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3587},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":77942,"byte_end":77959,"line_start":31,"line_end":31,"column_start":6,"column_end":23},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":78221,"byte_end":78238,"line_start":41,"line_end":41,"column_start":39,"column_end":56},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3599},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/errors/verification_error.rs","byte_start":79504,"byte_end":79521,"line_start":74,"line_end":74,"column_start":28,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3599},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/iterator.rs","byte_start":112146,"byte_end":112151,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3626},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":115464,"byte_end":115471,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":124673,"byte_end":124680,"line_start":263,"line_end":263,"column_start":28,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3636},"to":{"krate":0,"index":785}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":125405,"byte_end":125412,"line_start":289,"line_end":289,"column_start":18,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":127478,"byte_end":127485,"line_start":339,"line_end":339,"column_start":23,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128091,"byte_end":128098,"line_start":357,"line_end":357,"column_start":14,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128284,"byte_end":128291,"line_start":366,"line_end":366,"column_start":20,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128463,"byte_end":128470,"line_start":373,"line_end":373,"column_start":14,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3130}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128656,"byte_end":128663,"line_start":382,"line_end":382,"column_start":20,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":128835,"byte_end":128842,"line_start":389,"line_end":389,"column_start":14,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":129660,"byte_end":129667,"line_start":409,"line_end":409,"column_start":20,"column_end":27},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3164}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":130105,"byte_end":130112,"line_start":419,"line_end":419,"column_start":23,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":130459,"byte_end":130466,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":130587,"byte_end":130594,"line_start":440,"line_end":440,"column_start":14,"column_end":21},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131150,"byte_end":131157,"line_start":457,"line_end":457,"column_start":20,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131338,"byte_end":131345,"line_start":464,"line_end":464,"column_start":23,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131489,"byte_end":131496,"line_start":472,"line_end":472,"column_start":29,"column_end":36},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131606,"byte_end":131613,"line_start":478,"line_end":478,"column_start":31,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3636},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":131813,"byte_end":131820,"line_start":488,"line_end":488,"column_start":20,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3636},"to":{"krate":23,"index":2117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":132064,"byte_end":132071,"line_start":498,"line_end":498,"column_start":32,"column_end":39},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3636},"to":{"krate":23,"index":1576}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal.rs","byte_start":132302,"byte_end":132316,"line_start":509,"line_end":509,"column_start":32,"column_end":46},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":586},"to":{"krate":23,"index":1662}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":174692,"byte_end":174702,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":184340,"byte_end":184350,"line_start":275,"line_end":275,"column_start":28,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3719},"to":{"krate":0,"index":785}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":185072,"byte_end":185082,"line_start":301,"line_end":301,"column_start":18,"column_end":28},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":187148,"byte_end":187158,"line_start":351,"line_end":351,"column_start":23,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":187764,"byte_end":187774,"line_start":369,"line_end":369,"column_start":14,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":187963,"byte_end":187973,"line_start":378,"line_end":378,"column_start":20,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":188154,"byte_end":188164,"line_start":385,"line_end":385,"column_start":14,"column_end":24},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3130}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":188353,"byte_end":188363,"line_start":394,"line_end":394,"column_start":20,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":188544,"byte_end":188554,"line_start":401,"line_end":401,"column_start":14,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":189378,"byte_end":189388,"line_start":421,"line_end":421,"column_start":20,"column_end":30},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3164}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":189844,"byte_end":189851,"line_start":431,"line_end":431,"column_start":26,"column_end":33},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":190204,"byte_end":190214,"line_start":444,"line_end":444,"column_start":23,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":190335,"byte_end":190345,"line_start":452,"line_end":452,"column_start":14,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":190910,"byte_end":190920,"line_start":469,"line_end":469,"column_start":20,"column_end":30},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191110,"byte_end":191120,"line_start":476,"line_end":476,"column_start":23,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191261,"byte_end":191271,"line_start":484,"line_end":484,"column_start":29,"column_end":39},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191381,"byte_end":191391,"line_start":490,"line_end":490,"column_start":31,"column_end":41},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3719},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191591,"byte_end":191601,"line_start":500,"line_end":500,"column_start":20,"column_end":30},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3719},"to":{"krate":23,"index":2117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":191845,"byte_end":191855,"line_start":510,"line_end":510,"column_start":32,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3719},"to":{"krate":23,"index":1576}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/decimal256.rs","byte_start":192092,"byte_end":192109,"line_start":521,"line_end":521,"column_start":32,"column_end":49},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":776},"to":{"krate":23,"index":1662}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/fraction.rs","byte_start":237448,"byte_end":237453,"line_start":4,"line_end":4,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":785}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238080,"byte_end":238081,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":814},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238933,"byte_end":238939,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5083},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238961,"byte_end":238968,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3802},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":238990,"byte_end":238997,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4412},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/isqrt.rs","byte_start":239019,"byte_end":239026,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5022},"to":{"krate":0,"index":816}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":241737,"byte_end":241744,"line_start":37,"line_end":37,"column_start":6,"column_end":13},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247067,"byte_end":247074,"line_start":212,"line_end":212,"column_start":23,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247166,"byte_end":247173,"line_start":218,"line_end":218,"column_start":21,"column_end":28},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247258,"byte_end":247265,"line_start":224,"line_end":224,"column_start":20,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247356,"byte_end":247363,"line_start":230,"line_end":230,"column_start":20,"column_end":27},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247454,"byte_end":247461,"line_start":236,"line_end":236,"column_start":20,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247551,"byte_end":247558,"line_start":242,"line_end":242,"column_start":19,"column_end":26},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247655,"byte_end":247661,"line_start":248,"line_end":248,"column_start":27,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":247953,"byte_end":247960,"line_start":258,"line_end":258,"column_start":24,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248103,"byte_end":248110,"line_start":266,"line_end":266,"column_start":18,"column_end":25},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248388,"byte_end":248394,"line_start":277,"line_end":277,"column_start":24,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248597,"byte_end":248604,"line_start":289,"line_end":289,"column_start":23,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248719,"byte_end":248726,"line_start":295,"line_end":295,"column_start":23,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":248980,"byte_end":248987,"line_start":307,"line_end":307,"column_start":31,"column_end":38},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":249111,"byte_end":249118,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3130}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":249431,"byte_end":249438,"line_start":328,"line_end":328,"column_start":29,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":249619,"byte_end":249626,"line_start":335,"line_end":335,"column_start":23,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":249944,"byte_end":249951,"line_start":348,"line_end":348,"column_start":29,"column_end":36},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3164}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250129,"byte_end":250136,"line_start":355,"line_end":355,"column_start":23,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250392,"byte_end":250399,"line_start":367,"line_end":367,"column_start":31,"column_end":38},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250527,"byte_end":250534,"line_start":375,"line_end":375,"column_start":19,"column_end":26},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3205}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250789,"byte_end":250796,"line_start":387,"line_end":387,"column_start":27,"column_end":34},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3205}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":250931,"byte_end":250938,"line_start":395,"line_end":395,"column_start":29,"column_end":36},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251060,"byte_end":251067,"line_start":401,"line_end":401,"column_start":37,"column_end":44},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251185,"byte_end":251192,"line_start":407,"line_end":407,"column_start":29,"column_end":36},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251311,"byte_end":251318,"line_start":413,"line_end":413,"column_start":37,"column_end":44},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251421,"byte_end":251428,"line_start":419,"line_end":419,"column_start":14,"column_end":21},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3146}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251710,"byte_end":251717,"line_start":432,"line_end":432,"column_start":29,"column_end":36},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3172}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":251900,"byte_end":251907,"line_start":439,"line_end":439,"column_start":25,"column_end":32},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":252022,"byte_end":252029,"line_start":445,"line_end":445,"column_start":33,"column_end":40},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":252135,"byte_end":252142,"line_start":451,"line_end":451,"column_start":20,"column_end":27},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3802},"to":{"krate":23,"index":2117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":252404,"byte_end":252411,"line_start":461,"line_end":461,"column_start":32,"column_end":39},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3802},"to":{"krate":23,"index":1576}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":252703,"byte_end":252717,"line_start":473,"line_end":473,"column_start":32,"column_end":46},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1051},"to":{"krate":23,"index":1662}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint128.rs","byte_start":253182,"byte_end":253189,"line_start":491,"line_end":491,"column_start":31,"column_end":38},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":268771,"byte_end":268778,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276386,"byte_end":276393,"line_start":279,"line_end":279,"column_start":24,"column_end":31},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276489,"byte_end":276496,"line_start":285,"line_end":285,"column_start":23,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276588,"byte_end":276595,"line_start":291,"line_end":291,"column_start":21,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276687,"byte_end":276694,"line_start":297,"line_end":297,"column_start":20,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276785,"byte_end":276792,"line_start":303,"line_end":303,"column_start":20,"column_end":27},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276883,"byte_end":276890,"line_start":309,"line_end":309,"column_start":20,"column_end":27},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":276980,"byte_end":276987,"line_start":315,"line_end":315,"column_start":19,"column_end":26},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":277084,"byte_end":277091,"line_start":321,"line_end":321,"column_start":27,"column_end":34},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":277385,"byte_end":277392,"line_start":331,"line_end":331,"column_start":24,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":277535,"byte_end":277542,"line_start":339,"line_end":339,"column_start":18,"column_end":25},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":277947,"byte_end":277953,"line_start":354,"line_end":354,"column_start":24,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":278057,"byte_end":278064,"line_start":360,"line_end":360,"column_start":23,"column_end":30},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":278345,"byte_end":278352,"line_start":370,"line_end":370,"column_start":23,"column_end":30},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":278593,"byte_end":278600,"line_start":382,"line_end":382,"column_start":31,"column_end":38},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":278724,"byte_end":278731,"line_start":390,"line_end":390,"column_start":23,"column_end":30},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3130}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279031,"byte_end":279038,"line_start":403,"line_end":403,"column_start":29,"column_end":36},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279219,"byte_end":279226,"line_start":410,"line_end":410,"column_start":23,"column_end":30},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279472,"byte_end":279479,"line_start":422,"line_end":422,"column_start":31,"column_end":38},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279602,"byte_end":279609,"line_start":430,"line_end":430,"column_start":14,"column_end":21},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3146}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":279891,"byte_end":279898,"line_start":443,"line_end":443,"column_start":29,"column_end":36},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3172}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":280079,"byte_end":280086,"line_start":450,"line_end":450,"column_start":23,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":280394,"byte_end":280401,"line_start":463,"line_end":463,"column_start":29,"column_end":36},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3164}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":280575,"byte_end":280582,"line_start":470,"line_end":470,"column_start":19,"column_end":26},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3205}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":280902,"byte_end":280909,"line_start":483,"line_end":483,"column_start":27,"column_end":34},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3205}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281036,"byte_end":281043,"line_start":491,"line_end":491,"column_start":19,"column_end":26},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3199}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281362,"byte_end":281369,"line_start":504,"line_end":504,"column_start":27,"column_end":34},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3199}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281506,"byte_end":281513,"line_start":512,"line_end":512,"column_start":29,"column_end":36},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281635,"byte_end":281642,"line_start":518,"line_end":518,"column_start":37,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281760,"byte_end":281767,"line_start":524,"line_end":524,"column_start":29,"column_end":36},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":281886,"byte_end":281893,"line_start":530,"line_end":530,"column_start":37,"column_end":44},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282007,"byte_end":282014,"line_start":536,"line_end":536,"column_start":25,"column_end":32},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282144,"byte_end":282151,"line_start":542,"line_end":542,"column_start":33,"column_end":40},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282273,"byte_end":282280,"line_start":548,"line_end":548,"column_start":20,"column_end":27},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4412},"to":{"krate":23,"index":2117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282542,"byte_end":282549,"line_start":558,"line_end":558,"column_start":32,"column_end":39},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4412},"to":{"krate":23,"index":1576}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":282841,"byte_end":282855,"line_start":570,"line_end":570,"column_start":32,"column_end":46},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":1314},"to":{"krate":23,"index":1662}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint256.rs","byte_start":283253,"byte_end":283260,"line_start":585,"line_end":585,"column_start":31,"column_end":38},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":317323,"byte_end":317330,"line_start":55,"line_end":55,"column_start":6,"column_end":13},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324508,"byte_end":324515,"line_start":253,"line_end":253,"column_start":24,"column_end":31},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324703,"byte_end":324710,"line_start":261,"line_end":261,"column_start":24,"column_end":31},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324806,"byte_end":324813,"line_start":267,"line_end":267,"column_start":23,"column_end":30},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":324905,"byte_end":324912,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325004,"byte_end":325011,"line_start":279,"line_end":279,"column_start":20,"column_end":27},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325102,"byte_end":325109,"line_start":285,"line_end":285,"column_start":20,"column_end":27},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325200,"byte_end":325207,"line_start":291,"line_end":291,"column_start":20,"column_end":27},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325297,"byte_end":325304,"line_start":297,"line_end":297,"column_start":19,"column_end":26},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325401,"byte_end":325408,"line_start":303,"line_end":303,"column_start":27,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4412},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":325925,"byte_end":325932,"line_start":322,"line_end":322,"column_start":27,"column_end":34},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3802},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":326226,"byte_end":326233,"line_start":332,"line_end":332,"column_start":24,"column_end":31},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":326376,"byte_end":326383,"line_start":340,"line_end":340,"column_start":18,"column_end":25},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":12317}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":326662,"byte_end":326668,"line_start":351,"line_end":351,"column_start":24,"column_end":30},"kind":{"Impl":{"id":262}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":326772,"byte_end":326779,"line_start":357,"line_end":357,"column_start":23,"column_end":30},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327060,"byte_end":327067,"line_start":367,"line_end":367,"column_start":23,"column_end":30},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327224,"byte_end":327231,"line_start":375,"line_end":375,"column_start":31,"column_end":38},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327387,"byte_end":327394,"line_start":383,"line_end":383,"column_start":23,"column_end":30},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3130}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327605,"byte_end":327612,"line_start":392,"line_end":392,"column_start":29,"column_end":36},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327817,"byte_end":327824,"line_start":399,"line_end":399,"column_start":23,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":327986,"byte_end":327993,"line_start":407,"line_end":407,"column_start":31,"column_end":38},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":328145,"byte_end":328152,"line_start":415,"line_end":415,"column_start":14,"column_end":21},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3146}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":328434,"byte_end":328441,"line_start":428,"line_end":428,"column_start":29,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3172}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":328622,"byte_end":328629,"line_start":435,"line_end":435,"column_start":23,"column_end":30},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":328845,"byte_end":328852,"line_start":444,"line_end":444,"column_start":29,"column_end":36},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3164}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329050,"byte_end":329057,"line_start":451,"line_end":451,"column_start":19,"column_end":26},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3205}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329377,"byte_end":329384,"line_start":464,"line_end":464,"column_start":27,"column_end":34},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3205}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329534,"byte_end":329541,"line_start":472,"line_end":472,"column_start":29,"column_end":36},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329687,"byte_end":329694,"line_start":478,"line_end":478,"column_start":37,"column_end":44},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329836,"byte_end":329843,"line_start":484,"line_end":484,"column_start":29,"column_end":36},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":329986,"byte_end":329993,"line_start":490,"line_end":490,"column_start":37,"column_end":44},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330131,"byte_end":330138,"line_start":496,"line_end":496,"column_start":25,"column_end":32},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330268,"byte_end":330275,"line_start":502,"line_end":502,"column_start":33,"column_end":40},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330397,"byte_end":330404,"line_start":508,"line_end":508,"column_start":20,"column_end":27},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5022},"to":{"krate":23,"index":2117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330666,"byte_end":330673,"line_start":518,"line_end":518,"column_start":32,"column_end":39},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5022},"to":{"krate":23,"index":1576}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":330965,"byte_end":330979,"line_start":530,"line_end":530,"column_start":32,"column_end":46},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":1561},"to":{"krate":23,"index":1662}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint512.rs","byte_start":331377,"byte_end":331384,"line_start":545,"line_end":545,"column_start":31,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":352283,"byte_end":352289,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357566,"byte_end":357572,"line_start":208,"line_end":208,"column_start":20,"column_end":26},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357655,"byte_end":357661,"line_start":214,"line_end":214,"column_start":20,"column_end":26},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357751,"byte_end":357757,"line_start":220,"line_end":220,"column_start":20,"column_end":26},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357846,"byte_end":357852,"line_start":226,"line_end":226,"column_start":19,"column_end":25},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":357945,"byte_end":357951,"line_start":232,"line_end":232,"column_start":24,"column_end":30},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358233,"byte_end":358239,"line_start":243,"line_end":243,"column_start":23,"column_end":29},"kind":{"Impl":{"id":299}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358438,"byte_end":358444,"line_start":255,"line_end":255,"column_start":23,"column_end":29},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358558,"byte_end":358564,"line_start":261,"line_end":261,"column_start":22,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358727,"byte_end":358733,"line_start":269,"line_end":269,"column_start":30,"column_end":36},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3125}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":358894,"byte_end":358900,"line_start":277,"line_end":277,"column_start":22,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3130}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":359207,"byte_end":359213,"line_start":290,"line_end":290,"column_start":28,"column_end":34},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":359390,"byte_end":359396,"line_start":297,"line_end":297,"column_start":22,"column_end":28},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3135}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":359709,"byte_end":359715,"line_start":310,"line_end":310,"column_start":28,"column_end":34},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3164}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":359890,"byte_end":359896,"line_start":317,"line_end":317,"column_start":22,"column_end":28},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360065,"byte_end":360071,"line_start":325,"line_end":325,"column_start":30,"column_end":36},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3140}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360230,"byte_end":360236,"line_start":333,"line_end":333,"column_start":14,"column_end":20},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3146}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360515,"byte_end":360521,"line_start":346,"line_end":346,"column_start":28,"column_end":34},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3172}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360695,"byte_end":360701,"line_start":353,"line_end":353,"column_start":19,"column_end":25},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3205}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":360860,"byte_end":360866,"line_start":361,"line_end":361,"column_start":27,"column_end":33},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3205}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361031,"byte_end":361037,"line_start":369,"line_end":369,"column_start":28,"column_end":34},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361185,"byte_end":361191,"line_start":375,"line_end":375,"column_start":36,"column_end":42},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3156}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361335,"byte_end":361341,"line_start":381,"line_end":381,"column_start":28,"column_end":34},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361487,"byte_end":361493,"line_start":387,"line_end":387,"column_start":36,"column_end":42},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3168}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361634,"byte_end":361640,"line_start":393,"line_end":393,"column_start":25,"column_end":31},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361776,"byte_end":361782,"line_start":399,"line_end":399,"column_start":33,"column_end":39},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":361910,"byte_end":361916,"line_start":405,"line_end":405,"column_start":20,"column_end":26},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":5083},"to":{"krate":23,"index":2117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":362178,"byte_end":362184,"line_start":415,"line_end":415,"column_start":32,"column_end":38},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":5083},"to":{"krate":23,"index":1576}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":362473,"byte_end":362486,"line_start":427,"line_end":427,"column_start":32,"column_end":45},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":1777},"to":{"krate":23,"index":1662}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/math/uint64.rs","byte_start":362947,"byte_end":362953,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5083},"to":{"krate":2,"index":7742}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/wasm.rs","byte_start":387887,"byte_end":387907,"line_start":43,"line_end":43,"column_start":6,"column_end":26},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378608,"byte_end":378617,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":23,"index":2117},"to":{"krate":0,"index":1884}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378620,"byte_end":378625,"line_start":67,"line_end":67,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":1884}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378803,"byte_end":378808,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6282},"to":{"krate":0,"index":1884}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378854,"byte_end":378866,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5714},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":378984,"byte_end":378996,"line_start":79,"line_end":79,"column_start":34,"column_end":46},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5714},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/query/mod.rs","byte_start":379291,"byte_end":379303,"line_start":92,"line_end":92,"column_start":42,"column_end":54},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5714},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":390764,"byte_end":390778,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391278,"byte_end":391292,"line_start":64,"line_end":64,"column_start":21,"column_end":35},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391431,"byte_end":391445,"line_start":70,"line_end":70,"column_start":45,"column_end":59},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5791},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/contract_result.rs","byte_start":391704,"byte_end":391710,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"kind":{"Impl":{"id":359}},"from":{"krate":2,"index":46413},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395858,"byte_end":395867,"line_start":16,"line_end":16,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":23,"index":2117},"to":{"krate":0,"index":1955}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395870,"byte_end":395875,"line_start":16,"line_end":16,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":1955}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395883,"byte_end":395888,"line_start":16,"line_end":16,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":9678},"to":{"krate":0,"index":1955}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395891,"byte_end":395900,"line_start":16,"line_end":16,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":2709},"to":{"krate":0,"index":1955}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395903,"byte_end":395913,"line_start":16,"line_end":16,"column_start":67,"column_end":77},"kind":"SuperTrait","from":{"krate":20,"index":645},"to":{"krate":0,"index":1955}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":395937,"byte_end":395942,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":6282},"to":{"krate":0,"index":1955}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":404285,"byte_end":404294,"line_start":219,"line_end":219,"column_start":27,"column_end":36},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/cosmos_msg.rs","byte_start":404719,"byte_end":404728,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":407847,"byte_end":407852,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":408991,"byte_end":409000,"line_start":64,"line_end":64,"column_start":6,"column_end":15},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":409546,"byte_end":409555,"line_start":84,"line_end":84,"column_start":57,"column_end":66},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6405},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":409691,"byte_end":409700,"line_start":90,"line_end":90,"column_start":58,"column_end":67},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6405},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/events.rs","byte_start":410471,"byte_end":410480,"line_start":120,"line_end":120,"column_start":32,"column_end":41},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6405},"to":{"krate":2,"index":2709}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414682,"byte_end":414690,"line_start":88,"line_end":88,"column_start":21,"column_end":29},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6471},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/response.rs","byte_start":414883,"byte_end":414891,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":424457,"byte_end":424463,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":428577,"byte_end":428589,"line_start":150,"line_end":150,"column_start":6,"column_end":18},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429240,"byte_end":429252,"line_start":174,"line_end":174,"column_start":55,"column_end":67},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6821},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/submessages.rs","byte_start":429504,"byte_end":429510,"line_start":183,"line_end":183,"column_start":29,"column_end":35},"kind":{"Impl":{"id":406}},"from":{"krate":2,"index":46413},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437321,"byte_end":437333,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437672,"byte_end":437684,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":437825,"byte_end":437837,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6958},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/results/system_result.rs","byte_start":438086,"byte_end":438092,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"kind":{"Impl":{"id":416}},"from":{"krate":2,"index":46413},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/storage.rs","byte_start":450065,"byte_end":450078,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/storage.rs","byte_start":450167,"byte_end":450180,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6966},"to":{"krate":0,"index":2430}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/storage.rs","byte_start":452244,"byte_end":452257,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6966},"to":{"krate":2,"index":9678}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":461319,"byte_end":461328,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/timestamp.rs","byte_start":462764,"byte_end":462773,"line_start":79,"line_end":79,"column_start":23,"column_end":32},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6970},"to":{"krate":2,"index":9685}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474649,"byte_end":474663,"line_start":159,"line_end":159,"column_start":35,"column_end":49},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474840,"byte_end":474854,"line_start":163,"line_end":163,"column_start":36,"column_end":50},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7020},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/traits.rs","byte_start":474995,"byte_end":475009,"line_start":171,"line_end":171,"column_start":26,"column_end":40},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":490407,"byte_end":490414,"line_start":93,"line_end":93,"column_start":18,"column_end":25},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":7333},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":490542,"byte_end":490549,"line_start":101,"line_end":101,"column_start":14,"column_end":21},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7333},"to":{"krate":0,"index":2436}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":501810,"byte_end":501821,"line_start":433,"line_end":433,"column_start":27,"column_end":38},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":2871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":503442,"byte_end":503453,"line_start":484,"line_end":484,"column_start":18,"column_end":29},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":2871},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":503574,"byte_end":503585,"line_start":490,"line_end":490,"column_start":53,"column_end":64},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":2871},"to":{"krate":0,"index":2446}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":504090,"byte_end":504101,"line_start":505,"line_end":505,"column_start":41,"column_end":52},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":2871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":505268,"byte_end":505279,"line_start":533,"line_end":533,"column_start":6,"column_end":17},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":2895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":505685,"byte_end":505696,"line_start":550,"line_end":550,"column_start":18,"column_end":29},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0/src/mock.rs","byte_start":506315,"byte_end":506326,"line_start":570,"line_end":570,"column_start":6,"column_end":17},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":7338},"to":{"krate":4294967295,"index":4294967295}}]}