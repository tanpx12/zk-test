{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21","program":"/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures","--edition=2018","/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"executor\"","--cfg","feature=\"futures-executor\"","--cfg","feature=\"std\"","--cfg","feature=\"thread-pool\"","-C","metadata=d8c97f892979960a","-C","extra-filename=-d8c97f892979960a","--out-dir","/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps","-L","dependency=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps","--extern","futures_channel=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libfutures_channel-50fc5c18532f1172.rmeta","--extern","futures_core=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libfutures_core-92b107ad73f091a3.rmeta","--extern","futures_executor=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libfutures_executor-163566036d7f62ea.rmeta","--extern","futures_io=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libfutures_io-a2f0242935093256.rmeta","--extern","futures_sink=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libfutures_sink-e62d8003fbc786cf.rmeta","--extern","futures_task=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libfutures_task-787931241cc0cca4.rmeta","--extern","futures_util=/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libfutures_util-6575b7156df9e710.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tanpx/Desktop/rust-playground/main/target/rls/debug/deps/libfutures-d8c97f892979960a.rmeta"},"prelude":{"crate_id":{"name":"futures","disambiguator":[8682980747940471664,0]},"crate_root":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src","external_crates":[{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[5139465956691083094,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":21,"id":{"name":"futures_util","disambiguator":[4347138847248284039,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":22,"id":{"name":"pin_utils","disambiguator":[7302173720166050639,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":23,"id":{"name":"futures_task","disambiguator":[7422299312488294084,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":24,"id":{"name":"futures_sink","disambiguator":[13650532595186471273,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[2300276943370094789,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":26,"id":{"name":"futures_channel","disambiguator":[6394991209246018583,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":27,"id":{"name":"slab","disambiguator":[10055987110409741569,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":28,"id":{"name":"futures_io","disambiguator":[17387561400783789788,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":29,"id":{"name":"memchr","disambiguator":[2097954395300491601,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":30,"id":{"name":"futures_executor","disambiguator":[10640069491234249320,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":31,"id":{"name":"num_cpus","disambiguator":[13736947587011463554,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","num":32,"id":{"name":"libc","disambiguator":[17397406625196134390,0]}}],"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":0,"byte_end":9674,"line_start":1,"line_end":258,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":13091},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4170,"byte_end":4176,"line_start":103,"line_end":103,"column_start":32,"column_end":38},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4178,"byte_end":4187,"line_start":103,"line_end":103,"column_start":40,"column_end":49},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":540},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4239,"byte_end":4248,"line_start":105,"line_end":105,"column_start":32,"column_end":41},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":841},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4250,"byte_end":4262,"line_start":105,"line_end":105,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4315,"byte_end":4321,"line_start":108,"line_end":108,"column_start":32,"column_end":38},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4323,"byte_end":4332,"line_start":108,"line_end":108,"column_start":40,"column_end":49},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":4300},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4384,"byte_end":4393,"line_start":110,"line_end":110,"column_start":32,"column_end":41},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":5719},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4395,"byte_end":4407,"line_start":110,"line_end":110,"column_start":43,"column_end":55},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4451,"byte_end":4455,"line_start":113,"line_end":113,"column_start":23,"column_end":27},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7814},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4503,"byte_end":4510,"line_start":115,"line_end":115,"column_start":29,"column_end":36},"alias_span":null,"name":"SinkExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":49},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4576,"byte_end":4588,"line_start":119,"line_end":119,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":39},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4590,"byte_end":4599,"line_start":119,"line_end":119,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":47},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4601,"byte_end":4610,"line_start":119,"line_end":119,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":42},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4612,"byte_end":4622,"line_start":119,"line_end":119,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":9514},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4690,"byte_end":4705,"line_start":122,"line_end":122,"column_start":24,"column_end":39},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":9479},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4707,"byte_end":4719,"line_start":122,"line_end":122,"column_start":41,"column_end":53},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":9509},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4721,"byte_end":4733,"line_start":122,"line_end":122,"column_start":55,"column_end":67},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":9496},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4735,"byte_end":4748,"line_start":122,"line_end":122,"column_start":69,"column_end":82},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4793,"byte_end":4798,"line_start":125,"line_end":125,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":7},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":4847,"byte_end":4854,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":18},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5118,"byte_end":5124,"line_start":135,"line_end":135,"column_start":24,"column_end":30},"alias_span":null,"name":"future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7969},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5126,"byte_end":5131,"line_start":135,"line_end":135,"column_start":32,"column_end":37},"alias_span":null,"name":"never","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7099},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5133,"byte_end":5137,"line_start":135,"line_end":135,"column_start":39,"column_end":43},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":1988},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5139,"byte_end":5145,"line_start":135,"line_end":135,"column_start":45,"column_end":51},"alias_span":null,"name":"stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7859},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5147,"byte_end":5151,"line_start":135,"line_end":135,"column_start":53,"column_end":57},"alias_span":null,"name":"task","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5298,"byte_end":5313,"line_start":143,"line_end":143,"column_start":9,"column_end":24},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":9553},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5389,"byte_end":5393,"line_start":146,"line_end":146,"column_start":23,"column_end":27},"alias_span":null,"name":"lock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7971},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5457,"byte_end":5459,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":117},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7517,"byte_end":7525,"line_start":195,"line_end":195,"column_start":9,"column_end":17},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":120},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7527,"byte_end":7542,"line_start":195,"line_end":195,"column_start":19,"column_end":34},"alias_span":null,"name":"block_on_stream","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":344},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7544,"byte_end":7549,"line_start":195,"line_end":195,"column_start":36,"column_end":41},"alias_span":null,"name":"enter","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":377},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7551,"byte_end":7565,"line_start":195,"line_end":195,"column_start":43,"column_end":57},"alias_span":null,"name":"BlockingStream","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":335},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7567,"byte_end":7572,"line_start":195,"line_end":195,"column_start":59,"column_end":64},"alias_span":null,"name":"Enter","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":337},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7574,"byte_end":7584,"line_start":195,"line_end":195,"column_start":66,"column_end":76},"alias_span":null,"name":"EnterError","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":361},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7586,"byte_end":7595,"line_start":195,"line_end":195,"column_start":78,"column_end":87},"alias_span":null,"name":"LocalPool","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":366},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7605,"byte_end":7617,"line_start":196,"line_end":196,"column_start":9,"column_end":21},"alias_span":null,"name":"LocalSpawner","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":225},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7753,"byte_end":7763,"line_start":201,"line_end":201,"column_start":32,"column_end":42},"alias_span":null,"name":"ThreadPool","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":30,"index":227},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7765,"byte_end":7782,"line_start":201,"line_end":201,"column_start":44,"column_end":61},"alias_span":null,"name":"ThreadPoolBuilder","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":21,"index":18},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8948,"byte_end":8954,"line_start":236,"line_end":236,"column_start":20,"column_end":26},"alias_span":null,"name":"future","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":2,"index":13091},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8963,"byte_end":8969,"line_start":236,"line_end":236,"column_start":35,"column_end":41},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8971,"byte_end":8980,"line_start":236,"line_end":236,"column_start":43,"column_end":52},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":21,"index":7099},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9002,"byte_end":9006,"line_start":237,"line_end":237,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9015,"byte_end":9019,"line_start":237,"line_end":237,"column_start":33,"column_end":37},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":21,"index":1988},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9041,"byte_end":9047,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"alias_span":null,"name":"stream","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9056,"byte_end":9062,"line_start":238,"line_end":238,"column_start":35,"column_end":41},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9064,"byte_end":9073,"line_start":238,"line_end":238,"column_start":43,"column_end":52},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":21,"index":7814},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9240,"byte_end":9247,"line_start":244,"line_end":244,"column_start":26,"column_end":33},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":28,"index":49},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9423,"byte_end":9435,"line_start":250,"line_end":250,"column_start":25,"column_end":37},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":28,"index":39},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9437,"byte_end":9446,"line_start":250,"line_end":250,"column_start":39,"column_end":48},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":28,"index":47},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9448,"byte_end":9457,"line_start":250,"line_end":250,"column_start":50,"column_end":59},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":28,"index":42},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":9459,"byte_end":9469,"line_start":250,"line_end":250,"column_start":61,"column_end":71},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":127}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":0,"byte_end":9674,"line_start":1,"line_end":258,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":127}],"decl_id":null,"docs":" Abstractions for asynchronous programming.","sig":null,"attributes":[{"value":"/ Abstractions for asynchronous programming.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":47,"byte_end":50,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides a number of core abstractions for writing asynchronous","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":51,"byte_end":129,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ code:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":130,"byte_end":139,"line_start":4,"line_end":4,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":140,"byte_end":143,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [Futures](crate::future) are single eventual values produced by","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":144,"byte_end":213,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/   asynchronous computations. Some programming languages (e.g. JavaScript)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":214,"byte_end":291,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/   call this concept \"promise\".","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":292,"byte_end":326,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ - [Streams](crate::stream) represent a series of values","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":327,"byte_end":386,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/   produced asynchronously.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":387,"byte_end":417,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ - [Sinks](crate::sink) provide support for asynchronous writing of","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":418,"byte_end":488,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/   data.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":489,"byte_end":500,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ - [Executors](crate::executor) are responsible for running asynchronous","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":501,"byte_end":576,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   tasks.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":577,"byte_end":589,"line_start":14,"line_end":14,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":590,"byte_end":593,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The crate also contains abstractions for [asynchronous I/O](crate::io) and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":594,"byte_end":672,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ [cross-task communication](crate::channel).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":673,"byte_end":720,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":721,"byte_end":724,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Underlying all of this is the *task system*, which is a form of lightweight","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":725,"byte_end":804,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ threading. Large asynchronous computations are built up using futures,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":805,"byte_end":879,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ streams and sinks, and then spawned as independent tasks that are run to","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":880,"byte_end":956,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ completion, but *do not block* the thread running them.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":957,"byte_end":1016,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The following example describes how the task system context is built and used","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1021,"byte_end":1102,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ within macros and keywords such as async and await!.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1103,"byte_end":1159,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1160,"byte_end":1163,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1164,"byte_end":1175,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ # if cfg!(miri) { return; } // https://github.com/rust-lang/miri/issues/1038","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1176,"byte_end":1256,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ # use futures::channel::mpsc;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1257,"byte_end":1290,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ # use futures::executor; ///standard executors to provide a context for futures and streams","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1291,"byte_end":1386,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ # use futures::executor::ThreadPool;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1387,"byte_end":1427,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ # use futures::StreamExt;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1428,"byte_end":1457,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1458,"byte_end":1463,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ fn main() {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1464,"byte_end":1479,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/     let pool = ThreadPool::new().expect(\"Failed to build pool\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1480,"byte_end":1548,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/     let (tx, rx) = mpsc::unbounded::<i32>();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1549,"byte_end":1597,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1598,"byte_end":1601,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // Create a future by an async block, where async is responsible for an","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1602,"byte_end":1681,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/     // implementation of Future. At this point no executor has been provided","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1682,"byte_end":1762,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/     // to this future, so it will not be running.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1763,"byte_end":1816,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/     let fut_values = async {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1817,"byte_end":1849,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/         // Create another async block, again where the Future implementation","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1850,"byte_end":1930,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/         // is generated by async. Since this is inside of a parent async block,","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":1931,"byte_end":2014,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"/         // it will be provided with the executor of the parent block when the parent","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2015,"byte_end":2103,"line_start":44,"line_end":44,"column_start":1,"column_end":89}},{"value":"/         // block is executed.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2104,"byte_end":2137,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/         //","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2138,"byte_end":2152,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/         // This executor chaining is done by Future::poll whose second argument","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2153,"byte_end":2236,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"/         // is a std::task::Context. This represents our executor, and the Future","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2237,"byte_end":2321,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/         // implemented by this async block can be polled using the parent async","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2322,"byte_end":2405,"line_start":49,"line_end":49,"column_start":1,"column_end":84}},{"value":"/         // block's executor.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2406,"byte_end":2438,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/         let fut_tx_result = async move {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2439,"byte_end":2483,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/             (0..100).for_each(|v| {","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2484,"byte_end":2523,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/                 tx.unbounded_send(v).expect(\"Failed to send\");","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2524,"byte_end":2590,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/             })","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2591,"byte_end":2609,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/         };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2610,"byte_end":2624,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2625,"byte_end":2628,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/         // Use the provided thread pool to spawn the generated future","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2629,"byte_end":2702,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/         // responsible for transmission","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2703,"byte_end":2746,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/         pool.spawn_ok(fut_tx_result);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2747,"byte_end":2788,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2789,"byte_end":2792,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/         let fut_values = rx","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2793,"byte_end":2824,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/             .map(|v| v * 2)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2825,"byte_end":2856,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/             .collect();","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2857,"byte_end":2884,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2885,"byte_end":2888,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/         // Use the executor provided to this async block to wait for the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2889,"byte_end":2965,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/         // future to complete.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":2966,"byte_end":3000,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"/         fut_values.await","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3001,"byte_end":3029,"line_start":67,"line_end":67,"column_start":1,"column_end":29}},{"value":"/     };","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3030,"byte_end":3040,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3041,"byte_end":3044,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     // Actually execute the above future, which will invoke Future::poll and","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3045,"byte_end":3125,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/     // subsequently chain appropriate Future::poll and methods needing executors","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3126,"byte_end":3210,"line_start":71,"line_end":71,"column_start":1,"column_end":85}},{"value":"/     // to drive all futures. Eventually fut_values will be driven to completion.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3211,"byte_end":3295,"line_start":72,"line_end":72,"column_start":1,"column_end":85}},{"value":"/     let values: Vec<i32> = executor::block_on(fut_values);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3296,"byte_end":3358,"line_start":73,"line_end":73,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3359,"byte_end":3362,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     println!(\"Values={:?}\", values);","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3363,"byte_end":3403,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3404,"byte_end":3409,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3410,"byte_end":3417,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3418,"byte_end":3421,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ The majority of examples and code snippets in this crate assume that they are","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3422,"byte_end":3503,"line_start":79,"line_end":79,"column_start":1,"column_end":82}},{"value":"/ inside an async block as written above.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3504,"byte_end":3547,"line_start":80,"line_end":80,"column_start":1,"column_end":44}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":3592,"byte_end":3724,"line_start":83,"line_end":89,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":94},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5551,"byte_end":5559,"line_start":154,"line_end":154,"column_start":9,"column_end":17},"name":"executor","qualname":"::executor","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124}],"decl_id":null,"docs":" Built-in executors and related tools.","sig":null,"attributes":[{"value":"cfg(feature = \"executor\")","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5462,"byte_end":5490,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"/ Built-in executors and related tools.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5566,"byte_end":5607,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5612,"byte_end":5615,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ All asynchronous computation occurs within an executor, which is","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5620,"byte_end":5688,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/ capable of spawning futures as tasks. This module provides several","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5693,"byte_end":5763,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ built-in executors, as well as tools for building your own.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5768,"byte_end":5831,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5836,"byte_end":5839,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5844,"byte_end":5847,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This module is only available when the `executor` feature of this","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5852,"byte_end":5921,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ library is activated.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5926,"byte_end":5951,"line_start":163,"line_end":163,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5956,"byte_end":5959,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Using a thread pool (M:N task scheduling)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":5964,"byte_end":6011,"line_start":165,"line_end":165,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6016,"byte_end":6019,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Most of the time tasks should be executed on a [thread pool](ThreadPool).","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6024,"byte_end":6101,"line_start":167,"line_end":167,"column_start":5,"column_end":82}},{"value":"/ A small set of worker threads can handle a very large set of spawned tasks","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6106,"byte_end":6184,"line_start":168,"line_end":168,"column_start":5,"column_end":83}},{"value":"/ (which are much lighter weight than threads). Tasks spawned onto the pool","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6189,"byte_end":6266,"line_start":169,"line_end":169,"column_start":5,"column_end":82}},{"value":"/ with the [`spawn_ok`](ThreadPool::spawn_ok) function will run ambiently on","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6271,"byte_end":6349,"line_start":170,"line_end":170,"column_start":5,"column_end":83}},{"value":"/ the created threads.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6354,"byte_end":6378,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6383,"byte_end":6386,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Spawning additional tasks","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6391,"byte_end":6422,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6427,"byte_end":6430,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Tasks can be spawned onto a spawner by calling its [`spawn_obj`] method","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6435,"byte_end":6510,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ directly. In the case of `!Send` futures, [`spawn_local_obj`] can be used","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6515,"byte_end":6592,"line_start":176,"line_end":176,"column_start":5,"column_end":82}},{"value":"/ instead.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6597,"byte_end":6609,"line_start":177,"line_end":177,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6614,"byte_end":6617,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Single-threaded execution","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6622,"byte_end":6653,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6658,"byte_end":6661,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ In addition to thread pools, it's possible to run a task (and the tasks","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6666,"byte_end":6741,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ it spawns) entirely within a single thread via the [`LocalPool`] executor.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6746,"byte_end":6824,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/ Aside from cutting down on synchronization costs, this executor also makes","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6829,"byte_end":6907,"line_start":183,"line_end":183,"column_start":5,"column_end":83}},{"value":"/ it possible to spawn non-`Send` tasks, via [`spawn_local_obj`]. The","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6912,"byte_end":6983,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ [`LocalPool`] is best suited for running I/O-bound tasks that do relatively","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":6988,"byte_end":7067,"line_start":185,"line_end":185,"column_start":5,"column_end":84}},{"value":"/ little work between I/O operations.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7072,"byte_end":7111,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7116,"byte_end":7119,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ There is also a convenience function [`block_on`] for simply running a","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7124,"byte_end":7198,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ future to completion on the current thread.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7203,"byte_end":7250,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7255,"byte_end":7258,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`spawn_obj`]: https://docs.rs/futures/0.3/futures/task/trait.Spawn.html#tymethod.spawn_obj","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7263,"byte_end":7358,"line_start":191,"line_end":191,"column_start":5,"column_end":100}},{"value":"/ [`spawn_local_obj`]: https://docs.rs/futures/0.3/futures/task/trait.LocalSpawn.html#tymethod.spawn_local_obj","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":7363,"byte_end":7475,"line_start":192,"line_end":192,"column_start":5,"column_end":117}}]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8445,"byte_end":8452,"line_start":222,"line_end":222,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195}],"decl_id":null,"docs":" A \"prelude\" for crates using the `futures` crate.","sig":null,"attributes":[{"value":"/ A \"prelude\" for crates using the `futures` crate.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8459,"byte_end":8512,"line_start":223,"line_end":223,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8517,"byte_end":8520,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8525,"byte_end":8601,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ almost always want to import its entire contents, but unlike the","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8606,"byte_end":8674,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ standard library's prelude you'll have to do so manually:","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8679,"byte_end":8740,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8745,"byte_end":8748,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8753,"byte_end":8760,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8765,"byte_end":8795,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8800,"byte_end":8828,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8833,"byte_end":8840,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8845,"byte_end":8848,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.3.21/src/lib.rs","byte_start":8853,"byte_end":8927,"line_start":234,"line_end":234,"column_start":5,"column_end":79}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}