{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3","program":"/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","syn_mid","--edition=2018","/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=921b91d9596e8e1c","-C","extra-filename=-921b91d9596e8e1c","--out-dir","/home/tanpx/Desktop/rust-playground/zk-bellman/target/rls/debug/deps","-L","dependency=/home/tanpx/Desktop/rust-playground/zk-bellman/target/rls/debug/deps","--extern","proc_macro2=/home/tanpx/Desktop/rust-playground/zk-bellman/target/rls/debug/deps/libproc_macro2-6a8e5a8c221e8809.rmeta","--extern","quote=/home/tanpx/Desktop/rust-playground/zk-bellman/target/rls/debug/deps/libquote-0c44676fbe17c25c.rmeta","--extern","syn=/home/tanpx/Desktop/rust-playground/zk-bellman/target/rls/debug/deps/libsyn-2e68da6b2d250066.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tanpx/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/tanpx/Desktop/rust-playground/zk-bellman/target/rls/debug/deps/libsyn_mid-921b91d9596e8e1c.rmeta"},"prelude":{"crate_id":{"name":"syn_mid","disambiguator":[8363059834916112486,0]},"crate_root":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src","external_crates":[{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","num":20,"id":{"name":"proc_macro2","disambiguator":[59162973091548782,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","num":21,"id":{"name":"proc_macro","disambiguator":[17355562761581328522,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","num":22,"id":{"name":"unicode_ident","disambiguator":[3108285608507925168,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","num":23,"id":{"name":"syn","disambiguator":[5775645986527390197,0]}},{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","num":24,"id":{"name":"quote","disambiguator":[16951718151209149434,0]}}],"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":0,"byte_end":1586,"line_start":1,"line_end":58,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1403,"byte_end":1408,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":455},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1410,"byte_end":1415,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"alias_span":null,"name":"FnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1417,"byte_end":1423,"line_start":53,"line_end":53,"column_start":26,"column_end":32},"alias_span":null,"name":"ItemFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1425,"byte_end":1433,"line_start":53,"line_end":53,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":443},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1435,"byte_end":1444,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1466,"byte_end":1474,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"alias_span":null,"name":"FieldPat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":473},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1476,"byte_end":1479,"line_start":55,"line_end":55,"column_start":19,"column_end":22},"alias_span":null,"name":"Pat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1481,"byte_end":1489,"line_start":55,"line_end":55,"column_start":24,"column_end":32},"alias_span":null,"name":"PatIdent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":523},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1491,"byte_end":1498,"line_start":55,"line_end":55,"column_start":34,"column_end":41},"alias_span":null,"name":"PatPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1500,"byte_end":1512,"line_start":55,"line_end":55,"column_start":43,"column_end":55},"alias_span":null,"name":"PatReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1514,"byte_end":1523,"line_start":55,"line_end":55,"column_start":57,"column_end":66},"alias_span":null,"name":"PatStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":537},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1525,"byte_end":1533,"line_start":55,"line_end":55,"column_start":68,"column_end":76},"alias_span":null,"name":"PatTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1535,"byte_end":1549,"line_start":55,"line_end":55,"column_start":78,"column_end":92},"alias_span":null,"name":"PatTupleStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1559,"byte_end":1566,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"alias_span":null,"name":"PatType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1568,"byte_end":1575,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"alias_span":null,"name":"PatWild","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":0,"byte_end":1586,"line_start":1,"line_end":58,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":11},{"krate":0,"index":183},{"krate":0,"index":355},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432}],"decl_id":null,"docs":" Providing the features between \"full\" and \"derive\" of syn.","sig":null,"attributes":[{"value":"/ Providing the features between \"full\" and \"derive\" of syn.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":63,"byte_end":66,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides the following two unique data structures.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":67,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":133,"byte_end":136,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`syn_mid::ItemFn`] -- A function whose body is not parsed.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":137,"byte_end":202,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":203,"byte_end":206,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/   ```text","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":207,"byte_end":220,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/   fn process(n: usize) -> Result<()> { ... }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":221,"byte_end":269,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ^     ^","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":270,"byte_end":318,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/   ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":319,"byte_end":328,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":329,"byte_end":332,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * [`syn_mid::Block`] -- A block whose body is not parsed.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":333,"byte_end":394,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":395,"byte_end":398,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/   ```text","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":399,"byte_end":412,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/   { ... }","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":413,"byte_end":426,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/   ^     ^","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":427,"byte_end":440,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/   ```","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":441,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":451,"byte_end":454,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Other data structures are the same as data structures of [syn]. These are","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":455,"byte_end":532,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ defined in this crate because they cannot be used in [syn] without \"full\"","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":533,"byte_end":610,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ feature.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":611,"byte_end":623,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":624,"byte_end":627,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Optional features","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":628,"byte_end":651,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":652,"byte_end":655,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * **`clone-impls`** — Clone impls for all syntax tree types.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":656,"byte_end":722,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":723,"byte_end":726,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`syn_mid::ItemFn`]: ItemFn","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":727,"byte_end":758,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/ [`syn_mid::Block`]: Block","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":759,"byte_end":788,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/ [syn]: https://github.com/dtolnay/syn","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":789,"byte_end":830,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":993,"byte_end":1016,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"warn(future_incompatible, rust_2018_idioms, single_use_lifetimes,\nunreachable_pub)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1017,"byte_end":1103,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"warn(clippy :: all, clippy :: default_trait_access)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1104,"byte_end":1155,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"allow(clippy :: eval_order_dependence, clippy :: large_enum_variant)","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/lib.rs","byte_start":1156,"byte_end":1224,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4550,"byte_end":4556,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"ItemFn","qualname":"::func::ItemFn","value":"ItemFn { attrs, vis, sig, block }","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"decl_id":null,"docs":" A free-standing function: `fn process(n: usize) -> Result<()> { ...\n }`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":436},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4571,"byte_end":4576,"line_start":13,"line_end":13,"column_start":13,"column_end":18},"name":"attrs","qualname":"::func::ItemFn::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":437},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4606,"byte_end":4609,"line_start":14,"line_end":14,"column_start":13,"column_end":16},"name":"vis","qualname":"::func::ItemFn::vis","value":"syn::Visibility","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":438},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4635,"byte_end":4638,"line_start":15,"line_end":15,"column_start":13,"column_end":16},"name":"sig","qualname":"::func::ItemFn::sig","value":"func::Signature","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":439},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4663,"byte_end":4668,"line_start":16,"line_end":16,"column_start":13,"column_end":18},"name":"block","qualname":"::func::ItemFn::block","value":"std::boxed::Box<func::Block>","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":440},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4771,"byte_end":4776,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Block","qualname":"::func::Block","value":"Block { brace_token, stmts }","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"decl_id":null,"docs":" A braced block containing Rust statements.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":441},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4791,"byte_end":4802,"line_start":23,"line_end":23,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::func::Block::brace_token","value":"syn::token::Brace","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":442},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4864,"byte_end":4869,"line_start":25,"line_end":25,"column_start":13,"column_end":18},"name":"stmts","qualname":"::func::Block::stmts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Statements in a block\n","sig":null,"attributes":[{"value":"/ Statements in a block","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":4826,"byte_end":4851,"line_start":24,"line_end":24,"column_start":9,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5020,"byte_end":5029,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"Signature","qualname":"::func::Signature","value":"Signature { constness, asyncness, unsafety, abi, fn_token, ident, generics, paren_token, inputs, variadic, output }","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"decl_id":null,"docs":" A function signature in a trait or implementation: `unsafe fn\n initialize(&self)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":444},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5044,"byte_end":5053,"line_start":33,"line_end":33,"column_start":13,"column_end":22},"name":"constness","qualname":"::func::Signature::constness","value":"std::option::Option<syn::token::Const>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":445},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5090,"byte_end":5099,"line_start":34,"line_end":34,"column_start":13,"column_end":22},"name":"asyncness","qualname":"::func::Signature::asyncness","value":"std::option::Option<syn::token::Async>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":446},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5136,"byte_end":5144,"line_start":35,"line_end":35,"column_start":13,"column_end":21},"name":"unsafety","qualname":"::func::Signature::unsafety","value":"std::option::Option<syn::token::Unsafe>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":447},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5182,"byte_end":5185,"line_start":36,"line_end":36,"column_start":13,"column_end":16},"name":"abi","qualname":"::func::Signature::abi","value":"std::option::Option<syn::Abi>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":448},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5212,"byte_end":5220,"line_start":37,"line_end":37,"column_start":13,"column_end":21},"name":"fn_token","qualname":"::func::Signature::fn_token","value":"syn::token::Fn","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":449},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5246,"byte_end":5251,"line_start":38,"line_end":38,"column_start":13,"column_end":18},"name":"ident","qualname":"::func::Signature::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":450},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5272,"byte_end":5280,"line_start":39,"line_end":39,"column_start":13,"column_end":21},"name":"generics","qualname":"::func::Signature::generics","value":"syn::Generics","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":451},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5304,"byte_end":5315,"line_start":40,"line_end":40,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::func::Signature::paren_token","value":"syn::token::Paren","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":452},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5343,"byte_end":5349,"line_start":41,"line_end":41,"column_start":13,"column_end":19},"name":"inputs","qualname":"::func::Signature::inputs","value":"syn::punctuated::Punctuated<func::FnArg, syn::token::Comma>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":453},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5393,"byte_end":5401,"line_start":42,"line_end":42,"column_start":13,"column_end":21},"name":"variadic","qualname":"::func::Signature::variadic","value":"std::option::Option<syn::Variadic>","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":454},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5433,"byte_end":5439,"line_start":43,"line_end":43,"column_start":13,"column_end":19},"name":"output","qualname":"::func::Signature::output","value":"syn::ReturnType","parent":{"krate":0,"index":443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":456},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5704,"byte_end":5712,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"name":"Receiver","qualname":"::func::FnArg::Receiver","value":"FnArg::Receiver(Receiver)","parent":{"krate":0,"index":455},"children":[],"decl_id":null,"docs":" The `self` argument of an associated method, whether taken by value\n or by reference.\n","sig":null,"attributes":[{"value":"/ The `self` argument of an associated method, whether taken by value","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5595,"byte_end":5666,"line_start":50,"line_end":50,"column_start":9,"column_end":80}},{"value":"/ or by reference.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5675,"byte_end":5695,"line_start":51,"line_end":51,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":459},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5795,"byte_end":5800,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"Typed","qualname":"::func::FnArg::Typed","value":"FnArg::Typed(PatType)","parent":{"krate":0,"index":455},"children":[],"decl_id":null,"docs":" A function argument accepted by pattern and type.\n","sig":null,"attributes":[{"value":"/ A function argument accepted by pattern and type.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5733,"byte_end":5786,"line_start":54,"line_end":54,"column_start":9,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":455},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5579,"byte_end":5584,"line_start":49,"line_end":49,"column_start":14,"column_end":19},"name":"FnArg","qualname":"::func::FnArg","value":"pub enum FnArg { Receiver(Receiver), Typed(PatType), }","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":459}],"decl_id":null,"docs":" An argument in a function signature: the `n: usize` in `fn f(n: usize)`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5950,"byte_end":5958,"line_start":62,"line_end":62,"column_start":16,"column_end":24},"name":"Receiver","qualname":"::func::Receiver","value":"Receiver { attrs, reference, mutability, self_token }","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"decl_id":null,"docs":" The `self` argument of an associated method, whether taken by value\n or by reference.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":469},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":5973,"byte_end":5978,"line_start":63,"line_end":63,"column_start":13,"column_end":18},"name":"attrs","qualname":"::func::Receiver::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":470},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":6008,"byte_end":6017,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"name":"reference","qualname":"::func::Receiver::reference","value":"std::option::Option<(syn::token::And, std::option::Option<syn::Lifetime>)>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":6070,"byte_end":6080,"line_start":65,"line_end":65,"column_start":13,"column_end":23},"name":"mutability","qualname":"::func::Receiver::mutability","value":"std::option::Option<syn::token::Mut>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":472},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":6115,"byte_end":6125,"line_start":66,"line_end":66,"column_start":13,"column_end":23},"name":"self_token","qualname":"::func::Receiver::self_token","value":"syn::token::SelfValue","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":474},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13170,"byte_end":13175,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"Ident","qualname":"::pat::Pat::Ident","value":"Pat::Ident(PatIdent)","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.\n","sig":null,"attributes":[{"value":"/ A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13089,"byte_end":13161,"line_start":13,"line_end":13,"column_start":9,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":477},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13242,"byte_end":13246,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"Path","qualname":"::pat::Pat::Path","value":"Pat::Path(PatPath)","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" A path pattern like `Color::Red`.\n","sig":null,"attributes":[{"value":"/ A path pattern like `Color::Red`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13196,"byte_end":13233,"line_start":16,"line_end":16,"column_start":9,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":480},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13311,"byte_end":13320,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"name":"Reference","qualname":"::pat::Pat::Reference","value":"Pat::Reference(PatReference)","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" A reference pattern: `&mut var`.\n","sig":null,"attributes":[{"value":"/ A reference pattern: `&mut var`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13266,"byte_end":13302,"line_start":19,"line_end":19,"column_start":9,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":483},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13417,"byte_end":13423,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"Struct","qualname":"::pat::Pat::Struct","value":"Pat::Struct(PatStruct)","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" A struct or struct variant pattern: `Variant { x, y, .. }`.\n","sig":null,"attributes":[{"value":"/ A struct or struct variant pattern: `Variant { x, y, .. }`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13345,"byte_end":13408,"line_start":22,"line_end":22,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":486},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13484,"byte_end":13489,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"Tuple","qualname":"::pat::Pat::Tuple","value":"Pat::Tuple(PatTuple)","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" A tuple pattern: `(a, b)`.\n","sig":null,"attributes":[{"value":"/ A tuple pattern: `(a, b)`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13445,"byte_end":13475,"line_start":25,"line_end":25,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13587,"byte_end":13598,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"name":"TupleStruct","qualname":"::pat::Pat::TupleStruct","value":"Pat::TupleStruct(PatTupleStruct)","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.\n","sig":null,"attributes":[{"value":"/ A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13510,"byte_end":13578,"line_start":28,"line_end":28,"column_start":9,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":492},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13676,"byte_end":13680,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"Type","qualname":"::pat::Pat::Type","value":"Pat::Type(PatType)","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" A type ascription pattern: `foo: f64`.\n","sig":null,"attributes":[{"value":"/ A type ascription pattern: `foo: f64`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13625,"byte_end":13667,"line_start":31,"line_end":31,"column_start":9,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":495},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13751,"byte_end":13755,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"Wild","qualname":"::pat::Pat::Wild","value":"Pat::Wild(PatWild)","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":" A pattern that matches any value: `_`.\n","sig":null,"attributes":[{"value":"/ A pattern that matches any value: `_`.","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13700,"byte_end":13742,"line_start":34,"line_end":34,"column_start":9,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":498},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13798,"byte_end":13813,"line_start":38,"line_end":38,"column_start":9,"column_end":24},"name":"__Nonexhaustive","qualname":"::pat::Pat::__Nonexhaustive","value":"Pat::__Nonexhaustive","parent":{"krate":0,"index":473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":473},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13075,"byte_end":13078,"line_start":12,"line_end":12,"column_start":14,"column_end":17},"name":"Pat","qualname":"::pat::Pat","value":"pub enum Pat {\n    Ident(PatIdent),\n    Path(PatPath),\n    Reference(PatReference),\n    Struct(PatStruct),\n    Tuple(PatTuple),\n    TupleStruct(PatTupleStruct),\n    Type(PatType),\n    Wild(PatWild),\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498}],"decl_id":null,"docs":" A pattern in a local binding, function signature, match expression, or\n various other places.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":518},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13930,"byte_end":13938,"line_start":44,"line_end":44,"column_start":16,"column_end":24},"name":"PatIdent","qualname":"::pat::PatIdent","value":"PatIdent { attrs, by_ref, mutability, ident }","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"decl_id":null,"docs":" A pattern that binds a new variable: `ref mut binding @ SUBPATTERN`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":519},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13953,"byte_end":13958,"line_start":45,"line_end":45,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatIdent::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":520},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":13988,"byte_end":13994,"line_start":46,"line_end":46,"column_start":13,"column_end":19},"name":"by_ref","qualname":"::pat::PatIdent::by_ref","value":"std::option::Option<syn::token::Ref>","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":521},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14029,"byte_end":14039,"line_start":47,"line_end":47,"column_start":13,"column_end":23},"name":"mutability","qualname":"::pat::PatIdent::mutability","value":"std::option::Option<syn::token::Mut>","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":522},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14074,"byte_end":14079,"line_start":48,"line_end":48,"column_start":13,"column_end":18},"name":"ident","qualname":"::pat::PatIdent::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":523},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14168,"byte_end":14175,"line_start":54,"line_end":54,"column_start":16,"column_end":23},"name":"PatPath","qualname":"::pat::PatPath","value":"PatPath { attrs, path }","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"decl_id":null,"docs":" A path pattern like `Color::Red`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":524},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14190,"byte_end":14195,"line_start":55,"line_end":55,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatPath::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":525},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14225,"byte_end":14229,"line_start":56,"line_end":56,"column_start":13,"column_end":17},"name":"path","qualname":"::pat::PatPath::path","value":"syn::Path","parent":{"krate":0,"index":523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14316,"byte_end":14328,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"name":"PatReference","qualname":"::pat::PatReference","value":"PatReference { attrs, and_token, mutability, pat }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":" A reference pattern: `&mut var`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":527},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14343,"byte_end":14348,"line_start":63,"line_end":63,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatReference::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":528},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14378,"byte_end":14387,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"name":"and_token","qualname":"::pat::PatReference::and_token","value":"syn::token::And","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":529},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14412,"byte_end":14422,"line_start":65,"line_end":65,"column_start":13,"column_end":23},"name":"mutability","qualname":"::pat::PatReference::mutability","value":"std::option::Option<syn::token::Mut>","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":530},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14457,"byte_end":14460,"line_start":66,"line_end":66,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::PatReference::pat","value":"std::boxed::Box<pat::Pat>","parent":{"krate":0,"index":526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":531},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14578,"byte_end":14587,"line_start":72,"line_end":72,"column_start":16,"column_end":25},"name":"PatStruct","qualname":"::pat::PatStruct","value":"PatStruct { attrs, path, brace_token, fields, dot2_token }","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" A struct or struct variant pattern: `Variant { x, y, .. }`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":532},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14602,"byte_end":14607,"line_start":73,"line_end":73,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatStruct::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":533},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14637,"byte_end":14641,"line_start":74,"line_end":74,"column_start":13,"column_end":17},"name":"path","qualname":"::pat::PatStruct::path","value":"syn::Path","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":534},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14661,"byte_end":14672,"line_start":75,"line_end":75,"column_start":13,"column_end":24},"name":"brace_token","qualname":"::pat::PatStruct::brace_token","value":"syn::token::Brace","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":535},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14700,"byte_end":14706,"line_start":76,"line_end":76,"column_start":13,"column_end":19},"name":"fields","qualname":"::pat::PatStruct::fields","value":"syn::punctuated::Punctuated<pat::FieldPat, syn::token::Comma>","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":536},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14753,"byte_end":14763,"line_start":77,"line_end":77,"column_start":13,"column_end":23},"name":"dot2_token","qualname":"::pat::PatStruct::dot2_token","value":"std::option::Option<syn::token::Dot2>","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14858,"byte_end":14866,"line_start":83,"line_end":83,"column_start":16,"column_end":24},"name":"PatTuple","qualname":"::pat::PatTuple","value":"PatTuple { attrs, paren_token, elems }","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"decl_id":null,"docs":" A tuple pattern: `(a, b)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":538},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14881,"byte_end":14886,"line_start":84,"line_end":84,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatTuple::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":539},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14916,"byte_end":14927,"line_start":85,"line_end":85,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::pat::PatTuple::paren_token","value":"syn::token::Paren","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":540},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":14955,"byte_end":14960,"line_start":86,"line_end":86,"column_start":13,"column_end":18},"name":"elems","qualname":"::pat::PatTuple::elems","value":"syn::punctuated::Punctuated<pat::Pat, syn::token::Comma>","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15101,"byte_end":15115,"line_start":92,"line_end":92,"column_start":16,"column_end":30},"name":"PatTupleStruct","qualname":"::pat::PatTupleStruct","value":"PatTupleStruct { attrs, path, pat }","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544}],"decl_id":null,"docs":" A tuple struct or tuple variant pattern: `Variant(x, y, .., z)`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":542},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15130,"byte_end":15135,"line_start":93,"line_end":93,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatTupleStruct::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":543},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15165,"byte_end":15169,"line_start":94,"line_end":94,"column_start":13,"column_end":17},"name":"path","qualname":"::pat::PatTupleStruct::path","value":"syn::Path","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":544},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15189,"byte_end":15192,"line_start":95,"line_end":95,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::PatTupleStruct::pat","value":"pat::PatTuple","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":545},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15289,"byte_end":15296,"line_start":101,"line_end":101,"column_start":16,"column_end":23},"name":"PatType","qualname":"::pat::PatType","value":"PatType { attrs, pat, colon_token, ty }","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":" A type ascription pattern: `foo: f64`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":546},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15311,"byte_end":15316,"line_start":102,"line_end":102,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatType::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":547},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15346,"byte_end":15349,"line_start":103,"line_end":103,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::PatType::pat","value":"std::boxed::Box<pat::Pat>","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":548},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15373,"byte_end":15384,"line_start":104,"line_end":104,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::pat::PatType::colon_token","value":"syn::token::Colon","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":549},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15409,"byte_end":15411,"line_start":105,"line_end":105,"column_start":13,"column_end":15},"name":"ty","qualname":"::pat::PatType::ty","value":"std::boxed::Box<syn::Type>","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":550},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15509,"byte_end":15516,"line_start":111,"line_end":111,"column_start":16,"column_end":23},"name":"PatWild","qualname":"::pat::PatWild","value":"PatWild { attrs, underscore_token }","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"decl_id":null,"docs":" A pattern that matches any value: `_`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":551},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15531,"byte_end":15536,"line_start":112,"line_end":112,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::PatWild::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":552},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15566,"byte_end":15582,"line_start":113,"line_end":113,"column_start":13,"column_end":29},"name":"underscore_token","qualname":"::pat::PatWild::underscore_token","value":"syn::token::Underscore","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15843,"byte_end":15851,"line_start":122,"line_end":122,"column_start":16,"column_end":24},"name":"FieldPat","qualname":"::pat::FieldPat","value":"FieldPat { attrs, member, colon_token, pat }","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"decl_id":null,"docs":" A single field in a struct pattern.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":554},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15866,"byte_end":15871,"line_start":123,"line_end":123,"column_start":13,"column_end":18},"name":"attrs","qualname":"::pat::FieldPat::attrs","value":"std::vec::Vec<syn::Attribute>","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":555},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15901,"byte_end":15907,"line_start":124,"line_end":124,"column_start":13,"column_end":19},"name":"member","qualname":"::pat::FieldPat::member","value":"syn::Member","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":556},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15929,"byte_end":15940,"line_start":125,"line_end":125,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::pat::FieldPat::colon_token","value":"std::option::Option<syn::token::Colon>","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":15973,"byte_end":15976,"line_start":126,"line_end":126,"column_start":13,"column_end":16},"name":"pat","qualname":"::pat::FieldPat::pat","value":"std::boxed::Box<pat::Pat>","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":6474,"byte_end":6479,"line_start":79,"line_end":79,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":6691,"byte_end":6700,"line_start":86,"line_end":86,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":8302,"byte_end":8308,"line_start":131,"line_end":131,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":8660,"byte_end":8665,"line_start":141,"line_end":141,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":9278,"byte_end":9286,"line_start":160,"line_end":160,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":10244,"byte_end":10249,"line_start":194,"line_end":194,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":10969,"byte_end":10978,"line_start":221,"line_end":221,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":11899,"byte_end":11905,"line_start":244,"line_end":244,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":12267,"byte_end":12275,"line_start":255,"line_end":255,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":16402,"byte_end":16405,"line_start":146,"line_end":146,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":21968,"byte_end":21975,"line_start":311,"line_end":311,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":22126,"byte_end":22134,"line_start":317,"line_end":317,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":22364,"byte_end":22373,"line_start":325,"line_end":325,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":22927,"byte_end":22941,"line_start":339,"line_end":339,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":23120,"byte_end":23127,"line_start":346,"line_end":346,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":23396,"byte_end":23403,"line_start":355,"line_end":355,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":23541,"byte_end":23549,"line_start":361,"line_end":361,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":23766,"byte_end":23778,"line_start":369,"line_end":369,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":24009,"byte_end":24017,"line_start":377,"line_end":377,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":6474,"byte_end":6479,"line_start":79,"line_end":79,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":440},"to":{"krate":23,"index":3878}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":6691,"byte_end":6700,"line_start":86,"line_end":86,"column_start":20,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":443},"to":{"krate":23,"index":3878}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":8302,"byte_end":8308,"line_start":131,"line_end":131,"column_start":20,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":435},"to":{"krate":23,"index":3878}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":8660,"byte_end":8665,"line_start":141,"line_end":141,"column_start":20,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":455},"to":{"krate":23,"index":3878}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":9278,"byte_end":9286,"line_start":160,"line_end":160,"column_start":20,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":468},"to":{"krate":23,"index":3878}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":10244,"byte_end":10249,"line_start":194,"line_end":194,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":440},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":10969,"byte_end":10978,"line_start":221,"line_end":221,"column_start":23,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":443},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":11899,"byte_end":11905,"line_start":244,"line_end":244,"column_start":23,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":435},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/func.rs","byte_start":12267,"byte_end":12275,"line_start":255,"line_end":255,"column_start":23,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":468},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":16402,"byte_end":16405,"line_start":146,"line_end":146,"column_start":20,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":473},"to":{"krate":23,"index":3878}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":21968,"byte_end":21975,"line_start":311,"line_end":311,"column_start":23,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":550},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":22126,"byte_end":22134,"line_start":317,"line_end":317,"column_start":23,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":518},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":22364,"byte_end":22373,"line_start":325,"line_end":325,"column_start":23,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":531},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":22927,"byte_end":22941,"line_start":339,"line_end":339,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":541},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":23120,"byte_end":23127,"line_start":346,"line_end":346,"column_start":23,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":545},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":23396,"byte_end":23403,"line_start":355,"line_end":355,"column_start":23,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":523},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":23541,"byte_end":23549,"line_start":361,"line_end":361,"column_start":23,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":537},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":23766,"byte_end":23778,"line_start":369,"line_end":369,"column_start":23,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":526},"to":{"krate":24,"index":117}},{"span":{"file_name":"/home/tanpx/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-mid-0.5.3/src/pat.rs","byte_start":24009,"byte_end":24017,"line_start":377,"line_end":377,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":553},"to":{"krate":24,"index":117}}]}